diff -Nru sqlite-3.6.23.1.orig/CMakeLists.txt sqlite-3.6.23.1/CMakeLists.txt
--- sqlite-3.6.23.1.orig/CMakeLists.txt	Thu Jan  1 00:00:00 1970
+++ sqlite-3.6.23.1/CMakeLists.txt	Tue Sep  7 13:16:05 2010
@@ -0,0 +1,42 @@
+project( Sqlite )
+cmake_minimum_required( VERSION 2.6 )
+
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
+
+if(STATIC_LIBRARY)
+    set(SQLITE3_STATIC 1)
+    set(LIBRARY_TYPE STATIC)
+    add_definitions(-DSQLITE3_STATIC_LIBS)
+else(STATIC_LIBRARY)
+    set(LIBRARY_TYPE SHARED)
+endif(STATIC_LIBRARY)
+
+configure_file(sqlite3.h ${CMAKE_CURRENT_BINARY_DIR}/sqlite3.h)
+configure_file(sqlite3.c ${CMAKE_CURRENT_BINARY_DIR}/sqlite3.c)
+include_directories(${CMAKE_CURRENT_BINARY_DIR})
+
+if(WINCE)
+    find_package(Wcecompat REQUIRED)
+    include_directories(${WCECOMPAT_INCLUDE_DIR})
+endif(WINCE)
+
+set( sqlite_HEADER ${CMAKE_CURRENT_BINARY_DIR}/sqlite3.h sqlite3ext.h )
+
+set( libsqlite_SRC ${CMAKE_CURRENT_BINARY_DIR}/sqlite3.c  )
+set( sqlite_SRC shell.c )
+
+add_library( libsqlite3 ${LIBRARY_TYPE}  ${libsqlite_SRC} )
+set_target_properties( libsqlite3 PROPERTIES OUTPUT_NAME "sqlite3" )
+
+if(WINCE)
+    target_link_libraries(libsqlite3 ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
+install( TARGETS libsqlite3 RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib )
+
+add_executable( sqlite3 ${sqlite_SRC} )
+target_link_libraries( sqlite3 libsqlite3 )
+
+install( TARGETS sqlite3 RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib )
+
+install( FILES ${sqlite_HEADER} DESTINATION include )
diff -Nru sqlite-3.6.23.1.orig/cmake/modules/FindWcecompat.cmake sqlite-3.6.23.1/cmake/modules/FindWcecompat.cmake
--- sqlite-3.6.23.1.orig/cmake/modules/FindWcecompat.cmake	Thu Jan  1 00:00:00 1970
+++ sqlite-3.6.23.1/cmake/modules/FindWcecompat.cmake	Tue Sep  7 13:16:45 2010
@@ -0,0 +1,33 @@
+# Try to find Wcecompat functionality
+# Once done this will define
+#
+#  WCECOMPAT_FOUND - system has Wcecompat
+#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory
+#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat
+#
+# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+  set(Wcecompat_FIND_QUIETLY TRUE)
+endif(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+
+find_path(WCECOMPAT_INCLUDE_DIR errno.h PATH_SUFFIXES wcecompat)
+
+set(WCECOMPAT_LIB_FOUND FALSE)
+
+if(WCECOMPAT_INCLUDE_DIR)
+    find_library(WCECOMPAT_LIBRARIES NAMES wcecompat wcecompatex )
+    if(WCECOMPAT_LIBRARIES)
+      set(WCECOMPAT_LIB_FOUND TRUE)
+    endif(WCECOMPAT_LIBRARIES)
+endif(WCECOMPAT_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(WCECOMPAT_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Wcecompat  DEFAULT_MSG  WCECOMPAT_LIBRARIES  WCECOMPAT_LIB_FOUND)
+
+mark_as_advanced(WCECOMPAT_INCLUDE_DIR  WCECOMPAT_LIBRARIES  WCECOMPAT_CONST  WCECOMPAT_LIB_FOUND)
diff -Nru sqlite-3.6.23.1.orig/shell.c sqlite-3.6.23.1/shell.c
--- sqlite-3.6.23.1.orig/shell.c	Tue Mar  9 21:48:16 2010
+++ sqlite-3.6.23.1/shell.c	Tue Sep  7 13:14:36 2010
@@ -21,7 +21,7 @@
 #include <string.h>
 #include <stdio.h>
 #include <assert.h>
-#include "sqlite3.h"
+#include <sqlite3.h>
 #include <ctype.h>
 #include <stdarg.h>
 
diff -Nru sqlite-3.6.23.1.orig/sqlite3.c sqlite-3.6.23.1/sqlite3.c
--- sqlite-3.6.23.1.orig/sqlite3.c	Mon Mar 29 19:51:07 2010
+++ sqlite-3.6.23.1/sqlite3.c	Tue Sep  7 13:17:23 2010
@@ -23,7 +23,19 @@
 # define SQLITE_PRIVATE static
 #endif
 #ifndef SQLITE_API
-# define SQLITE_API
+# ifdef _MSC_VER
+#cmakedefine SQLITE3_STATIC 1
+#  if defined(SQLITE3_STATIC)
+    /* No export/import for static libraries */
+#   define SQLITE_API
+#  elif defined(libsqlite3_EXPORTS)
+#   define SQLITE_API __declspec(dllexport)
+#  else
+#   define SQLITE_API __declspec(dllimport)
+#  endif
+# else
+#  define SQLITE_API
+# endif
 #endif
 /************** Begin file sqliteInt.h ***************************************/
 /*
@@ -11440,7 +11452,7 @@
 ** localtime_s().
 */
 #if !defined(HAVE_LOCALTIME_R) && !defined(HAVE_LOCALTIME_S) && \
-     defined(_MSC_VER) && defined(_CRT_INSECURE_DEPRECATE)
+     defined(_MSC_VER) && defined(_CRT_INSECURE_DEPRECATE) && !defined(_WIN32_WCE)
 #define HAVE_LOCALTIME_S 1
 #endif
 
@@ -28368,30 +28380,6 @@
 ** This section contains code for WinCE only.
 */
 /*
-** WindowsCE does not have a localtime() function.  So create a
-** substitute.
-*/
-struct tm *__cdecl localtime(const time_t *t)
-{
-  static struct tm y;
-  FILETIME uTm, lTm;
-  SYSTEMTIME pTm;
-  sqlite3_int64 t64;
-  t64 = *t;
-  t64 = (t64 + 11644473600)*10000000;
-  uTm.dwLowDateTime = (DWORD)(t64 & 0xFFFFFFFF);
-  uTm.dwHighDateTime= (DWORD)(t64 >> 32);
-  FileTimeToLocalFileTime(&uTm,&lTm);
-  FileTimeToSystemTime(&lTm,&pTm);
-  y.tm_year = pTm.wYear - 1900;
-  y.tm_mon = pTm.wMonth - 1;
-  y.tm_wday = pTm.wDayOfWeek;
-  y.tm_mday = pTm.wDay;
-  y.tm_hour = pTm.wHour;
-  y.tm_min = pTm.wMinute;
-  y.tm_sec = pTm.wSecond;
-  return &y;
-}
 
 /* This will never be called, but defined to make the code compile */
 #define GetTempPathA(a,b)
diff -Nru sqlite-3.6.23.1.orig/sqlite3.h sqlite-3.6.23.1/sqlite3.h
--- sqlite-3.6.23.1.orig/sqlite3.h	Mon Mar 29 19:51:07 2010
+++ sqlite-3.6.23.1/sqlite3.h	Tue Sep  7 13:16:33 2010
@@ -49,8 +49,21 @@
 # define SQLITE_EXTERN extern
 #endif
 
+#cmakedefine SQLITE3_STATIC 1
+
 #ifndef SQLITE_API
-# define SQLITE_API
+# ifdef _MSC_VER
+#  if defined(SQLITE3_STATIC)
+    /* No export/import for static libraries */
+#   define SQLITE_API
+#  elif defined(libsqlite3_EXPORTS)
+#   define SQLITE_API __declspec(dllexport)
+#  else
+#   define SQLITE_API __declspec(dllimport)
+#  endif
+# else
+#  define SQLITE_API
+# endif
 #endif
 
 

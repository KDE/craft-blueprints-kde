diff -Nru -x '*~' raptor2-2.0.8.orig/cmake/modules/FindYajl.cmake raptor2-2.0.8/cmake/modules/FindYajl.cmake
--- raptor2-2.0.8.orig/cmake/modules/FindYajl.cmake	1970-01-01 01:00:00.000000000 +0100
+++ raptor2-2.0.8/cmake/modules/FindYajl.cmake	2012-12-30 11:29:55.335385500 +0100
@@ -0,0 +1,26 @@
+# Try to find Yajl functionality
+# Once done this will define
+#
+#  YAJL_FOUND - system has Yajl
+#  YAJL_INCLUDE_DIR - Yajl include directory
+#  YAJL_LIBRARIES - Libraries needed to use Yajl
+#
+# Copyright (c) 2011, Patrick Spendrin, <ps_ml@gmx.de>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+if(YAJL_INCLUDE_DIR AND YAJL_FOUND)
+  set(YAJL_FIND_QUIETLY TRUE)
+endif(YAJL_INCLUDE_DIR AND YAJL_FOUND)
+
+set(YAJL_FOUND FALSE)
+
+find_path(YAJL_INCLUDE_DIR yajl/yajl_version.h)
+
+find_library(YAJL_LIBRARIES NAMES yajl yajl_s)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Yajl  DEFAULT_MSG  YAJL_LIBRARIES  YAJL_INCLUDE_DIR)
+
+mark_as_advanced(YAJL_INCLUDE_DIR YAJL_LIBRARIES YAJL_FOUND)
diff -Nru -x '*~' raptor2-2.0.8.orig/CMakeLists.txt raptor2-2.0.8/CMakeLists.txt
--- raptor2-2.0.8.orig/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ raptor2-2.0.8/CMakeLists.txt	2012-12-30 11:29:57.398351900 +0100
@@ -0,0 +1,220 @@
+project(raptor2)
+
+cmake_minimum_required(VERSION 2.8)
+
+
+set(RAPTOR_VERSION_MAJOR 2)
+set(RAPTOR_VERSION_MINOR 0)
+set(RAPTOR_VERSION_RELEASE 8)
+set(VERSION "\"${RAPTOR_VERSION_MAJOR}.${RAPTOR_VERSION_MINOR}.${RAPTOR_VERSION_RELEASE}\"")
+math(EXPR RAPTOR_VERSION_DECIMAL "${RAPTOR_VERSION_MAJOR} * 10000 + ${RAPTOR_VERSION_MINOR} * 100 + ${RAPTOR_VERSION_RELEASE}")
+
+set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)
+find_package(CURL REQUIRED)
+find_package(LibXml2 REQUIRED)
+find_package(LibXslt REQUIRED)
+find_package(Expat REQUIRED)
+find_package(Yajl REQUIRED)
+
+option(BUILD_STATIC "build static library" OFF)
+option(BUILD_TOOLS "build the tools" ON)
+option(BUILD_TESTS "build the tests" ON)
+
+if(BUILD_TESTS)
+    enable_testing()
+endif(BUILD_TESTS)
+
+include(ConfigureChecks.cmake)
+configure_file(src/raptor2.h.in ${CMAKE_BINARY_DIR}/raptor2.h @ONLY)
+
+if(MSVC)
+    add_definitions(-D_CRT_SECURE_NO_WARNINGS -wd4996 -Dstrcasecmp=stricmp -Dstrncasecmp=strnicmp)
+endif(MSVC)
+
+if(WIN32 AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
+    add_definitions(-Dstrcasecmp=stricmp -Dstrncasecmp=strnicmp)
+endif(WIN32 AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
+
+set(raptor2_SRCS
+    src/raptor_parse.c
+    src/raptor_serialize.c
+    src/raptor_rfc2396.c
+    src/raptor_uri.c
+    src/raptor_log.c
+    src/raptor_locator.c
+    src/raptor_namespace.c
+    src/raptor_qname.c
+    src/raptor_option.c
+    src/raptor_general.c
+    src/raptor_unicode.c
+    src/raptor_www.c
+    src/raptor_statement.c
+    src/raptor_term.c
+    src/raptor_sequence.c
+    src/raptor_stringbuffer.c
+    src/raptor_iostream.c
+    src/raptor_xml.c
+    src/raptor_xml_writer.c
+    src/raptor_set.c
+    src/turtle_common.c
+    src/raptor_turtle_writer.c
+    src/raptor_avltree.c
+    src/snprintf.c
+    src/raptor_json_writer.c
+    src/raptor_memstr.c
+    src/raptor_concepts.c
+    src/raptor_syntax_description.c
+)
+
+    if(LIBXML2_FOUND)
+        list(APPEND raptor2_SRCS
+            src/raptor_libxml.c
+        )
+    endif(LIBXML2_FOUND)
+
+    list(APPEND raptor2_SRCS
+        src/raptor_rdfxml.c
+        src/raptor_sax2.c
+        src/turtle_lexer.c
+        src/turtle_parser.c
+        src/ntriples_parse.c
+        src/raptor_rss_common.c
+        src/raptor_rss.c
+        src/raptor_grddl.c
+        src/raptor_guess.c
+        src/raptor_librdfa.c
+        src/raptor_json.c
+        src/raptor_serialize_rdfxml.c
+        src/raptor_serialize_ntriples.c
+        src/raptor_abbrev.c
+        src/raptor_serialize_rdfxmla.c
+        src/raptor_serialize_turtle.c
+        src/raptor_serialize_rss.c
+        src/raptor_serialize_dot.c
+        src/raptor_serialize_html.c
+        src/raptor_serialize_json.c
+        src/raptor_www_libxml.c
+        src/raptor_www_curl.c
+        src/raptor_www.c
+        src/strcasecmp.c
+        src/parsedate.c
+        librdfa/context.c
+        librdfa/curie.c
+        librdfa/iri.c
+        librdfa/language.c
+        librdfa/lists.c
+        librdfa/namespace.c
+        librdfa/rdfa.c
+        librdfa/rdfa_utils.c
+        librdfa/subject.c
+        librdfa/triple.c
+)
+
+if(NOT HAVE_STRTOK_R)
+    list(APPEND raptor2_SRCS
+        librdfa/strtok_r.c
+    )
+endif(NOT HAVE_STRTOK_R)
+
+set(raptor2_HDRS
+    src/raptor.h
+    ${CMAKE_BINARY_DIR}/raptor2.h
+)
+
+add_definitions(-DLIBRDFA_IN_RAPTOR -DRAPTOR_INTERNAL)
+
+include_directories(
+    ${CMAKE_BINARY_DIR}
+    librdfa
+    src
+    utils
+    ${CURL_INCLUDE_DIR}
+    ${LIBXML2_INCLUDE_DIR}
+    ${YAJL_INCLUDE_DIR}
+    ${EXPAT_INCLUDE_DIR}
+)
+
+if(BUILD_STATIC)
+    add_definitions(-DRAPTOR_STATIC)
+    set(_SHARED STATIC)
+else(BUILD_STATIC)
+    set(_SHARED SHARED)
+endif(BUILD_STATIC)
+
+add_library(raptor2 ${_SHARED} ${raptor2_SRCS})
+set_target_properties(raptor2 PROPERTIES DEFINE_SYMBOL RAPTOR_EXPORTS)
+set(raptor2_LIBS ${CURL_LIBRARIES} ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES} ${EXPAT_LIBRARIES} ${YAJL_LIBRARIES})
+target_link_libraries(raptor2 ${raptor2_LIBS})
+
+set(_targets
+    raptor2
+)
+
+###############################################################################
+if(BUILD_TESTS OR BUILD_TOOLS)
+    add_library(raptor2_static STATIC ${raptor2_SRCS})
+    set_target_properties(raptor2_static PROPERTIES COMPILE_FLAGS "-DRAPTOR_STATIC")
+endif(BUILD_TESTS OR BUILD_TOOLS)
+###############################################################################
+if(BUILD_TESTS)
+    set(raptor_TESTS
+        raptor_parse
+        raptor_rfc2396
+        raptor_uri
+        raptor_namespace
+        strcasecmp
+        raptor_www
+        raptor_sequence
+        raptor_stringbuffer
+        raptor_uri_win32
+        raptor_iostream
+        raptor_xml_writer
+        raptor_turtle_writer
+        raptor_avltree
+        raptor_term
+        raptor_set
+        raptor_xml
+    )
+
+    set(raptor_parse_SRCS src/raptor_general.c src/raptor_parse.c)
+    set(raptor_uri_win32_SRCS src/raptor_uri.c)
+    set(raptor_www_SRCS src/raptor_www_test.c)
+    set(raptor_nfc_SRCS src/raptor_nfc_test.c)
+    foreach(_test ${raptor_TESTS})
+        if(NOT DEFINED ${_test}_SRCS)
+            set(${_test}_SRCS src/${_test}.c)
+        endif(NOT DEFINED ${_test}_SRCS)
+        add_executable(${_test} ${${_test}_SRCS})
+        set_target_properties(${_test} PROPERTIES COMPILE_FLAGS "-DSTANDALONE -DRAPTOR_STATIC")
+        target_link_libraries(${_test} raptor2_static ${raptor2_LIBS})
+        add_test(${_test} ${_test})
+    endforeach(_test ${raptor_TESTS})
+    set_target_properties(raptor_uri_win32 PROPERTIES COMPILE_FLAGS "-DSTANDALONE -DRAPTOR_STATIC -DWIN32_URI_TEST")
+endif(BUILD_TESTS)
+###############################################################################
+if(BUILD_TOOLS)
+    set(rapper_SRCS
+        utils/rapper.c
+    )
+    set(rdfdiff_SRCS
+        utils/rdfdiff.c
+    )
+    if(MSVC OR (WIN32 AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel"))
+        set(rapper_SRCS utils/getopt.c ${rapper_SRCS})
+        set(rdfdiff_SRCS utils/getopt.c ${rdfdiff_SRCS})
+    endif(MSVC OR (WIN32 AND "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel"))
+    add_executable(rapper ${rapper_SRCS})
+    set_target_properties(rapper PROPERTIES COMPILE_FLAGS "-DRAPTOR_STATIC")
+    target_link_libraries(rapper raptor2_static ${raptor2_LIBS})
+    add_executable(rdfdiff ${rdfdiff_SRCS})
+    set_target_properties(rdfdiff PROPERTIES COMPILE_FLAGS "-DRAPTOR_STATIC")
+    target_link_libraries(rdfdiff raptor2_static ${raptor2_LIBS})
+    list(APPEND _targets rapper rdfdiff)
+endif(BUILD_TOOLS)
+
+###############################################################################
+install(TARGETS ${_targets} RUNTIME DESTINATION bin
+                            LIBRARY DESTINATION lib
+                            ARCHIVE DESTINATION lib)
+
+install(FILES ${raptor2_HDRS} DESTINATION include/raptor2)
diff -Nru -x '*~' raptor2-2.0.8.orig/ConfigureChecks.cmake raptor2-2.0.8/ConfigureChecks.cmake
--- raptor2-2.0.8.orig/ConfigureChecks.cmake	1970-01-01 01:00:00.000000000 +0100
+++ raptor2-2.0.8/ConfigureChecks.cmake	2012-12-30 11:29:57.398351900 +0100
@@ -0,0 +1,102 @@
+#/* Have curl/curl.h * HAVE_CURL_CURL_H
+#/* INN parsedate function present * HAVE_INN_PARSEDATE
+
+include(CheckIncludeFile)
+include(CheckFunctionExists)
+check_include_file("dlfcn.h" HAVE_DLFCN_H)
+check_include_file("errno.h" HAVE_ERRNO_H)
+check_include_file("expat.h" HAVE_EXPAT_H)
+check_include_file("fcntl.h" HAVE_FCNTL_H)
+check_include_file("fetch.h" HAVE_FETCH_H)
+check_include_file("getopt.h" HAVE_GETOPT_H)
+check_include_file("inttypes.h" HAVE_INTTYPES_H)
+check_include_file("libxml/hash.h" HAVE_LIBXML_HASH_H)
+check_include_file("libxml/HTMLparser.h" HAVE_LIBXML_HTMLPARSER_H)
+check_include_file("libxml/nanohttp.h" HAVE_LIBXML_NANOHTTP_H)
+check_include_file("libxml/parser.h" HAVE_LIBXML_PARSER_H)
+check_include_file("libxml/SAX2.h" HAVE_LIBXML_SAX2_H)
+check_include_file("libxslt/xslt.h" HAVE_LIBXSLT_XSLT_H)
+check_include_file("limits.h" HAVE_LIMITS_H)
+check_include_file("math.h" HAVE_MATH_H)
+check_include_file("memory.h" HAVE_MEMORY_H)
+check_include_file("setjmp.h" HAVE_SETJMP_H)
+check_include_file("stdint.h" HAVE_STDINT_H)
+check_include_file("stdlib.h" HAVE_STDLIB_H)
+check_include_file("strings.h" HAVE_STRINGS_H)
+check_include_file("string.h" HAVE_STRING_H)
+check_include_file("sys/param.h" HAVE_SYS_PARAM_H)
+check_include_file("sys/stat.h" HAVE_SYS_STAT_H)
+check_include_file("sys/time.h" HAVE_SYS_TIME_H)
+check_include_file("sys/types.h" HAVE_SYS_TYPES_H)
+check_include_file("unistd.h" HAVE_UNISTD_H)
+check_include_file("xmlparse.h" HAVE_XMLPARSE_H)
+
+check_function_exists("getopt" HAVE_GETOPT)
+check_function_exists("getopt_long" HAVE_GETOPT_LONG)
+check_function_exists("gettimeofday" HAVE_GETTIMEOFDAY)
+check_function_exists("isascii" HAVE_ISASCII)
+check_function_exists("setjmp" HAVE_SETJMP)
+check_function_exists("strcasecmp" HAVE_STRCASECMP)
+check_function_exists("strtok_r" HAVE_STRTOK_R)
+check_function_exists("stricmp" HAVE_STRICMP)
+check_function_exists("vsnprintf" HAVE_VSNPRINTF)
+check_function_exists("xmlCtxtUseOptions" HAVE_XMLCTXTUSEOPTIONS)
+check_function_exists("xmlSAX2InternalSubset" HAVE_XMLSAX2INTERNALSUBSET)
+
+# need 'extern int optind' declaration? * NEED_OPTIND_DECLARATION
+
+set(PACKAGE "raptor2")
+set(PACKAGE_BUGREPORT "kde-windows@kde.org")
+set(PACKAGE_NAME "raptor2")
+set(PACKAGE_STRING "\"${PACKAGE} ${VERSION}\"")
+set(PACKAGE_TARNAME "$PACKAGE_STRING{}")
+set(PACKAGE_URL "http://windows.kde.org")
+set(PACKAGE_VERSION ${VERSION})
+
+# does libxml struct xmlEntity have a field etype * RAPTOR_LIBXML_ENTITY_ETYPE
+# does libxml struct xmlEntity have a field name_length * RAPTOR_LIBXML_ENTITY_NAME_LENGTH
+# does libxml have HTML_PARSE_NONET * RAPTOR_LIBXML_HTML_PARSE_NONET
+# does libxml xmlSAXHandler have externalSubset field * RAPTOR_LIBXML_XMLSAXHANDLER_EXTERNALSUBSET
+# does libxml xmlSAXHandler have initialized field * RAPTOR_LIBXML_XMLSAXHANDLER_INITIALIZED
+# does libxml have XML_PARSE_NONET * RAPTOR_LIBXML_XML_PARSE_NONET
+
+set(RAPTOR_MIN_VERSION_DECIMAL ${RAPTOR_VERSION_DECIMAL})
+set(RAPTOR_NFC_CHECK 1)
+set(RAPTOR_PARSER_GRDDL 1)
+set(RAPTOR_PARSER_GUESS 1)
+set(RAPTOR_PARSER_JSON 1)
+set(RAPTOR_PARSER_NQUADS 1)
+set(RAPTOR_PARSER_NTRIPLES 1)
+set(RAPTOR_PARSER_RDFA 1)
+set(RAPTOR_PARSER_RDFXML 1)
+set(RAPTOR_PARSER_RSS 1)
+set(RAPTOR_PARSER_TRIG 1)
+set(RAPTOR_PARSER_TURTLE 1)
+set(RAPTOR_SERIALIZER_ATOM 1)
+set(RAPTOR_SERIALIZER_DOT 1)
+set(RAPTOR_SERIALIZER_HTML 1)
+set(RAPTOR_SERIALIZER_JSON 1)
+set(RAPTOR_SERIALIZER_NQUADS 1)
+set(RAPTOR_SERIALIZER_NTRIPLES 1)
+set(RAPTOR_SERIALIZER_RDFXML 1)
+set(RAPTOR_SERIALIZER_RDFXML_ABBREV 1)
+set(RAPTOR_SERIALIZER_RSS_1_0 1)
+set(RAPTOR_SERIALIZER_TURTLE 1)
+
+set(RAPTOR_WWW_LIBCURL 1)
+# Have libfetch WWW library * RAPTOR_WWW_LIBFETCH
+set(RAPTOR_WWW_LIBXML 1)
+# No WWW library * RAPTOR_WWW_NONE
+set(RAPTOR_XML_1_1 1)
+set(RAPTOR_XML_EXPAT 0)
+# defined in win32_raptor_config.h
+#set(RAPTOR_XML_LIBXML 1)
+# The size of `unsigned char', as computed by sizeof. * SIZEOF_UNSIGNED_CHAR
+# The size of `unsigned int', as computed by sizeof. * SIZEOF_UNSIGNED_INT
+# The size of `unsigned long', as computed by sizeof. * SIZEOF_UNSIGNED_LONG
+# The size of `unsigned short', as computed by sizeof. * SIZEOF_UNSIGNED_SHORT
+set(STDC_HEADERS 1)
+
+configure_file(src/raptor_config.h.cmake ${CMAKE_BINARY_DIR}/raptor_config.h)
+add_definitions(-DHAVE_CONFIG_H)
+add_definitions(-DRAPTOR_PARSER_RDFA=1)
diff -Nru -x '*~' raptor2-2.0.8.orig/librdfa/strtok_r.h raptor2-2.0.8/librdfa/strtok_r.h
--- raptor2-2.0.8.orig/librdfa/strtok_r.h	2012-05-24 12:36:40.000000000 +0100
+++ raptor2-2.0.8/librdfa/strtok_r.h	2012-12-30 11:29:57.408366300 +0100
@@ -11,5 +11,5 @@
 
 #ifdef NEED_RDFA_STRTOK_R
 char *rdfa_strtok_r(char *str, const char *delim, char **saveptr);
-#  define strtok_r(s,d,p) rdfa_strtok_s(s,d,p)
+#  define strtok_r(s,d,p) rdfa_strtok_r(s,d,p)
 #endif
diff -Nru -x '*~' raptor2-2.0.8.orig/src/raptor_config.h.cmake raptor2-2.0.8/src/raptor_config.h.cmake
--- raptor2-2.0.8.orig/src/raptor_config.h.cmake	1970-01-01 01:00:00.000000000 +0100
+++ raptor2-2.0.8/src/raptor_config.h.cmake	2012-12-30 11:29:57.418380700 +0100
@@ -0,0 +1,342 @@
+/* src/raptor_config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define if building universal (internal helper macro) */
+#cmakedefine AC_APPLE_UNIVERSAL_BUILD @AC_APPLE_UNIVERSAL_BUILD@
+
+/* have to check C99 vsnprintf at runtime because cross compiling */
+#cmakedefine CHECK_VSNPRINTF_RUNTIME @CHECK_VSNPRINTF_RUNTIME@
+
+/* does expat crash when it sees an initial UTF8 BOM? */
+#cmakedefine EXPAT_UTF8_BOM_CRASH @EXPAT_UTF8_BOM_CRASH@
+
+/* vsnprint has C99 compatible return value */
+#cmakedefine HAVE_C99_VSNPRINTF @HAVE_C99_VSNPRINTF@
+
+/* Have curl/curl.h */
+#cmakedefine HAVE_CURL_CURL_H @HAVE_CURL_CURL_H@
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#cmakedefine HAVE_DLFCN_H @HAVE_DLFCN_H@
+
+/* Define to 1 if you have the <errno.h> header file. */
+#cmakedefine HAVE_ERRNO_H @HAVE_ERRNO_H@
+
+/* Define to 1 if you have the <expat.h> header file. */
+#cmakedefine HAVE_EXPAT_H @HAVE_EXPAT_H@
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#cmakedefine HAVE_FCNTL_H @HAVE_FCNTL_H@
+
+/* Define to 1 if you have the <fetch.h> header file. */
+#cmakedefine HAVE_FETCH_H @HAVE_FETCH_H@
+
+/* Define to 1 if you have the `getopt' function. */
+#cmakedefine HAVE_GETOPT @HAVE_GETOPT@
+
+/* Define to 1 if you have the <getopt.h> header file. */
+#cmakedefine HAVE_GETOPT_H @HAVE_GETOPT_H@
+
+/* Define to 1 if you have the `getopt_long' function. */
+#cmakedefine HAVE_GETOPT_LONG @HAVE_GETOPT_LONG@
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#cmakedefine HAVE_GETTIMEOFDAY @HAVE_GETTIMEOFDAY@
+
+/* INN parsedate function present */
+#cmakedefine HAVE_INN_PARSEDATE @HAVE_INN_PARSEDATE@
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@
+
+/* Define to 1 if you have the `isascii' function. */
+#cmakedefine HAVE_ISASCII @HAVE_ISASCII@
+
+/* Define to 1 if you have the <libxml/hash.h> header file. */
+#cmakedefine HAVE_LIBXML_HASH_H @HAVE_LIBXML_HASH_H@
+
+/* Define to 1 if you have the <libxml/HTMLparser.h> header file. */
+#cmakedefine HAVE_LIBXML_HTMLPARSER_H @HAVE_LIBXML_HTMLPARSER_H@
+
+/* Define to 1 if you have the <libxml/nanohttp.h> header file. */
+#cmakedefine HAVE_LIBXML_NANOHTTP_H @HAVE_LIBXML_NANOHTTP_H@
+
+/* Define to 1 if you have the <libxml/parser.h> header file. */
+#cmakedefine HAVE_LIBXML_PARSER_H @HAVE_LIBXML_PARSER_H@
+
+/* Define to 1 if you have the <libxml/SAX2.h> header file. */
+#cmakedefine HAVE_LIBXML_SAX2_H @HAVE_LIBXML_SAX2_H@
+
+/* Define to 1 if you have the <libxslt/xslt.h> header file. */
+#cmakedefine HAVE_LIBXSLT_XSLT_H @HAVE_LIBXSLT_XSLT_H@
+
+/* Define to 1 if you have the <limits.h> header file. */
+#cmakedefine HAVE_LIMITS_H @HAVE_LIMITS_H@
+
+/* Define to 1 if you have the <math.h> header file. */
+#cmakedefine HAVE_MATH_H @HAVE_MATH_H@
+
+/* Define to 1 if you have the <memory.h> header file. */
+#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@
+
+/* Raptor raptor_parse_date available */
+#cmakedefine HAVE_RAPTOR_PARSE_DATE @HAVE_RAPTOR_PARSE_DATE@
+
+/* have round() in libm */
+#cmakedefine HAVE_ROUND @HAVE_ROUND@
+
+/* Define to 1 if you have the `setjmp' function. */
+#cmakedefine HAVE_SETJMP @HAVE_SETJMP@
+
+/* Define to 1 if you have the <setjmp.h> header file. */
+#cmakedefine HAVE_SETJMP_H @HAVE_SETJMP_H@
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@
+
+/* Define to 1 if you have the `strcasecmp' function. */
+#cmakedefine HAVE_STRCASECMP @HAVE_STRCASECMP@
+
+/* Define to 1 if you have the `stricmp' function. */
+#cmakedefine HAVE_STRICMP @HAVE_STRICMP@
+
+/* Define to 1 if you have the <strings.h> header file. */
+#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@
+
+/* Define to 1 if you have the <string.h> header file. */
+#cmakedefine HAVE_STRING_H @HAVE_STRING_H@
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#cmakedefine HAVE_SYS_PARAM_H @HAVE_SYS_PARAM_H@
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#cmakedefine HAVE_SYS_TIME_H @HAVE_SYS_TIME_H@
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@
+
+/* have trunc() in libm */
+#cmakedefine HAVE_TRUNC @HAVE_TRUNC@
+
+/* Define to 1 if the system has the type `u16'. */
+#cmakedefine HAVE_U16 @HAVE_U16@
+
+/* Define to 1 if the system has the type `u8'. */
+#cmakedefine HAVE_U8 @HAVE_U8@
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@
+
+/* Define to 1 if you have the `vsnprintf' function. */
+#cmakedefine HAVE_VSNPRINTF @HAVE_VSNPRINTF@
+
+/* Define to 1 if you have the `xmlCtxtUseOptions' function. */
+#cmakedefine HAVE_XMLCTXTUSEOPTIONS @HAVE_XMLCTXTUSEOPTIONS@
+
+/* Define to 1 if you have the <xmlparse.h> header file. */
+#cmakedefine HAVE_XMLPARSE_H @HAVE_XMLPARSE_H@
+
+/* Define to 1 if you have the `xmlSAX2InternalSubset' function. */
+#cmakedefine HAVE_XMLSAX2INTERNALSUBSET @HAVE_XMLSAX2INTERNALSUBSET@
+
+/* Define to 1 if you have the <yajl/yajl_parse.h> header file. */
+#cmakedefine HAVE_YAJL_YAJL_PARSE_H @HAVE_YAJL_YAJL_PARSE_H@
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#cmakedefine LT_OBJDIR @LT_OBJDIR@
+
+/* need 'extern int optind' declaration? */
+#cmakedefine NEED_OPTIND_DECLARATION @NEED_OPTIND_DECLARATION@
+
+/* Define to 1 if your C compiler doesn't accept -c and -o together. */
+#cmakedefine NO_MINUS_C_MINUS_O @NO_MINUS_C_MINUS_O@
+
+/* Name of package */
+#cmakedefine PACKAGE @PACKAGE@
+
+/* Define to the address where bug reports for this package should be sent. */
+#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@
+
+/* Define to the full name of this package. */
+#cmakedefine PACKAGE_NAME @PACKAGE_NAME@
+
+/* Define to the full name and version of this package. */
+#cmakedefine PACKAGE_STRING @PACKAGE_STRING@
+
+/* Define to the one symbol short name of this package. */
+#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@
+
+/* Define to the home page for this package. */
+#cmakedefine PACKAGE_URL @PACKAGE_URL@
+
+/* Define to the version of this package. */
+#cmakedefine PACKAGE_VERSION @PACKAGE_VERSION@
+
+/* does libxml struct xmlEntity have a field etype */
+#cmakedefine RAPTOR_LIBXML_ENTITY_ETYPE @RAPTOR_LIBXML_ENTITY_ETYPE@
+
+/* does libxml struct xmlEntity have a field name_length */
+#cmakedefine RAPTOR_LIBXML_ENTITY_NAME_LENGTH @RAPTOR_LIBXML_ENTITY_NAME_LENGTH@
+
+/* does libxml have HTML_PARSE_NONET */
+#cmakedefine RAPTOR_LIBXML_HTML_PARSE_NONET @RAPTOR_LIBXML_HTML_PARSE_NONET@
+
+/* does libxml xmlSAXHandler have externalSubset field */
+#cmakedefine RAPTOR_LIBXML_XMLSAXHANDLER_EXTERNALSUBSET @RAPTOR_LIBXML_XMLSAXHANDLER_EXTERNALSUBSET@
+
+/* does libxml xmlSAXHandler have initialized field */
+#cmakedefine RAPTOR_LIBXML_XMLSAXHANDLER_INITIALIZED @RAPTOR_LIBXML_XMLSAXHANDLER_INITIALIZED@
+
+/* does libxml have XML_PARSE_NONET */
+#cmakedefine RAPTOR_LIBXML_XML_PARSE_NONET @RAPTOR_LIBXML_XML_PARSE_NONET@
+
+/* Minimum supported package version */
+#cmakedefine RAPTOR_MIN_VERSION_DECIMAL @RAPTOR_MIN_VERSION_DECIMAL@
+
+/* Provide a Unicode NFC check */
+#cmakedefine RAPTOR_NFC_CHECK @RAPTOR_NFC_CHECK@
+
+/* Building GRDDL parser */
+#cmakedefine RAPTOR_PARSER_GRDDL @RAPTOR_PARSER_GRDDL@
+
+/* Building guess parser */
+#cmakedefine RAPTOR_PARSER_GUESS @RAPTOR_PARSER_GUESS@
+
+/* Building JSON parser */
+#cmakedefine RAPTOR_PARSER_JSON @RAPTOR_PARSER_JSON@
+
+/* Building N-Quads parser */
+#cmakedefine RAPTOR_PARSER_NQUADS @RAPTOR_PARSER_NQUADS@
+
+/* Building N-Triples parser */
+#cmakedefine RAPTOR_PARSER_NTRIPLES @RAPTOR_PARSER_NTRIPLES@
+
+/* Building RDFA parser */
+#cmakedefine RAPTOR_PARSER_RDFA @RAPTOR_PARSER_RDFA@
+
+/* Building RDF/XML parser */
+#cmakedefine RAPTOR_PARSER_RDFXML @RAPTOR_PARSER_RDFXML@
+
+/* Building RSS Tag Soup parser */
+#cmakedefine RAPTOR_PARSER_RSS @RAPTOR_PARSER_RSS@
+
+/* Building TRiG parser */
+#cmakedefine RAPTOR_PARSER_TRIG @RAPTOR_PARSER_TRIG@
+
+/* Building Turtle parser */
+#cmakedefine RAPTOR_PARSER_TURTLE @RAPTOR_PARSER_TURTLE@
+
+/* Building Atom 1.0 serializer */
+#cmakedefine RAPTOR_SERIALIZER_ATOM @RAPTOR_SERIALIZER_ATOM@
+
+/* Building GraphViz DOT serializer */
+#cmakedefine RAPTOR_SERIALIZER_DOT @RAPTOR_SERIALIZER_DOT@
+
+/* Building HTML Table serializer */
+#cmakedefine RAPTOR_SERIALIZER_HTML @RAPTOR_SERIALIZER_HTML@
+
+/* Building JSON serializer */
+#cmakedefine RAPTOR_SERIALIZER_JSON @RAPTOR_SERIALIZER_JSON@
+
+/* Building N-Quads serializer */
+#cmakedefine RAPTOR_SERIALIZER_NQUADS @RAPTOR_SERIALIZER_NQUADS@
+
+/* Building N-Triples serializer */
+#cmakedefine RAPTOR_SERIALIZER_NTRIPLES @RAPTOR_SERIALIZER_NTRIPLES@
+
+/* Building RDF/XML serializer */
+#cmakedefine RAPTOR_SERIALIZER_RDFXML @RAPTOR_SERIALIZER_RDFXML@
+
+/* Building RDF/XML-abbreviated serializer */
+#cmakedefine RAPTOR_SERIALIZER_RDFXML_ABBREV @RAPTOR_SERIALIZER_RDFXML_ABBREV@
+
+/* Building RSS 1.0 serializer */
+#cmakedefine RAPTOR_SERIALIZER_RSS_1_0 @RAPTOR_SERIALIZER_RSS_1_0@
+
+/* Building Turtle serializer */
+#cmakedefine RAPTOR_SERIALIZER_TURTLE @RAPTOR_SERIALIZER_TURTLE@
+
+/* Release version as a decimal */
+#cmakedefine RAPTOR_VERSION_DECIMAL @RAPTOR_VERSION_DECIMAL@
+
+/* Major version number */
+#cmakedefine RAPTOR_VERSION_MAJOR @RAPTOR_VERSION_MAJOR@
+
+/* Minor version number */
+#cmakedefine RAPTOR_VERSION_MINOR @RAPTOR_VERSION_MINOR@
+
+/* Release version number */
+#cmakedefine RAPTOR_VERSION_RELEASE @RAPTOR_VERSION_RELEASE@
+
+/* Have libcurl WWW library */
+#cmakedefine RAPTOR_WWW_LIBCURL @RAPTOR_WWW_LIBCURL@
+
+/* Have libfetch WWW library */
+#cmakedefine RAPTOR_WWW_LIBFETCH @RAPTOR_WWW_LIBFETCH@
+
+/* Have libxml available as a WWW library */
+#cmakedefine RAPTOR_WWW_LIBXML @RAPTOR_WWW_LIBXML@
+
+/* No WWW library */
+#cmakedefine RAPTOR_WWW_NONE @RAPTOR_WWW_NONE@
+
+/* Check XML 1.1 Names */
+#cmakedefine RAPTOR_XML_1_1 @RAPTOR_XML_1_1@
+
+/* Use expat XML parser */
+#cmakedefine RAPTOR_XML_EXPAT @RAPTOR_XML_EXPAT@
+
+/* Use libxml XML parser */
+#cmakedefine RAPTOR_XML_LIBXML @RAPTOR_XML_LIBXML@
+
+/* The size of `unsigned char', as computed by sizeof. */
+#cmakedefine SIZEOF_UNSIGNED_CHAR @SIZEOF_UNSIGNED_CHAR@
+
+/* The size of `unsigned int', as computed by sizeof. */
+#cmakedefine SIZEOF_UNSIGNED_INT @SIZEOF_UNSIGNED_INT@
+
+/* The size of `unsigned long', as computed by sizeof. */
+#cmakedefine SIZEOF_UNSIGNED_LONG @SIZEOF_UNSIGNED_LONG@
+
+/* The size of `unsigned short', as computed by sizeof. */
+#cmakedefine SIZEOF_UNSIGNED_SHORT @SIZEOF_UNSIGNED_SHORT@
+
+/* Define to 1 if you have the ANSI C header files. */
+#cmakedefine STDC_HEADERS @STDC_HEADERS@
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#cmakedefine TIME_WITH_SYS_TIME @TIME_WITH_SYS_TIME@
+
+/* Version number of package */
+#cmakedefine VERSION @VERSION@
+
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
+# endif
+#else
+# ifndef WORDS_BIGENDIAN
+#  undef WORDS_BIGENDIAN
+# endif
+#endif
+
+/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
+   `char[]'. */
+#cmakedefine YYTEXT_POINTER @YYTEXT_POINTER@
+
+/* Number of bits in a file offset, on hosts where this is settable. */
+#cmakedefine _FILE_OFFSET_BITS @_FILE_OFFSET_BITS@
+
+/* Define for large files, on AIX-style hosts. */
+#cmakedefine _LARGE_FILES @_LARGE_FILES@
+
+/* Define to empty if `const' does not conform to ANSI C. */
+#cmakedefine const @const@
diff -Nru -x '*~' raptor2-2.0.8.orig/src/raptor2.h.in raptor2-2.0.8/src/raptor2.h.in
--- raptor2-2.0.8.orig/src/raptor2.h.in	2012-05-16 19:16:32.000000000 +0100
+++ raptor2-2.0.8/src/raptor2.h.in	2012-12-30 11:29:57.418380700 +0100
@@ -60,7 +60,9 @@
  *
  * Raptor library version string
  */
+#ifndef RAPTOR_VERSION_STRING
 #define RAPTOR_VERSION_STRING "@VERSION@"
+#endif
 
 /**
  * RAPTOR_VERSION_MAJOR:
@@ -98,7 +100,7 @@
 #    ifdef RAPTOR_STATIC
 #      define RAPTOR_API
 #    else
-#      ifdef RAPTOR_INTERNAL
+#      ifdef RAPTOR_EXPORTS
 #        define RAPTOR_API _declspec(dllexport)
 #      else
 #        define RAPTOR_API _declspec(dllimport)
diff -Nru -x '*~' raptor2-2.0.8.orig/src/win32_raptor_config.h raptor2-2.0.8/src/win32_raptor_config.h
--- raptor2-2.0.8.orig/src/win32_raptor_config.h	2012-06-25 03:12:39.000000000 +0100
+++ raptor2-2.0.8/src/win32_raptor_config.h	2012-12-30 11:29:57.428395100 +0100
@@ -115,7 +115,7 @@
 
 #define RAPTOR_PARSER_GUESS 1
 #define RAPTOR_PARSER_GRDDL 1
-#define RAPTOR_PARSER_N3 1
+//#define RAPTOR_PARSER_N3 1
 #define RAPTOR_PARSER_TURTLE 1
 #define RAPTOR_PARSER_NTRIPLES 1
 #define RAPTOR_PARSER_RDFXML 1

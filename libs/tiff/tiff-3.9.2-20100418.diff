diff -Nru tiff-3.9.2.orig/CMakeLists.txt tiff-3.9.2/CMakeLists.txt
--- tiff-3.9.2.orig/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/CMakeLists.txt	2012-01-14 14:38:26.096145000 +0100
@@ -0,0 +1,45 @@
+project(libtiff)
+
+cmake_minimum_required(VERSION 2.6)
+
+option(BUILD_TOOLS "build the tools" OFF)
+option(BUILD_TESTS "build the tests" OFF)
+
+if(BUILD_TESTS)
+    enable_testing()
+endif(BUILD_TESTS)
+
+include_directories(
+    ${CMAKE_SOURCE_DIR}/libtiff 
+    ${CMAKE_SOURCE_DIR}/port 
+    ${CMAKE_BINARY_DIR}
+    ${CMAKE_BINARY_DIR}/libtiff
+)
+
+include(ConfigureChecks.cmake)
+
+if(MSVC)
+    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
+    add_definitions(-D_CRT_SECURE_NO_DEPRECATE)
+    if(NOT MSVC60)
+        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4996")
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4996")
+    endif(NOT MSVC60)
+endif(MSVC)
+
+include_directories(
+    ${CMAKE_SOURCE_DIR}/libtiff 
+    ${CMAKE_BINARY_DIR}
+    ${CMAKE_BINARY_DIR}/libtiff
+)
+
+add_subdirectory(libtiff)
+add_subdirectory(man)
+if(BUILD_TOOLS)
+    add_subdirectory(port)
+    add_subdirectory(tools)
+endif(BUILD_TOOLS)
+
+if(BUILD_TESTS)
+    add_subdirectory(tests)
+endif(BUILD_TESTS)
diff -Nru tiff-3.9.2.orig/ConfigureChecks.cmake tiff-3.9.2/ConfigureChecks.cmake
--- tiff-3.9.2.orig/ConfigureChecks.cmake	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/ConfigureChecks.cmake	2012-01-14 14:38:26.096145000 +0100
@@ -0,0 +1,179 @@
+# configure checks.
+find_package(OpenGL)
+
+include_directories(${CMAKE_BINARY_DIR})
+
+# options
+if(APPLE)
+    set(AC_APPLE_UNIVERSAL_BUILD 1)
+endif(APPLE)
+
+option(CCITT_SUPPORT "CCITT Group 3 & 4 algorithms" ON)
+option(LOGLUV_SUPPORT "LogLuv high dynamic range encoding" ON)
+option(CXX_SUPPORT "C++ stream API (requires C++ compiler)" OFF)
+option(LZW_SUPPORT "LZW algorithm" ON)
+option(JBIG_SUPPORT "ISO JBIG compression (requires JBIG-KIT library)" OFF)
+option(MDI_SUPPORT "Microsoft Document Imaging format" OFF)
+option(NEXT_SUPPORT "NeXT 2-bit RLE algorithm" ON)
+option(SUBIFD_SUPPORT "SubIFD tag (330) support" ON)
+option(THUNDER_SUPPORT "ThunderScan 4-bit RLE algorithm" ON)
+option(OJPEG_SUPPORT "Old JPEG compresson (read-only)" OFF)
+option(PACKBITS_SUPPORT "Macintosh PackBits algorithm" ON)
+
+option(CHECK_JPEG_YCBCR_SUBSAMPLING 1)
+option(DEFAULT_EXTRASAMPLE_AS_ALPHA "Treat extra sample as alpha" ON)
+
+
+if(WIN32)
+    set(X_DISPLAY_MISSING 1)
+else(WIN32)
+    set(STDC_HEADERS 1)
+    set(HAVE_LIBC 1)
+    set(HAVE_LIBM 1)
+    set(HAVE_PTHREAD 1)
+endif(WIN32)
+
+if(NOT WINCE)
+    set(HAVE_IEEEFP 1)
+endif(NOT WINCE)
+
+if(MSVC)
+    set(inline "__inline")
+else(MSVC)
+    set(inline "inline")
+endif(MSVC)
+
+include(CheckIncludeFiles)
+include(CheckFunctionExists)
+include(CheckLibraryExists)
+include(CheckSymbolExists)
+include(CheckTypeSize)
+include(TestBigEndian)
+
+test_big_endian(HOST_BIGENDIAN)
+
+if(HOST_BIGENDIAN)
+    set(HOST_FILLORDER "FILLORDER_MSB2LSB")
+else(HOST_BIGENDIAN)
+    set(HOST_FILLORDER "FILLORDER_LSB2MSB")
+endif(HOST_BIGENDIAN)
+
+
+
+check_include_files("assert.h" HAVE_ASSERT_H)
+check_include_files("dlfcn.h" HAVE_DLFCN_H)
+check_include_files("fcntl.h" HAVE_FCNTL_H)
+check_include_files("inttypes.h" HAVE_INTTYPES_H)
+check_include_files("io.h" HAVE_IO_H)
+check_include_files("limits.h" HAVE_LIMITS_H)
+check_include_files("malloc.h" HAVE_MALLOC_H)
+check_include_files("memory.h" HAVE_MEMORY_H)
+check_include_files("search.h" HAVE_SEARCH_H)
+check_include_files("stdint.h" HAVE_STDINT_H)
+check_include_files("stdlib.h" HAVE_STDLIB_H)
+check_include_files("strings.h" HAVE_STRINGS_H)
+check_include_files("string.h" HAVE_STRING_H)
+check_include_files("sys/stat.h" HAVE_SYS_STAT_H)
+check_include_files("sys/time.h" HAVE_SYS_TIME_H)
+check_include_files("sys/types.h" HAVE_SYS_TYPES_H)
+check_include_files("unistd.h" HAVE_UNISTD_H)
+check_include_files("windows.h" HAVE_WINDOWS_H)
+
+check_function_exists("floor" HAVE_FLOOR)
+check_function_exists("getopt" HAVE_GETOPT)
+check_function_exists("isascii" HAVE_ISASCII)
+check_function_exists("jbg_newlen" HAVE_JBG_NEWLEN)
+check_function_exists("lfind" HAVE_LFIND)
+check_function_exists("memmove" HAVE_MEMMOVE)
+check_function_exists("memset" HAVE_MEMSET)
+check_function_exists("mmap" HAVE_MMAP)
+check_function_exists("pow" HAVE_POW)
+check_function_exists("setmode" HAVE_SETMODE)
+check_function_exists("sqrt" HAVE_SQRT)
+check_function_exists("strcasecmp" HAVE_STRCASECMP)
+check_function_exists("strchr" HAVE_STRCHR)
+check_function_exists("strrchr" HAVE_STRRCHR)
+check_function_exists("strstr" HAVE_STRSTR)
+check_function_exists("strtol" HAVE_STRTOL)
+check_function_exists("strtoul" HAVE_STRTOUL)
+
+check_symbol_exists("int8" "stdint.h" HAVE_INT8)
+check_symbol_exists("int16" "stdint.h" HAVE_INT16)
+check_symbol_exists("int32" "stdint.h" HAVE_INT32)
+
+
+set(PACKAGE "tiff")
+set(PACKAGE_BUGREPORT "tiff@lists.maptools.org")
+set(PACKAGE_NAME "LibTIFF Software")
+set(PACKAGE_STRING "LibTIFF Software 3.9.2")
+set(PACKAGE_TARNAME "tiff")
+set(PACKAGE_URL "http://www.libtiff.org/")
+set(PACKAGE_VERSION "3.9.2")
+set(VERSION "3.9.2")
+
+
+find_package(JPEG)
+find_package(ZLIB)
+
+if(HAVE_JPEG)
+    include_directories(${JPEG_INCLUDE_DIR})
+    option(JPEG_SUPPORT "JPEG compression" ON)
+endif(HAVE_JPEG)
+
+if(ZLIB_FOUND)
+    include_directories(${ZLIB_INCLUDE_DIR})
+    option(PIXARLOG_SUPPORT "Deflate compression" ON)
+    option(ZIP_SUPPORT "Pixar log-format algorithm" ON)
+endif(ZLIB_FOUND)
+
+CHECK_TYPE_SIZE("int" SIZEOF_INT)
+CHECK_TYPE_SIZE("long" SIZEOF_LONG)
+CHECK_TYPE_SIZE("signed long" SIZEOF_SIGNED_LONG)
+CHECK_TYPE_SIZE("signed long long" SIZEOF_SIGNED_LONG_LONG)
+CHECK_TYPE_SIZE("unsigned long" SIZEOF_UNSIGNED_LONG)
+CHECK_TYPE_SIZE("unsigned long long" SIZEOF_UNSIGNED_LONG_LONG)
+
+set(STRIPCHOP_DEFAULT "TIFF_STRIPCHOP")
+
+if(STRIPCHOP_DEFAULT AND NOT WIN32)
+    set(STRIP_SIZE_DEFAULT 8192)
+endif(STRIPCHOP_DEFAULT AND NOT WIN32)
+
+if(WIN32)
+    set(TIFF_INT64_FORMAT "\"%I64d\"")
+    set(TIFF_INT64_T "signed __int64")
+    set(TIFF_UINT64_FORMAT "\"%I64u\"")
+    set(TIFF_UINT64_T "unsigned __int64")
+endif(WIN32)
+
+check_symbol_exists("tm" "sys/time.h" TM_IN_SYS_TIME)
+
+check_symbol_exists("off_t" "sys/types.h" HAVE_OFF_T)
+if(NOT HAVE_OFF_T)
+    set(OFF_T "long int")
+endif(NOT HAVE_OFF_T)
+
+check_symbol_exists("size_t" "sys/types.h" HAVE_SIZE_T)
+if(NOT HAVE_SIZE_T)
+    set(SIZE_T "unsigned int")
+endif(NOT HAVE_SIZE_T)
+
+#***************************************************************************************
+# still to fix later
+#/* Define to necessary symbol if this constant uses a non-standard name on
+#   your system. */
+#cmakedefine PTHREAD_CREATE_JOINABLE
+
+#/* Define to 1 if your C compiler doesn't accept -c and -o together. */
+#cmakedefine NO_MINUS_C_MINUS_O
+
+#/* Number of bits in a file offset, on hosts where this is settable. */
+#cmakedefine _FILE_OFFSET_BITS
+
+#/* Define for large files, on AIX-style hosts. */
+#cmakedefine _LARGE_FILES
+#***************************************************************************************
+
+configure_file(${CMAKE_SOURCE_DIR}/libtiff/tif_config.h.cmake ${CMAKE_BINARY_DIR}/tif_config.h)
+configure_file(${CMAKE_SOURCE_DIR}/libtiff/tiffconf.h.cmake ${CMAKE_BINARY_DIR}/tiffconf.h)
+
diff -Nru tiff-3.9.2.orig/libtiff/CMakeLists.txt tiff-3.9.2/libtiff/CMakeLists.txt
--- tiff-3.9.2.orig/libtiff/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/libtiff/CMakeLists.txt	2012-01-14 14:38:26.106145400 +0100
@@ -0,0 +1,61 @@
+set(tiff_SRCS
+	tif_aux.c
+	tif_close.c
+	tif_codec.c
+	tif_color.c
+	tif_compress.c
+	tif_dir.c
+	tif_dirinfo.c
+	tif_dirread.c
+	tif_dirwrite.c
+	tif_dumpmode.c
+	tif_error.c
+	tif_extension.c
+	tif_fax3.c
+	tif_fax3sm.c
+	tif_flush.c
+	tif_getimage.c
+	tif_jbig.c
+	tif_jpeg.c
+	tif_luv.c
+	tif_lzw.c
+	tif_next.c
+	tif_ojpeg.c
+	tif_open.c
+	tif_packbits.c
+	tif_pixarlog.c
+	tif_predict.c
+	tif_print.c
+	tif_read.c
+	tif_strip.c
+	tif_swab.c
+	tif_thunder.c
+	tif_tile.c
+	tif_version.c
+	tif_warning.c
+	tif_write.c
+	tif_zip.c
+)
+
+if(WIN32)
+    set(tiff_SRCS ${tiff_SRCS} tif_win32.c libtiff.def)
+else(WIN32)
+    set(tiff_SRCS ${tiff_SRCS} tif_unix.c)
+endif(WIN32)
+
+add_library(tiff SHARED ${tiff_SRCS})
+set_target_properties(tiff PROPERTIES OUTPUT_NAME "tiff3")
+
+if(JPEG_FOUND)
+    target_link_libraries(tiff ${JPEG_LIBRARIES})
+endif(JPEG_FOUND)
+
+if(ZLIB_FOUND)
+    target_link_libraries(tiff ${ZLIB_LIBRARY})
+endif(ZLIB_FOUND)
+
+install(TARGETS tiff RUNTIME DESTINATION bin
+                     LIBRARY DESTINATION lib
+                     ARCHIVE DESTINATION lib)
+                     
+install(FILES tiffvers.h tiff.h ${CMAKE_BINARY_DIR}/tiffconf.h tiffio.h DESTINATION include)
\ Kein Zeilenumbruch am Dateiende.
diff -Nru tiff-3.9.2.orig/libtiff/tif_config.h.cmake tiff-3.9.2/libtiff/tif_config.h.cmake
--- tiff-3.9.2.orig/libtiff/tif_config.h.cmake	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/libtiff/tif_config.h.cmake	2012-01-14 14:40:39.462143500 +0100
@@ -0,0 +1,320 @@
+/* libtiff/tif_config.h.in.  Generated from configure.ac by autoheader.  */
+#ifndef TIF_CONFIG_H
+#define TIF_CONFIG_H
+
+/* Define if building universal (internal helper macro) */
+#cmakedefine AC_APPLE_UNIVERSAL_BUILD
+
+/* Support CCITT Group 3 & 4 algorithms */
+#cmakedefine CCITT_SUPPORT
+
+/* Pick up YCbCr subsampling info from the JPEG data stream to support files
+   lacking the tag (default enabled). */
+#cmakedefine CHECK_JPEG_YCBCR_SUBSAMPLING
+
+/* Support C++ stream API (requires C++ compiler) */
+#cmakedefine CXX_SUPPORT
+
+/* Treat extra sample as alpha (default enabled). The RGBA interface will
+   treat a fourth sample with no EXTRASAMPLE_ value as being ASSOCALPHA. Many
+   packages produce RGBA files but don't mark the alpha properly. */
+#cmakedefine DEFAULT_EXTRASAMPLE_AS_ALPHA
+
+/* Use the Apple OpenGL framework. */
+#cmakedefine HAVE_APPLE_OPENGL_FRAMEWORK
+
+/* Define to 1 if you have the <assert.h> header file. */
+#cmakedefine HAVE_ASSERT_H
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#cmakedefine HAVE_DLFCN_H
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#cmakedefine HAVE_FCNTL_H @HAVE_FCNTL_H@
+
+/* Define to 1 if you have the `floor' function. */
+#cmakedefine HAVE_FLOOR
+
+/* Define to 1 if you have the `getopt' function. */
+#cmakedefine HAVE_GETOPT
+
+/* Define as 0 or 1 according to the floating point format suported by the
+   machine */
+#cmakedefine HAVE_IEEEFP
+
+/* Define to 1 if the system has the type `int16'. */
+#cmakedefine HAVE_INT16
+
+/* Define to 1 if the system has the type `int32'. */
+#cmakedefine HAVE_INT32
+
+/* Define to 1 if the system has the type `int8'. */
+#cmakedefine HAVE_INT8
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#cmakedefine HAVE_INTTYPES_H
+
+/* Define to 1 if you have the <io.h> header file. */
+#cmakedefine HAVE_IO_H @HAVE_IO_H@
+
+/* Define to 1 if you have the `isascii' function. */
+#cmakedefine HAVE_ISASCII
+
+/* Define to 1 if you have the `jbg_newlen' function. */
+#cmakedefine HAVE_JBG_NEWLEN
+
+/* Define to 1 if you have the `lfind' function. */
+#cmakedefine HAVE_LFIND
+
+/* Define to 1 if you have the `c' library (-lc). */
+#cmakedefine HAVE_LIBC
+
+/* Define to 1 if you have the `m' library (-lm). */
+#cmakedefine HAVE_LIBM
+
+/* Define to 1 if you have the <limits.h> header file. */
+#cmakedefine HAVE_LIMITS_H
+
+/* Define to 1 if you have the <malloc.h> header file. */
+#cmakedefine HAVE_MALLOC_H
+
+/* Define to 1 if you have the `memmove' function. */
+#cmakedefine HAVE_MEMMOVE
+
+/* Define to 1 if you have the <memory.h> header file. */
+#cmakedefine HAVE_MEMORY_H
+
+/* Define to 1 if you have the `memset' function. */
+#cmakedefine HAVE_MEMSET
+
+/* Define to 1 if you have the `mmap' function. */
+#cmakedefine HAVE_MMAP
+
+/* Define to 1 if you have the `pow' function. */
+#cmakedefine HAVE_POW
+
+/* Define if you have POSIX threads libraries and header files. */
+#cmakedefine HAVE_PTHREAD
+
+/* Define to 1 if you have the <search.h> header file. */
+#cmakedefine HAVE_SEARCH_H
+
+/* Define to 1 if you have the `setmode' function. */
+#cmakedefine HAVE_SETMODE
+
+/* Define to 1 if you have the `sqrt' function. */
+#cmakedefine HAVE_SQRT
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#cmakedefine HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#cmakedefine HAVE_STDLIB_H
+
+/* Define to 1 if you have the `strcasecmp' function. */
+#cmakedefine HAVE_STRCASECMP
+
+/* Define to 1 if you have the `strchr' function. */
+#cmakedefine HAVE_STRCHR
+
+/* Define to 1 if you have the <strings.h> header file. */
+#cmakedefine HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#cmakedefine HAVE_STRING_H
+
+/* Define to 1 if you have the `strrchr' function. */
+#cmakedefine HAVE_STRRCHR
+
+/* Define to 1 if you have the `strstr' function. */
+#cmakedefine HAVE_STRSTR
+
+/* Define to 1 if you have the `strtol' function. */
+#cmakedefine HAVE_STRTOL
+
+/* Define to 1 if you have the `strtoul' function. */
+#cmakedefine HAVE_STRTOUL
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#cmakedefine HAVE_SYS_STAT_H
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#cmakedefine HAVE_SYS_TIME_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#cmakedefine HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the <windows.h> header file. */
+#cmakedefine HAVE_WINDOWS_H
+
+/* Native cpu byte order: 1 if big-endian (Motorola) or 0 if little-endian
+   (Intel) */
+#cmakedefine01 HOST_BIGENDIAN
+
+/* Set the native cpu bit order (FILLORDER_LSB2MSB or FILLORDER_MSB2LSB) */
+#cmakedefine HOST_FILLORDER @HOST_FILLORDER@
+
+/* Support ISO JBIG compression (requires JBIG-KIT library) */
+#cmakedefine JBIG_SUPPORT
+
+/* Support JPEG compression (requires IJG JPEG library) */
+#cmakedefine JPEG_SUPPORT
+
+/* Support LogLuv high dynamic range encoding */
+#cmakedefine LOGLUV_SUPPORT
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#cmakedefine LT_OBJDIR
+
+/* Support LZW algorithm */
+#cmakedefine LZW_SUPPORT
+
+/* Support Microsoft Document Imaging format */
+#cmakedefine MDI_SUPPORT
+
+/* Support NeXT 2-bit RLE algorithm */
+#cmakedefine NEXT_SUPPORT
+
+/* Define to 1 if your C compiler doesn't accept -c and -o together. */
+#cmakedefine NO_MINUS_C_MINUS_O
+
+/* Support Old JPEG compresson (read-only) */
+#cmakedefine OJPEG_SUPPORT
+
+/* Name of package */
+#cmakedefine PACKAGE @PACKAGE@
+
+/* Define to the address where bug reports for this package should be sent. */
+#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@
+
+/* Define to the full name of this package. */
+#cmakedefine PACKAGE_NAME @PACKAGE_NAME@
+
+/* Define to the full name and version of this package. */
+#cmakedefine PACKAGE_STRING @PACKAGE_STRING@
+
+/* Define to the one symbol short name of this package. */
+#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@
+
+/* Define to the home page for this package. */
+#cmakedefine PACKAGE_URL @PACKAGE_URL@
+
+/* Define to the version of this package. */
+#cmakedefine PACKAGE_VERSION @PACKAGE_VERSION@
+
+/* Support Macintosh PackBits algorithm */
+#cmakedefine PACKBITS_SUPPORT
+
+/* Support Pixar log-format algorithm (requires Zlib) */
+#cmakedefine PIXARLOG_SUPPORT
+
+/* Define to necessary symbol if this constant uses a non-standard name on
+   your system. */
+#cmakedefine PTHREAD_CREATE_JOINABLE
+
+/* The size of `int', as computed by sizeof. */
+#cmakedefine SIZEOF_INT @SIZEOF_INT@
+
+/* The size of `long', as computed by sizeof. */
+#cmakedefine SIZEOF_LONG @SIZEOF_LONG@
+
+/* The size of `signed long', as computed by sizeof. */
+#cmakedefine SIZEOF_SIGNED_LONG @SIZEOF_SIGNED_LONG@
+
+/* The size of `signed long long', as computed by sizeof. */
+#cmakedefine SIZEOF_SIGNED_LONG_LONG @SIZEOF_SIGNED_LONG_LONG@
+
+/* The size of `unsigned long', as computed by sizeof. */
+#cmakedefine SIZEOF_UNSIGNED_LONG @SIZEOF_UNSIGNED_LONG@
+
+/* The size of `unsigned long long', as computed by sizeof. */
+#cmakedefine SIZEOF_UNSIGNED_LONG_LONG @SIZEOF_UNSIGNED_LONG_LONG@
+
+/* Define to 1 if you have the ANSI C header files. */
+#cmakedefine STDC_HEADERS
+
+/* Support strip chopping (whether or not to convert single-strip uncompressed
+   images to mutiple strips of specified size to reduce memory usage) */
+#cmakedefine STRIPCHOP_DEFAULT @STRIPCHOP_DEFAULT@
+
+/* Default size of the strip in bytes (when strip chopping enabled) */
+#cmakedefine STRIP_SIZE_DEFAULT @STRIP_SIZE_DEFAULT@
+
+/* Enable SubIFD tag (330) support */
+#cmakedefine SUBIFD_SUPPORT
+
+/* Support ThunderScan 4-bit RLE algorithm */
+#cmakedefine THUNDER_SUPPORT
+
+/* Signed 64-bit type formatter */
+#cmakedefine TIFF_INT64_FORMAT @TIFF_INT64_FORMAT@
+
+/* Signed 64-bit type */
+#cmakedefine TIFF_INT64_T @TIFF_INT64_T@
+
+/* Unsigned 64-bit type formatter */
+#cmakedefine TIFF_UINT64_FORMAT @TIFF_UINT64_FORMAT@
+
+/* Unsigned 64-bit type */
+#cmakedefine TIFF_UINT64_T @TIFF_UINT64_T@
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#cmakedefine TIME_WITH_SYS_TIME
+
+/* Define to 1 if your <sys/time.h> declares `struct tm'. */
+#cmakedefine TM_IN_SYS_TIME
+
+/* Version number of package */
+#cmakedefine VERSION @VERSION@
+
+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
+   significant byte first (like Motorola and SPARC, unlike Intel). */
+#if defined AC_APPLE_UNIVERSAL_BUILD
+# if defined __BIG_ENDIAN__
+#  define WORDS_BIGENDIAN 1
+# endif
+#else
+# ifndef WORDS_BIGENDIAN
+#  undef WORDS_BIGENDIAN
+# endif
+#endif
+
+/* Define to 1 if the X Window System is missing or not being used. */
+#cmakedefine X_DISPLAY_MISSING
+
+/* Support Deflate compression */
+#cmakedefine ZIP_SUPPORT
+
+/* Number of bits in a file offset, on hosts where this is settable. */
+#cmakedefine _FILE_OFFSET_BITS
+
+/* Define for large files, on AIX-style hosts. */
+#cmakedefine _LARGE_FILES
+
+/* Define to empty if `const' does not conform to ANSI C. */
+#cmakedefine const
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+#cmakedefine inline @inline@
+#endif
+
+/* Define to `long int' if <sys/types.h> does not define. */
+#cmakedefine off_t @off_t@
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+#cmakedefine size_t @size_t@
+
+#ifdef _MSC_VER
+#define lfind _lfind
+#endif
+
+#if !defined(HAVE_GETOPT) && !defined(HAVE_STRCASECMP)
+    #include "libport.h"
+#endif
+#endif
\ Kein Zeilenumbruch am Dateiende.
diff -Nru tiff-3.9.2.orig/libtiff/tiffconf.h.cmake tiff-3.9.2/libtiff/tiffconf.h.cmake
--- tiff-3.9.2.orig/libtiff/tiffconf.h.cmake	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/libtiff/tiffconf.h.cmake	2012-01-14 14:38:26.106145400 +0100
@@ -0,0 +1,103 @@
+/*
+  Configuration defines for installed libtiff.
+  This file maintained for backward compatibility. Do not use definitions
+  from this file in your programs.
+*/
+
+#ifndef _TIFFCONF_
+#define _TIFFCONF_
+
+/* Define to 1 if the system has the type `int16'. */
+#cmakedefine HAVE_INT16
+
+/* Define to 1 if the system has the type `int32'. */
+#cmakedefine HAVE_INT32
+
+/* Define to 1 if the system has the type `int8'. */
+#cmakedefine HAVE_INT8
+
+/* The size of a `int', as computed by sizeof. */
+#cmakedefine SIZEOF_INT @SIZEOF_INT@
+
+/* The size of a `long', as computed by sizeof. */
+#cmakedefine SIZEOF_LONG @SIZEOF_LONG@
+
+/* Compatibility stuff. */
+
+/* Define as 0 or 1 according to the floating point format suported by the
+   machine */
+#cmakedefine HAVE_IEEEFP
+
+/* Set the native cpu bit order (FILLORDER_LSB2MSB or FILLORDER_MSB2LSB) */
+#cmakedefine HOST_FILLORDER @HOST_FILLORDER@
+
+/* Native cpu byte order: 1 if big-endian (Motorola) or 0 if little-endian
+   (Intel) */
+#cmakedefine01 HOST_BIGENDIAN
+
+/* Support CCITT Group 3 & 4 algorithms */
+#cmakedefine CCITT_SUPPORT
+
+/* Support JPEG compression (requires IJG JPEG library) */
+#cmakedefine JPEG_SUPPORT
+
+/* Support JBIG compression (requires JBIG-KIT library) */
+#cmakedefine JBIG_SUPPORT
+
+/* Support LogLuv high dynamic range encoding */
+#cmakedefine LOGLUV_SUPPORT
+
+/* Support LZW algorithm */
+#cmakedefine LZW_SUPPORT
+
+/* Support NeXT 2-bit RLE algorithm */
+#cmakedefine NEXT_SUPPORT
+
+/* Support Old JPEG compresson (read contrib/ojpeg/README first! Compilation
+   fails with unpatched IJG JPEG library) */
+#cmakedefine OJPEG_SUPPORT
+
+/* Support Macintosh PackBits algorithm */
+#cmakedefine PACKBITS_SUPPORT
+
+/* Support Pixar log-format algorithm (requires Zlib) */
+#cmakedefine PIXARLOG_SUPPORT
+
+/* Support ThunderScan 4-bit RLE algorithm */
+#cmakedefine THUNDER_SUPPORT
+
+/* Support Deflate compression */
+#cmakedefine ZIP_SUPPORT
+
+/* Support strip chopping (whether or not to convert single-strip uncompressed
+   images to mutiple strips of ~8Kb to reduce memory usage) */
+#cmakedefine STRIPCHOP_DEFAULT @STRIPCHOP_DEFAULT@
+
+/* Enable SubIFD tag (330) support */
+#cmakedefine SUBIFD_SUPPORT
+
+/* Treat extra sample as alpha (default enabled). The RGBA interface will
+   treat a fourth sample with no EXTRASAMPLE_ value as being ASSOCALPHA. Many
+   packages produce RGBA files but don't mark the alpha properly. */
+#cmakedefine DEFAULT_EXTRASAMPLE_AS_ALPHA
+
+/* Pick up YCbCr subsampling info from the JPEG data stream to support files
+   lacking the tag (default enabled). */
+#cmakedefine CHECK_JPEG_YCBCR_SUBSAMPLING
+
+/* Support MS MDI magic number files as TIFF */
+#cmakedefine MDI_SUPPORT
+
+/*
+ * Feature support definitions.
+ * XXX: These macros are obsoleted. Don't use them in your apps!
+ * Macros stays here for backward compatibility and should be always defined.
+ */
+#define COLORIMETRY_SUPPORT
+#define YCBCR_SUPPORT
+#define CMYK_SUPPORT
+#define ICC_SUPPORT
+#define PHOTOSHOP_SUPPORT
+#define IPTC_SUPPORT
+
+#endif /* _TIFFCONF_ */
diff -Nru tiff-3.9.2.orig/man/CMakeLists.txt tiff-3.9.2/man/CMakeLists.txt
--- tiff-3.9.2.orig/man/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/man/CMakeLists.txt	2012-01-14 14:38:26.106145400 +0100
@@ -0,0 +1,73 @@
+set(tiff1_FILES
+    bmp2tiff.1
+    fax2ps.1
+    fax2tiff.1
+    gif2tiff.1
+    pal2rgb.1
+    ppm2tiff.1
+    ras2tiff.1
+    raw2tiff.1
+    rgb2ycbcr.1
+    sgi2tiff.1
+    thumbnail.1
+    tiff2bw.1
+    tiff2pdf.1
+    tiff2ps.1
+    tiff2rgba.1
+    tiffcmp.1
+    tiffcp.1
+    tiffcrop.1
+    tiffdither.1
+    tiffdump.1
+    tiffgt.1
+    tiffinfo.1
+    tiffmedian.1
+    tiffset.1
+    tiffsplit.1
+    tiffsv.1
+)
+set(tiff3_FILES
+    libtiff.3tiff
+    TIFFbuffer.3tiff
+    TIFFClose.3tiff
+    TIFFcodec.3tiff
+    TIFFcolor.3tiff
+    TIFFDataWidth.3tiff
+    TIFFError.3tiff
+    TIFFFlush.3tiff
+    TIFFGetField.3tiff
+    TIFFmemory.3tiff
+    TIFFOpen.3tiff
+    TIFFPrintDirectory.3tiff
+    TIFFquery.3tiff
+    TIFFReadDirectory.3tiff
+    TIFFReadEncodedStrip.3tiff
+    TIFFReadEncodedTile.3tiff
+    TIFFReadRawStrip.3tiff
+    TIFFReadRawTile.3tiff
+    TIFFReadRGBAImage.3tiff
+    TIFFReadRGBAStrip.3tiff
+    TIFFReadRGBATile.3tiff
+    TIFFReadScanline.3tiff
+    TIFFReadTile.3tiff
+    TIFFRGBAImage.3tiff
+    TIFFSetDirectory.3tiff
+    TIFFSetField.3tiff
+    TIFFsize.3tiff
+    TIFFstrip.3tiff
+    TIFFswab.3tiff
+    TIFFtile.3tiff
+    TIFFWarning.3tiff
+    TIFFWriteDirectory.3tiff
+    TIFFWriteEncodedStrip.3tiff
+    TIFFWriteEncodedTile.3tiff
+    TIFFWriteRawStrip.3tiff
+    TIFFWriteRawTile.3tiff
+    TIFFWriteScanline.3tiff
+    TIFFWriteTile.3tiff
+)
+
+if(BUILD_TOOLS)
+    install(FILES ${tiff1_FILES} DESTINATION share/man/man1)
+endif(BUILD_TOOLS)
+install(FILES ${tiff3_FILES} DESTINATION share/man/man3)
\ Kein Zeilenumbruch am Dateiende.
diff -Nru tiff-3.9.2.orig/port/CMakeLists.txt tiff-3.9.2/port/CMakeLists.txt
--- tiff-3.9.2.orig/port/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/port/CMakeLists.txt	2012-01-14 14:38:26.106145400 +0100
@@ -0,0 +1,19 @@
+if(NOT WIN32)
+    set(port_SRCS
+        dummy.c
+    )
+else(NOT WIN32)
+    set(port_SRCS
+        strcasecmp.c
+        getopt.c
+    )
+endif(NOT WIN32)
+
+if(NOT HAVE_LFIND)
+    set(port_SRCS ${port_SRCS} lfind.c)
+endif(NOT HAVE_LFIND)
+if(NOT HAVE_STRTOUL)
+    set(port_SRCS ${port_SRCS} strtoul.c)
+endif(NOT HAVE_STRTOUL)
+
+add_library(port ${port_SRCS})
\ Kein Zeilenumbruch am Dateiende.
diff -Nru tiff-3.9.2.orig/test/ascii_tag.c tiff-3.9.2/test/ascii_tag.c
--- tiff-3.9.2.orig/test/ascii_tag.c	2006-03-23 15:54:02.000000000 +0100
+++ tiff-3.9.2/test/ascii_tag.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,170 +0,0 @@
-/* $Id: ascii_tag.c,v 1.5 2006/03/23 14:54:02 dron Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Module to test ASCII tags read/write functions.
- */
-
-#include "tif_config.h"
-
-#include <stdio.h>
-#include <string.h>
-
-#ifdef HAVE_UNISTD_H 
-# include <unistd.h> 
-#endif 
-
-#include "tiffio.h"
-
-const char	*filename = "ascii_test.tiff";
-
-static struct Tags {
-	ttag_t		tag;
-	const char	*value;
-} ascii_tags[] = {
-	{ TIFFTAG_DOCUMENTNAME, "Test TIFF image" },
-	{ TIFFTAG_IMAGEDESCRIPTION, "Temporary test image" },
-	{ TIFFTAG_MAKE, "This is not scanned image" },
-	{ TIFFTAG_MODEL, "No scanner" },
-	{ TIFFTAG_PAGENAME, "Test page" },
-	{ TIFFTAG_SOFTWARE, "Libtiff library" },
-	{ TIFFTAG_DATETIME, "2004:09:10 16:09:00" },
-	{ TIFFTAG_ARTIST, "Andrey V. Kiselev" },
-	{ TIFFTAG_HOSTCOMPUTER, "Debian GNU/Linux (Sarge)" },
-	{ TIFFTAG_TARGETPRINTER, "No printer" },
-	{ TIFFTAG_PIXAR_TEXTUREFORMAT, "No texture" },
-	{ TIFFTAG_PIXAR_WRAPMODES, "No wrap" },
-	{ TIFFTAG_COPYRIGHT, "Copyright (c) 2004, Andrey Kiselev" }
-};
-#define NTAGS   (sizeof (ascii_tags) / sizeof (ascii_tags[0]))
-
-const char *ink_names = "Red\0Green\0Blue";
-const int ink_names_size = 15;
-
-int
-main(int argc, char **argv)
-{
-	TIFF		*tif;
-	int		i;
-	unsigned char	buf[3] = { 0, 127, 255 };
-	char		*value;
-
-	/* Test whether we can write tags. */
-	tif = TIFFOpen(filename, "w");
-	if (!tif) {
-		fprintf (stderr, "Can't create test TIFF file %s.\n", filename);
-		return 1;
-	}
-
-	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, 1)) {
-		fprintf (stderr, "Can't set ImageWidth tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, 1)) {
-		fprintf (stderr, "Can't set ImageLength tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, 8)) {
-		fprintf (stderr, "Can't set BitsPerSample tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, 3)) {
-		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, PLANARCONFIG_CONTIG)) {
-		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, PHOTOMETRIC_RGB)) {
-		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
-		goto failure;
-	}
-
-	for (i = 0; i < NTAGS; i++) {
-		if (!TIFFSetField(tif, ascii_tags[i].tag,
-				  ascii_tags[i].value)) {
-			fprintf(stderr, "Can't set tag %d.\n",
-				(int)ascii_tags[i].tag);
-			goto failure;
-		}
-	}
-
-	/* InkNames tag has special form, so we handle it separately. */
-	if (!TIFFSetField(tif, TIFFTAG_NUMBEROFINKS, 3)) {
-		fprintf (stderr, "Can't set tag %d.\n", TIFFTAG_NUMBEROFINKS);
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_INKNAMES, ink_names_size, ink_names)) {
-		fprintf (stderr, "Can't set tag %d.\n", TIFFTAG_INKNAMES);
-		goto failure;
-	}
-
-	/* Write dummy pixel data. */
-	if (!TIFFWriteScanline(tif, buf, 0, 0) < 0) {
-		fprintf (stderr, "Can't write image data.\n");
-		goto failure;
-	}
-
-	TIFFClose(tif);
-	
-	/* Ok, now test whether we can read written values. */
-	tif = TIFFOpen(filename, "r");
-	if (!tif) {
-		fprintf (stderr, "Can't open test TIFF file %s.\n", filename);
-		return 1;
-	}
-
-	for (i = 0; i < NTAGS; i++) {
-		if (!TIFFGetField(tif, ascii_tags[i].tag, &value)
-		    || strcmp(value, ascii_tags[i].value)) {
-			fprintf(stderr, "Can't get tag %d.\n",
-				(int)ascii_tags[i].tag);
-			goto failure;
-		}
-	}
-
-	if (!TIFFGetField(tif, TIFFTAG_INKNAMES, &value)
-	    || memcmp(value, ink_names, ink_names_size)) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_INKNAMES);
-		goto failure;
-	}
-
-	TIFFClose(tif);
-	
-	/* All tests passed; delete file and exit with success status. */
-	unlink(filename);
-	return 0;
-
-failure:
-	/* Something goes wrong; close file and return unsuccessful status. */
-	TIFFClose(tif);
-	unlink(filename);
-	return 1;
-}
-
-/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/test/check_tag.c tiff-3.9.2/test/check_tag.c
--- tiff-3.9.2.orig/test/check_tag.c	2006-03-23 15:54:02.000000000 +0100
+++ tiff-3.9.2/test/check_tag.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,72 +0,0 @@
-/* $Id: check_tag.c,v 1.2 2006/03/23 14:54:02 dron Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Module to test LONG tags read/write functions.
- */
-
-#include "tiffio.h"
-
-int
-CheckShortField(TIFF *tif, ttag_t field, uint16 value)
-{
-	uint16 tmp = 0;
-
-	if (!TIFFGetField(tif, field, &tmp)) {
-		fprintf (stderr, "Problem fetching tag %lu.\n",
-			 (unsigned long) field);
-		return -1;
-	}
-	if (tmp != value) {
-		fprintf (stderr, "Wrong SHORT value fetched for tag %lu.\n",
-			 (unsigned long) field);
-		return -1;
-	}
-
-	return 0;
-}
-
-int
-CheckLongField(TIFF *tif, ttag_t field, uint32 value)
-{
-	uint32 tmp = 0;
-
-	if (!TIFFGetField(tif, field, &tmp)) {
-		fprintf (stderr, "Problem fetching tag %lu.\n",
-			 (unsigned long) field);
-		return -1;
-	}
-	if (tmp != value) {
-		fprintf (stderr, "Wrong LONG value fetched for tag %lu.\n",
-			 (unsigned long) field);
-		return -1;
-	}
-
-	return 0;
-}
-
-
diff -Nru tiff-3.9.2.orig/test/long_tag.c tiff-3.9.2/test/long_tag.c
--- tiff-3.9.2.orig/test/long_tag.c	2006-03-23 15:54:02.000000000 +0100
+++ tiff-3.9.2/test/long_tag.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,154 +0,0 @@
-/* $Id: long_tag.c,v 1.3 2006/03/23 14:54:02 dron Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Module to test LONG tags read/write functions.
- */
-
-#include "tif_config.h"
-
-#include <stdio.h>
-
-#ifdef HAVE_UNISTD_H 
-# include <unistd.h> 
-#endif 
-
-#include "tiffio.h"
-
-extern int CheckLongField(TIFF *, ttag_t, uint32);
-
-const char	*filename = "long_test.tiff";
-
-static struct Tags {
-	ttag_t		tag;
-	short		count;
-	uint32		value;
-} long_tags[] = {
-	{ TIFFTAG_SUBFILETYPE, 1, FILETYPE_REDUCEDIMAGE|FILETYPE_PAGE|FILETYPE_MASK }
-};
-#define NTAGS   (sizeof (long_tags) / sizeof (long_tags[0]))
-
-const uint32	width = 1;
-const uint32	length = 1;
-const uint32	rows_per_strip = 1;
-
-int
-main(int argc, char **argv)
-{
-	TIFF		*tif;
-	int		i;
-	unsigned char	buf[3] = { 0, 127, 255 };
-
-	/* Test whether we can write tags. */
-	tif = TIFFOpen(filename, "w");
-	if (!tif) {
-		fprintf (stderr, "Can't create test TIFF file %s.\n", filename);
-		return 1;
-	}
-
-	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, width)) {
-		fprintf (stderr, "Can't set ImageWidth tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, length)) {
-		fprintf (stderr, "Can't set ImageLength tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, 8)) {
-		fprintf (stderr, "Can't set BitsPerSample tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, 3)) {
-		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip)) {
-		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, PLANARCONFIG_CONTIG)) {
-		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, PHOTOMETRIC_RGB)) {
-		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
-		goto failure;
-	}
-
-	for (i = 0; i < NTAGS; i++) {
-		if (!TIFFSetField(tif, long_tags[i].tag,
-				  long_tags[i].value)) {
-			fprintf(stderr, "Can't set tag %d.\n",
-				(int)long_tags[i].tag);
-			goto failure;
-		}
-	}
-
-	/* Write dummy pixel data. */
-	if (!TIFFWriteScanline(tif, buf, 0, 0) < 0) {
-		fprintf (stderr, "Can't write image data.\n");
-		goto failure;
-	}
-
-	TIFFClose(tif);
-	
-	/* Ok, now test whether we can read written values. */
-	tif = TIFFOpen(filename, "r");
-	if (!tif) {
-		fprintf (stderr, "Can't open test TIFF file %s.\n", filename);
-		return 1;
-	}
-
-	if (CheckLongField(tif, TIFFTAG_IMAGEWIDTH, width) < 0)
-		goto failure;
-
-	if (CheckLongField(tif, TIFFTAG_IMAGELENGTH, length) < 0)
-		goto failure;
-
-	if (CheckLongField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip) < 0)
-		goto failure;
-
-	for (i = 0; i < NTAGS; i++) {
-		if (CheckLongField(tif, long_tags[i].tag,
-				   long_tags[i].value) < 0)
-			goto failure;
-	}
-
-	TIFFClose(tif);
-	
-	/* All tests passed; delete file and exit with success status. */
-	unlink(filename);
-	return 0;
-
-failure:
-	/* Something goes wrong; close file and return unsuccessful status. */
-	TIFFClose(tif);
-	unlink(filename);
-	return 1;
-}
-
-/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/test/Makefile.am tiff-3.9.2/test/Makefile.am
--- tiff-3.9.2.orig/test/Makefile.am	2009-08-21 18:45:24.000000000 +0200
+++ tiff-3.9.2/test/Makefile.am	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-# Tag Image File Format (TIFF) Software
-#
-# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>
-#
-# Permission to use, copy, modify, distribute, and sell this software and 
-# its documentation for any purpose is hereby granted without fee, provided
-# that (i) the above copyright notices and this permission notice appear in
-# all copies of the software and related documentation, and (ii) the names of
-# Sam Leffler and Silicon Graphics may not be used in any advertising or
-# publicity relating to the software without the specific, prior written
-# permission of Sam Leffler and Silicon Graphics.
-# 
-# THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
-# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
-# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
-# 
-# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
-# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
-# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
-# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
-# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
-# OF THIS SOFTWARE.
-
-# Process this file with automake to produce Makefile.in.
-
-AUTOMAKE_OPTIONS = 1.11 color-tests parallel-tests foreign
-
-LIBTIFF = $(top_builddir)/libtiff/libtiff.la
-
-#EXTRA_DIST = Makefile.vc
-
-TESTS = $(check_PROGRAMS)
-
-check_PROGRAMS = ascii_tag long_tag short_tag strip_rw
-
-ascii_tag_SOURCES = ascii_tag.c
-ascii_tag_LDADD = $(LIBTIFF)
-long_tag_SOURCES = long_tag.c check_tag.c
-long_tag_LDADD = $(LIBTIFF)
-short_tag_SOURCES = short_tag.c check_tag.c
-short_tag_LDADD = $(LIBTIFF)
-strip_rw_SOURCES = strip_rw.c strip.c test_arrays.c test_arrays.h
-strip_rw_LDADD = $(LIBTIFF)
-
-INCLUDES = -I$(top_srcdir)/libtiff
-
diff -Nru tiff-3.9.2.orig/test/Makefile.in tiff-3.9.2/test/Makefile.in
--- tiff-3.9.2.orig/test/Makefile.in	2009-11-04 18:15:27.000000000 +0100
+++ tiff-3.9.2/test/Makefile.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,846 +0,0 @@
-# Makefile.in generated by automake 1.11 from Makefile.am.
-# @configure_input@
-
-# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
-# Inc.
-# This Makefile.in is free software; the Free Software Foundation
-# gives unlimited permission to copy and/or distribute it,
-# with or without modifications, as long as this notice is preserved.
-
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
-# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
-# PARTICULAR PURPOSE.
-
-@SET_MAKE@
-
-# Tag Image File Format (TIFF) Software
-#
-# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>
-#
-# Permission to use, copy, modify, distribute, and sell this software and 
-# its documentation for any purpose is hereby granted without fee, provided
-# that (i) the above copyright notices and this permission notice appear in
-# all copies of the software and related documentation, and (ii) the names of
-# Sam Leffler and Silicon Graphics may not be used in any advertising or
-# publicity relating to the software without the specific, prior written
-# permission of Sam Leffler and Silicon Graphics.
-# 
-# THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
-# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
-# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
-# 
-# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
-# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
-# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
-# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
-# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
-# OF THIS SOFTWARE.
-
-# Process this file with automake to produce Makefile.in.
-VPATH = @srcdir@
-pkgdatadir = $(datadir)/@PACKAGE@
-pkgincludedir = $(includedir)/@PACKAGE@
-pkglibdir = $(libdir)/@PACKAGE@
-pkglibexecdir = $(libexecdir)/@PACKAGE@
-am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
-install_sh_DATA = $(install_sh) -c -m 644
-install_sh_PROGRAM = $(install_sh) -c
-install_sh_SCRIPT = $(install_sh) -c
-INSTALL_HEADER = $(INSTALL_DATA)
-transform = $(program_transform_name)
-NORMAL_INSTALL = :
-PRE_INSTALL = :
-POST_INSTALL = :
-NORMAL_UNINSTALL = :
-PRE_UNINSTALL = :
-POST_UNINSTALL = :
-build_triplet = @build@
-host_triplet = @host@
-target_triplet = @target@
-check_PROGRAMS = ascii_tag$(EXEEXT) long_tag$(EXEEXT) \
-	short_tag$(EXEEXT) strip_rw$(EXEEXT)
-subdir = test
-DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
-ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
-	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
-	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
-	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
-am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
-	$(ACLOCAL_M4)
-mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
-CONFIG_HEADER = $(top_builddir)/libtiff/tif_config.h \
-	$(top_builddir)/libtiff/tiffconf.h
-CONFIG_CLEAN_FILES =
-CONFIG_CLEAN_VPATH_FILES =
-am_ascii_tag_OBJECTS = ascii_tag.$(OBJEXT)
-ascii_tag_OBJECTS = $(am_ascii_tag_OBJECTS)
-ascii_tag_DEPENDENCIES = $(LIBTIFF)
-AM_V_lt = $(am__v_lt_$(V))
-am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
-am__v_lt_0 = --silent
-am_long_tag_OBJECTS = long_tag.$(OBJEXT) check_tag.$(OBJEXT)
-long_tag_OBJECTS = $(am_long_tag_OBJECTS)
-long_tag_DEPENDENCIES = $(LIBTIFF)
-am_short_tag_OBJECTS = short_tag.$(OBJEXT) check_tag.$(OBJEXT)
-short_tag_OBJECTS = $(am_short_tag_OBJECTS)
-short_tag_DEPENDENCIES = $(LIBTIFF)
-am_strip_rw_OBJECTS = strip_rw.$(OBJEXT) strip.$(OBJEXT) \
-	test_arrays.$(OBJEXT)
-strip_rw_OBJECTS = $(am_strip_rw_OBJECTS)
-strip_rw_DEPENDENCIES = $(LIBTIFF)
-DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/libtiff
-depcomp = $(SHELL) $(top_srcdir)/config/depcomp
-am__depfiles_maybe = depfiles
-am__mv = mv -f
-COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
-	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
-LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
-	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
-	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
-	$(AM_CFLAGS) $(CFLAGS)
-AM_V_CC = $(am__v_CC_$(V))
-am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
-am__v_CC_0 = @echo "  CC    " $@;
-AM_V_at = $(am__v_at_$(V))
-am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
-am__v_at_0 = @
-CCLD = $(CC)
-LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
-	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
-	$(AM_LDFLAGS) $(LDFLAGS) -o $@
-AM_V_CCLD = $(am__v_CCLD_$(V))
-am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
-am__v_CCLD_0 = @echo "  CCLD  " $@;
-AM_V_GEN = $(am__v_GEN_$(V))
-am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
-am__v_GEN_0 = @echo "  GEN   " $@;
-SOURCES = $(ascii_tag_SOURCES) $(long_tag_SOURCES) \
-	$(short_tag_SOURCES) $(strip_rw_SOURCES)
-DIST_SOURCES = $(ascii_tag_SOURCES) $(long_tag_SOURCES) \
-	$(short_tag_SOURCES) $(strip_rw_SOURCES)
-ETAGS = etags
-CTAGS = ctags
-# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
-# then this fails; a conservative approach.  Of course do not redirect
-# stdout here, just stderr.
-am__tty_colors = \
-red=; grn=; lgn=; blu=; std=; \
-test "X$(AM_COLOR_TESTS)" != Xno \
-&& test "X$$TERM" != Xdumb \
-&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
-&& { \
-  red='[0;31m'; \
-  grn='[0;32m'; \
-  lgn='[1;32m'; \
-  blu='[1;34m'; \
-  std='[m'; \
-}
-am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
-am__vpath_adj = case $$p in \
-    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
-    *) f=$$p;; \
-  esac;
-am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
-am__install_max = 40
-am__nobase_strip_setup = \
-  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
-am__nobase_strip = \
-  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
-am__nobase_list = $(am__nobase_strip_setup); \
-  for p in $$list; do echo "$$p $$p"; done | \
-  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
-  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
-    if (++n[$$2] == $(am__install_max)) \
-      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
-    END { for (dir in files) print dir, files[dir] }'
-am__base_list = \
-  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
-  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
-# Restructured Text title and section.
-am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
-am__rst_section = sed 'p;s/./=/g;p;g'
-# Put stdin (possibly several lines separated by ".  ") in a box.
-am__text_box = $(AWK) '{				\
-  n = split($$0, lines, "\\.  "); max = 0;		\
-  for (i = 1; i <= n; ++i)				\
-    if (max < length(lines[i]))				\
-      max = length(lines[i]);				\
-  for (i = 0; i < max; ++i) line = line "=";		\
-  print line;						\
-  for (i = 1; i <= n; ++i) if (lines[i]) print lines[i];\
-  print line;						\
-}'
-# Solaris 10 'make', and several other traditional 'make' implementations,
-# pass "-e" to $(SHELL).  This contradicts POSIX.  Work around the problem
-# by disabling -e (using the XSI extension "set +e") if it's set.
-am__sh_e_setup = case $$- in *e*) set +e;; esac
-# To be inserted before the command running the test.  Creates the
-# directory for the log if needed.  Stores in $dir the directory
-# containing $f, in $tst the test, in $log the log, and passes
-# TESTS_ENVIRONMENT.  Save and restore TERM around use of
-# TESTS_ENVIRONMENT, in case that unsets it.
-am__check_pre = \
-$(am__sh_e_setup);					\
-$(am__vpath_adj_setup) $(am__vpath_adj)			\
-srcdir=$(srcdir); export srcdir;			\
-rm -f $@-t;						\
-trap 'st=$$?; rm -f '\''$(abs_builddir)/$@-t'\''; (exit $$st); exit $$st' \
-  1 2 13 15;						\
-am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;		\
-test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
-if test -f "./$$f"; then dir=./;			\
-elif test -f "$$f"; then dir=;				\
-else dir="$(srcdir)/"; fi;				\
-tst=$$dir$$f; log='$@'; __SAVED_TERM=$$TERM;		\
-$(TESTS_ENVIRONMENT)
-RECHECK_LOGS = $(TEST_LOGS)
-AM_RECURSIVE_TARGETS = check check-html recheck recheck-html
-TEST_SUITE_LOG = test-suite.log
-TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
-TEST_EXTENSIONS = @EXEEXT@ .test
-LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
-am__test_logs1 = $(TESTS:=.log)
-am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
-TEST_LOGS = $(am__test_logs2:.test.log=.log)
-TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
-	$(TEST_LOG_FLAGS)
-TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
-DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
-ACLOCAL = @ACLOCAL@
-AMTAR = @AMTAR@
-AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
-AR = @AR@
-AS = @AS@
-AUTOCONF = @AUTOCONF@
-AUTOHEADER = @AUTOHEADER@
-AUTOMAKE = @AUTOMAKE@
-AWK = @AWK@
-CC = @CC@
-CCDEPMODE = @CCDEPMODE@
-CFLAGS = @CFLAGS@
-CPP = @CPP@
-CPPFLAGS = @CPPFLAGS@
-CXX = @CXX@
-CXXCPP = @CXXCPP@
-CXXDEPMODE = @CXXDEPMODE@
-CXXFLAGS = @CXXFLAGS@
-CYGPATH_W = @CYGPATH_W@
-DEFS = @DEFS@
-DEPDIR = @DEPDIR@
-DLLTOOL = @DLLTOOL@
-DSYMUTIL = @DSYMUTIL@
-DUMPBIN = @DUMPBIN@
-ECHO_C = @ECHO_C@
-ECHO_N = @ECHO_N@
-ECHO_T = @ECHO_T@
-EGREP = @EGREP@
-EXEEXT = @EXEEXT@
-FGREP = @FGREP@
-GLUT_CFLAGS = @GLUT_CFLAGS@
-GLUT_LIBS = @GLUT_LIBS@
-GLU_CFLAGS = @GLU_CFLAGS@
-GLU_LIBS = @GLU_LIBS@
-GL_CFLAGS = @GL_CFLAGS@
-GL_LIBS = @GL_LIBS@
-GREP = @GREP@
-INSTALL = @INSTALL@
-INSTALL_DATA = @INSTALL_DATA@
-INSTALL_PROGRAM = @INSTALL_PROGRAM@
-INSTALL_SCRIPT = @INSTALL_SCRIPT@
-INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
-LD = @LD@
-LDFLAGS = @LDFLAGS@
-LIBDIR = @LIBDIR@
-LIBOBJS = @LIBOBJS@
-LIBS = @LIBS@
-LIBTIFF_ALPHA_VERSION = @LIBTIFF_ALPHA_VERSION@
-LIBTIFF_DOCDIR = @LIBTIFF_DOCDIR@
-LIBTIFF_MAJOR_VERSION = @LIBTIFF_MAJOR_VERSION@
-LIBTIFF_MICRO_VERSION = @LIBTIFF_MICRO_VERSION@
-LIBTIFF_MINOR_VERSION = @LIBTIFF_MINOR_VERSION@
-LIBTIFF_RELEASE_DATE = @LIBTIFF_RELEASE_DATE@
-LIBTIFF_VERSION = @LIBTIFF_VERSION@
-LIBTIFF_VERSION_INFO = @LIBTIFF_VERSION_INFO@
-LIBTOOL = @LIBTOOL@
-LIPO = @LIPO@
-LN_S = @LN_S@
-LTLIBOBJS = @LTLIBOBJS@
-MAINT = @MAINT@
-MAKEINFO = @MAKEINFO@
-MKDIR_P = @MKDIR_P@
-NM = @NM@
-NMEDIT = @NMEDIT@
-OBJDUMP = @OBJDUMP@
-OBJEXT = @OBJEXT@
-OTOOL = @OTOOL@
-OTOOL64 = @OTOOL64@
-PACKAGE = @PACKAGE@
-PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
-PACKAGE_NAME = @PACKAGE_NAME@
-PACKAGE_STRING = @PACKAGE_STRING@
-PACKAGE_TARNAME = @PACKAGE_TARNAME@
-PACKAGE_URL = @PACKAGE_URL@
-PACKAGE_VERSION = @PACKAGE_VERSION@
-PATH_SEPARATOR = @PATH_SEPARATOR@
-PTHREAD_CC = @PTHREAD_CC@
-PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
-PTHREAD_LIBS = @PTHREAD_LIBS@
-RANLIB = @RANLIB@
-SED = @SED@
-SET_MAKE = @SET_MAKE@
-SHELL = @SHELL@
-STRIP = @STRIP@
-VERSION = @VERSION@
-XMKMF = @XMKMF@
-X_CFLAGS = @X_CFLAGS@
-X_EXTRA_LIBS = @X_EXTRA_LIBS@
-X_LIBS = @X_LIBS@
-X_PRE_LIBS = @X_PRE_LIBS@
-abs_builddir = @abs_builddir@
-abs_srcdir = @abs_srcdir@
-abs_top_builddir = @abs_top_builddir@
-abs_top_srcdir = @abs_top_srcdir@
-ac_ct_CC = @ac_ct_CC@
-ac_ct_CXX = @ac_ct_CXX@
-ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
-acx_pthread_config = @acx_pthread_config@
-am__include = @am__include@
-am__leading_dot = @am__leading_dot@
-am__quote = @am__quote@
-am__tar = @am__tar@
-am__untar = @am__untar@
-bindir = @bindir@
-build = @build@
-build_alias = @build_alias@
-build_cpu = @build_cpu@
-build_os = @build_os@
-build_vendor = @build_vendor@
-builddir = @builddir@
-datadir = @datadir@
-datarootdir = @datarootdir@
-docdir = @docdir@
-dvidir = @dvidir@
-exec_prefix = @exec_prefix@
-host = @host@
-host_alias = @host_alias@
-host_cpu = @host_cpu@
-host_os = @host_os@
-host_vendor = @host_vendor@
-htmldir = @htmldir@
-includedir = @includedir@
-infodir = @infodir@
-install_sh = @install_sh@
-libdir = @libdir@
-libexecdir = @libexecdir@
-localedir = @localedir@
-localstatedir = @localstatedir@
-lt_ECHO = @lt_ECHO@
-mandir = @mandir@
-mkdir_p = @mkdir_p@
-oldincludedir = @oldincludedir@
-pdfdir = @pdfdir@
-prefix = @prefix@
-program_transform_name = @program_transform_name@
-psdir = @psdir@
-sbindir = @sbindir@
-sharedstatedir = @sharedstatedir@
-srcdir = @srcdir@
-sysconfdir = @sysconfdir@
-target = @target@
-target_alias = @target_alias@
-target_cpu = @target_cpu@
-target_os = @target_os@
-target_vendor = @target_vendor@
-top_build_prefix = @top_build_prefix@
-top_builddir = @top_builddir@
-top_srcdir = @top_srcdir@
-AUTOMAKE_OPTIONS = 1.11 color-tests parallel-tests foreign
-LIBTIFF = $(top_builddir)/libtiff/libtiff.la
-
-#EXTRA_DIST = Makefile.vc
-TESTS = $(check_PROGRAMS)
-ascii_tag_SOURCES = ascii_tag.c
-ascii_tag_LDADD = $(LIBTIFF)
-long_tag_SOURCES = long_tag.c check_tag.c
-long_tag_LDADD = $(LIBTIFF)
-short_tag_SOURCES = short_tag.c check_tag.c
-short_tag_LDADD = $(LIBTIFF)
-strip_rw_SOURCES = strip_rw.c strip.c test_arrays.c test_arrays.h
-strip_rw_LDADD = $(LIBTIFF)
-INCLUDES = -I$(top_srcdir)/libtiff
-all: all-am
-
-.SUFFIXES:
-.SUFFIXES: .c .html .lo .log .o .obj .test .test$(EXEEXT)
-$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
-	@for dep in $?; do \
-	  case '$(am__configure_deps)' in \
-	    *$$dep*) \
-	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
-	        && { if test -f $@; then exit 0; else break; fi; }; \
-	      exit 1;; \
-	  esac; \
-	done; \
-	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
-	$(am__cd) $(top_srcdir) && \
-	  $(AUTOMAKE) --foreign test/Makefile
-.PRECIOUS: Makefile
-Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
-	@case '$?' in \
-	  *config.status*) \
-	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
-	  *) \
-	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
-	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
-	esac;
-
-$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
-	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
-
-$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
-	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
-$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
-	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
-$(am__aclocal_m4_deps):
-
-clean-checkPROGRAMS:
-	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
-	echo " rm -f" $$list; \
-	rm -f $$list || exit $$?; \
-	test -n "$(EXEEXT)" || exit 0; \
-	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
-	echo " rm -f" $$list; \
-	rm -f $$list
-ascii_tag$(EXEEXT): $(ascii_tag_OBJECTS) $(ascii_tag_DEPENDENCIES) 
-	@rm -f ascii_tag$(EXEEXT)
-	$(AM_V_CCLD)$(LINK) $(ascii_tag_OBJECTS) $(ascii_tag_LDADD) $(LIBS)
-long_tag$(EXEEXT): $(long_tag_OBJECTS) $(long_tag_DEPENDENCIES) 
-	@rm -f long_tag$(EXEEXT)
-	$(AM_V_CCLD)$(LINK) $(long_tag_OBJECTS) $(long_tag_LDADD) $(LIBS)
-short_tag$(EXEEXT): $(short_tag_OBJECTS) $(short_tag_DEPENDENCIES) 
-	@rm -f short_tag$(EXEEXT)
-	$(AM_V_CCLD)$(LINK) $(short_tag_OBJECTS) $(short_tag_LDADD) $(LIBS)
-strip_rw$(EXEEXT): $(strip_rw_OBJECTS) $(strip_rw_DEPENDENCIES) 
-	@rm -f strip_rw$(EXEEXT)
-	$(AM_V_CCLD)$(LINK) $(strip_rw_OBJECTS) $(strip_rw_LDADD) $(LIBS)
-
-mostlyclean-compile:
-	-rm -f *.$(OBJEXT)
-
-distclean-compile:
-	-rm -f *.tab.c
-
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ascii_tag.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_tag.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/long_tag.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/short_tag.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strip.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strip_rw.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_arrays.Po@am__quote@
-
-.c.o:
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
-@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(COMPILE) -c $<
-
-.c.obj:
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
-@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
-
-.c.lo:
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
-@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
-
-mostlyclean-libtool:
-	-rm -f *.lo
-
-clean-libtool:
-	-rm -rf .libs _libs
-
-ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
-	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
-	unique=`for i in $$list; do \
-	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
-	  done | \
-	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
-	      END { if (nonempty) { for (i in files) print i; }; }'`; \
-	mkid -fID $$unique
-tags: TAGS
-
-TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
-		$(TAGS_FILES) $(LISP)
-	set x; \
-	here=`pwd`; \
-	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
-	unique=`for i in $$list; do \
-	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
-	  done | \
-	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
-	      END { if (nonempty) { for (i in files) print i; }; }'`; \
-	shift; \
-	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
-	  test -n "$$unique" || unique=$$empty_fix; \
-	  if test $$# -gt 0; then \
-	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
-	      "$$@" $$unique; \
-	  else \
-	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
-	      $$unique; \
-	  fi; \
-	fi
-ctags: CTAGS
-CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
-		$(TAGS_FILES) $(LISP)
-	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
-	unique=`for i in $$list; do \
-	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
-	  done | \
-	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
-	      END { if (nonempty) { for (i in files) print i; }; }'`; \
-	test -z "$(CTAGS_ARGS)$$unique" \
-	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
-	     $$unique
-
-GTAGS:
-	here=`$(am__cd) $(top_builddir) && pwd` \
-	  && $(am__cd) $(top_srcdir) \
-	  && gtags -i $(GTAGS_ARGS) "$$here"
-
-distclean-tags:
-	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
-
-# To be appended to the command running the test.  Handle the stdout
-# and stderr redirection, and catch the exit status.
-am__check_post =					\
->$@-t 2>&1;						\
-estatus=$$?;						\
-if test -n '$(DISABLE_HARD_ERRORS)'			\
-   && test $$estatus -eq 99; then			\
-  estatus=1;						\
-fi;							\
-TERM=$$__SAVED_TERM; export TERM;			\
-$(am__tty_colors);					\
-xfailed=PASS;						\
-case " $(XFAIL_TESTS) " in				\
-  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
-    xfailed=XFAIL;;					\
-esac;							\
-case $$estatus:$$xfailed in				\
-    0:XFAIL) col=$$red; res=XPASS;;			\
-    0:*)     col=$$grn; res=PASS ;;			\
-    77:*)    col=$$blu; res=SKIP ;;			\
-    99:*)    col=$$red; res=FAIL ;;			\
-    *:XFAIL) col=$$lgn; res=XFAIL;;			\
-    *:*)     col=$$red; res=FAIL ;;			\
-esac;							\
-echo "$${col}$$res$${std}: $$f";			\
-echo "$$res: $$f (exit: $$estatus)" |			\
-  $(am__rst_section) >$@;				\
-cat $@-t >>$@;						\
-rm -f $@-t
-
-$(TEST_SUITE_LOG): $(TEST_LOGS)
-	@$(am__sh_e_setup);						\
-	list='$(TEST_LOGS)';						\
-	results=`for f in $$list; do					\
-		   read line < $$f && echo "$$line" || echo FAIL;	\
-		 done`;							\
-	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
-	fail=`echo "$$results" | grep -c '^FAIL'`;			\
-	pass=`echo "$$results" | grep -c '^PASS'`;			\
-	skip=`echo "$$results" | grep -c '^SKIP'`;			\
-	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
-	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
-	failures=`expr $$fail + $$xpass`;				\
-	all=`expr $$all - $$skip`;					\
-	if test "$$all" -eq 1; then tests=test; All=;			\
-	else tests=tests; All="All "; fi;				\
-	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
-	  fail=0:xpass=0:xfail=0)					\
-	    msg="$$All$$all $$tests passed.  ";				\
-	    exit=true;;							\
-	  fail=0:xpass=0:xfail=*)					\
-	    msg="$$All$$all $$tests behaved as expected";		\
-	    if test "$$xfail" -eq 1; then xfailures=failure;		\
-	    else xfailures=failures; fi;				\
-	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
-	    exit=true;;							\
-	  fail=*:xpass=0:xfail=*)					\
-	    msg="$$fail of $$all $$tests failed.  ";			\
-	    exit=false;;						\
-	  fail=*:xpass=*:xfail=*)					\
-	    msg="$$failures of $$all $$tests did not behave as expected"; \
-	    if test "$$xpass" -eq 1; then xpasses=pass;			\
-	    else xpasses=passes; fi;					\
-	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
-	    exit=false;;						\
-	  *)								\
-	    echo >&2 "incorrect case"; exit 4;;				\
-	esac;								\
-	if test "$$skip" -ne 0; then					\
-	  if test "$$skip" -eq 1; then					\
-	    msg="$$msg($$skip test was not run).  ";			\
-	  else								\
-	    msg="$$msg($$skip tests were not run).  ";			\
-	  fi;								\
-	fi;								\
-	{								\
-	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
-	    $(am__rst_title);						\
-	  echo "$$msg";							\
-	  echo;								\
-	  echo ".. contents:: :depth: 2";				\
-	  echo;								\
-	  for f in $$list; do						\
-	    read line < $$f;						\
-	    case $$line in						\
-	      PASS:*|XFAIL:*);;						\
-	      *) echo; cat $$f;;					\
-	    esac;							\
-	  done;								\
-	} >$(TEST_SUITE_LOG).tmp;					\
-	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
-	if test "$$failures" -ne 0; then				\
-	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
-	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
-	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
-	  fi;								\
-	fi;								\
-	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
-	$(am__tty_colors);						\
-	if $$exit; then							\
-	  echo $(ECHO_N) "$$grn$(ECHO_C)";				\
-	 else								\
-	  echo $(ECHO_N) "$$red$(ECHO_C)";				\
-	fi;								\
-	echo "$$msg" | $(am__text_box);					\
-	echo $(ECHO_N) "$$std$(ECHO_C)";				\
-	$$exit
-
-# Run all the tests.
-check-TESTS:
-	@list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list
-	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
-	@set_logs=; if test "X$(TEST_LOGS)" = X.log; then		\
-	  set_logs=TEST_LOGS=;						\
-	fi;								\
-	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) $$set_logs
-
-.log.html:
-	@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
-	for r2h in $$list; do						\
-	  if ($$r2h --version) >/dev/null 2>&1; then			\
-	    R2H=$$r2h;							\
-	  fi;								\
-	done;								\
-	if test -z "$$R2H"; then					\
-	  echo >&2 "cannot find rst2html, cannot create $@";		\
-	  exit 2;							\
-	fi;								\
-	$$R2H $< >$@.tmp
-	@mv $@.tmp $@
-
-# Be sure to run check first, and then to convert the result.
-# Beware of concurrent executions.  Run "check" not "check-TESTS", as
-# check-SCRIPTS and other runtimeDependencies are rebuilt by the former only.
-# And expect check to fail.
-check-html:
-	@if $(MAKE) $(AM_MAKEFLAGS) check; then			\
-	  rv=0; else rv=$$?;					\
-	fi;							\
-	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) || exit 4;	\
-	exit $$rv
-recheck recheck-html:
-	@target=`echo $@ | sed 's,^re,,'`;				\
-	list='$(TEST_LOGS)';						\
-	list=`for f in $$list; do					\
-	        test -f $$f || continue;				\
-	        if read line < $$f; then				\
-	          case $$line in FAIL*|XPASS*) echo $$f;; esac;		\
-	        else echo $$f; fi;					\
-	      done | tr '\012\015' '  '`;				\
-	$(MAKE) $(AM_MAKEFLAGS) $$target AM_MAKEFLAGS='$(AM_MAKEFLAGS) TEST_LOGS="'"$$list"'"'
-ascii_tag.log: ascii_tag$(EXEEXT)
-	@p='ascii_tag$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
-long_tag.log: long_tag$(EXEEXT)
-	@p='long_tag$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
-short_tag.log: short_tag$(EXEEXT)
-	@p='short_tag$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
-strip_rw.log: strip_rw$(EXEEXT)
-	@p='strip_rw$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
-.test.log:
-	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
-@am__EXEEXT_TRUE@.test$(EXEEXT).log:
-@am__EXEEXT_TRUE@	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
-
-distdir: $(DISTFILES)
-	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
-	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
-	list='$(DISTFILES)'; \
-	  dist_files=`for file in $$list; do echo $$file; done | \
-	  sed -e "s|^$$srcdirstrip/||;t" \
-	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
-	case $$dist_files in \
-	  */*) $(MKDIR_P) `echo "$$dist_files" | \
-			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
-			   sort -u` ;; \
-	esac; \
-	for file in $$dist_files; do \
-	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
-	  if test -d $$d/$$file; then \
-	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
-	    if test -d "$(distdir)/$$file"; then \
-	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
-	    fi; \
-	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
-	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
-	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
-	    fi; \
-	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
-	  else \
-	    test -f "$(distdir)/$$file" \
-	    || cp -p $$d/$$file "$(distdir)/$$file" \
-	    || exit 1; \
-	  fi; \
-	done
-check-am: all-am
-	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
-	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
-check: check-am
-all-am: Makefile
-installdirs:
-install: install-am
-install-exec: install-exec-am
-install-data: install-data-am
-uninstall: uninstall-am
-
-install-am: all-am
-	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
-
-installcheck: installcheck-am
-install-strip:
-	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
-	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
-	  `test -z '$(STRIP)' || \
-	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
-mostlyclean-generic:
-	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
-	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
-	-test -z "$(TEST_SUITE_HTML)" || rm -f $(TEST_SUITE_HTML)
-	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
-
-clean-generic:
-
-distclean-generic:
-	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
-	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
-
-maintainer-clean-generic:
-	@echo "This command is intended for maintainers to use"
-	@echo "it deletes files that may require special tools to rebuild."
-clean: clean-am
-
-clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
-	mostlyclean-am
-
-distclean: distclean-am
-	-rm -rf ./$(DEPDIR)
-	-rm -f Makefile
-distclean-am: clean-am distclean-compile distclean-generic \
-	distclean-tags
-
-dvi: dvi-am
-
-dvi-am:
-
-html: html-am
-
-html-am:
-
-info: info-am
-
-info-am:
-
-install-data-am:
-
-install-dvi: install-dvi-am
-
-install-dvi-am:
-
-install-exec-am:
-
-install-html: install-html-am
-
-install-html-am:
-
-install-info: install-info-am
-
-install-info-am:
-
-install-man:
-
-install-pdf: install-pdf-am
-
-install-pdf-am:
-
-install-ps: install-ps-am
-
-install-ps-am:
-
-installcheck-am:
-
-maintainer-clean: maintainer-clean-am
-	-rm -rf ./$(DEPDIR)
-	-rm -f Makefile
-maintainer-clean-am: distclean-am maintainer-clean-generic
-
-mostlyclean: mostlyclean-am
-
-mostlyclean-am: mostlyclean-compile mostlyclean-generic \
-	mostlyclean-libtool
-
-pdf: pdf-am
-
-pdf-am:
-
-ps: ps-am
-
-ps-am:
-
-uninstall-am:
-
-.MAKE: check-am check-html install-am install-strip recheck \
-	recheck-html
-
-.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am check-html \
-	clean clean-checkPROGRAMS clean-generic clean-libtool ctags \
-	distclean distclean-compile distclean-generic \
-	distclean-libtool distclean-tags distdir dvi dvi-am html \
-	html-am info info-am install install-am install-data \
-	install-data-am install-dvi install-dvi-am install-exec \
-	install-exec-am install-html install-html-am install-info \
-	install-info-am install-man install-pdf install-pdf-am \
-	install-ps install-ps-am install-strip installcheck \
-	installcheck-am installdirs maintainer-clean \
-	maintainer-clean-generic mostlyclean mostlyclean-compile \
-	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
-	recheck recheck-html tags uninstall uninstall-am
-
-
-# Tell versions [3.59,3.63) of GNU make to not export all variables.
-# Otherwise a system limit (for SysV at least) may be exceeded.
-.NOEXPORT:
diff -Nru tiff-3.9.2.orig/test/short_tag.c tiff-3.9.2/test/short_tag.c
--- tiff-3.9.2.orig/test/short_tag.c	2006-03-23 15:54:02.000000000 +0100
+++ tiff-3.9.2/test/short_tag.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,179 +0,0 @@
-/* $Id: short_tag.c,v 1.6 2006/03/23 14:54:02 dron Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Module to test SHORT tags read/write functions.
- */
-
-#include "tif_config.h"
-
-#include <stdio.h>
-
-#ifdef HAVE_UNISTD_H 
-# include <unistd.h> 
-#endif 
-
-#include "tiffio.h"
-
-extern int CheckShortField(TIFF *, ttag_t, uint16);
-
-const char	*filename = "short_test.tiff";
-
-#define	SPP	3		/* Samples per pixel */
-const uint16	width = 1;
-const uint16	length = 1;
-const uint16	bps = 8;
-const uint16	photometric = PHOTOMETRIC_RGB;
-const uint16	rows_per_strip = 1;
-const uint16	planarconfig = PLANARCONFIG_CONTIG;
-
-static struct SingleTags {
-	ttag_t		tag;
-	uint16		value;
-} short_single_tags[] = {
-	{ TIFFTAG_COMPRESSION, COMPRESSION_NONE },
-	{ TIFFTAG_FILLORDER, FILLORDER_MSB2LSB },
-	{ TIFFTAG_ORIENTATION, ORIENTATION_BOTRIGHT },
-	{ TIFFTAG_RESOLUTIONUNIT, RESUNIT_INCH },
-	{ TIFFTAG_INKSET, INKSET_MULTIINK },
-	{ TIFFTAG_MINSAMPLEVALUE, 23 },
-	{ TIFFTAG_MAXSAMPLEVALUE, 241 },
-	{ TIFFTAG_NUMBEROFINKS, SPP },
-	{ TIFFTAG_SAMPLEFORMAT, SAMPLEFORMAT_UINT }
-	/*{ TIFFTAG_IMAGEDEPTH, 1 },
-	{ TIFFTAG_TILEDEPTH, 1 }*/
-};
-#define NSINGLETAGS   (sizeof(short_single_tags) / sizeof(short_single_tags[0]))
-
-int
-main(int argc, char **argv)
-{
-	TIFF		*tif;
-	int		i;
-	unsigned char	buf[3] = { 0, 127, 255 };
-
-	/* Test whether we can write tags. */
-	tif = TIFFOpen(filename, "w");
-	if (!tif) {
-		fprintf (stderr, "Can't create test TIFF file %s.\n", filename);
-		return 1;
-	}
-
-	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, width)) {
-		fprintf (stderr, "Can't set ImageWidth tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, length)) {
-		fprintf (stderr, "Can't set ImageLength tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, bps)) {
-		fprintf (stderr, "Can't set BitsPerSample tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, SPP)) {
-		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip)) {
-		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, planarconfig)) {
-		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, photometric)) {
-		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
-		goto failure;
-	}
-
-	for (i = 0; i < NSINGLETAGS; i++) {
-		if (!TIFFSetField(tif, short_single_tags[i].tag,
-				  short_single_tags[i].value)) {
-			fprintf(stderr, "Can't set tag %d.\n",
-				(int)short_single_tags[i].tag);
-			goto failure;
-		}
-	}
-
-	/* Write dummy pixel data. */
-	if (!TIFFWriteScanline(tif, buf, 0, 0) < 0) {
-		fprintf (stderr, "Can't write image data.\n");
-		goto failure;
-	}
-
-	TIFFClose(tif);
-	
-	/* Ok, now test whether we can read written values. */
-	tif = TIFFOpen(filename, "r");
-	if (!tif) {
-		fprintf (stderr, "Can't open test TIFF file %s.\n", filename);
-		return 1;
-	}
-	
-	if (CheckLongField(tif, TIFFTAG_IMAGEWIDTH, width) < 0)
-		goto failure;
-
-	if (CheckLongField(tif, TIFFTAG_IMAGELENGTH, length) < 0)
-		goto failure;
-
-	if (CheckShortField(tif, TIFFTAG_BITSPERSAMPLE, bps) < 0)
-		goto failure;
-
-	if (CheckShortField(tif, TIFFTAG_PHOTOMETRIC, photometric) < 0)
-		goto failure;
-
-	if (CheckShortField(tif, TIFFTAG_SAMPLESPERPIXEL, SPP) < 0)
-		goto failure;
-
-	if (CheckLongField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip) < 0)
-		goto failure;
-
-	if (CheckShortField(tif, TIFFTAG_PLANARCONFIG, planarconfig) < 0)
-		goto failure;
-
-	for (i = 0; i < NSINGLETAGS; i++) {
-		if (CheckShortField(tif, short_single_tags[i].tag,
-				    short_single_tags[i].value) < 0)
-			goto failure;
-	}
-
-	TIFFClose(tif);
-	
-	/* All tests passed; delete file and exit with success status. */
-	unlink(filename);
-	return 0;
-
-failure:
-	/* Something goes wrong; close file and return unsuccessful status. */
-	TIFFClose(tif);
-	unlink(filename);
-	return 1;
-}
-
-/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/test/strip.c tiff-3.9.2/test/strip.c
--- tiff-3.9.2.orig/test/strip.c	2009-01-01 18:52:51.000000000 +0100
+++ tiff-3.9.2/test/strip.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,291 +0,0 @@
-/* $Id: strip.c,v 1.3.2.1 2009-01-01 17:52:51 bfriesen Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Functions to test strip interface of libtiff.
- */
-
-#include <stdio.h>
-#include <string.h>
-
-#include "tiffio.h"
-
-int
-write_strips(TIFF *tif, const tdata_t array, const tsize_t size)
-{
-	tstrip_t	strip, nstrips;
-	tsize_t		stripsize, offset;
-
-	stripsize = TIFFStripSize(tif);
-	if (!stripsize) {
-		fprintf (stderr, "Wrong size of strip.\n");
-		return -1;
-	}
-
-	nstrips = TIFFNumberOfStrips(tif);
-	for (offset = 0, strip = 0;
-	     offset < size && strip < nstrips;
-	     offset+=stripsize, strip++) {
-		/*
-		 * Properly write last strip.
-		 */
-		tsize_t	bufsize = size - offset;
-		if (bufsize > stripsize)
-			bufsize = stripsize;
-
-		if (TIFFWriteEncodedStrip(tif, strip, (char *)array + offset,
-					  bufsize) != bufsize) {
-			fprintf (stderr, "Can't write strip %lu.\n",
-				 (unsigned long)strip);
-			return -1;
-		}
-        }
-
-	return 0;
-}
-
-int
-read_strips(TIFF *tif, const tdata_t array, const tsize_t size)
-{
-	tstrip_t	strip, nstrips;
-	tsize_t		stripsize, offset;
-	tdata_t		buf = NULL;
-
-	stripsize = TIFFStripSize(tif);
-	if (!stripsize) {
-		fprintf (stderr, "Wrong size of strip.\n");
-		return -1;
-	}
-
-	buf = _TIFFmalloc(stripsize);
-	if (!buf) {
-		fprintf (stderr, "Can't allocate space for strip buffer.\n");
-		return -1;
-	}
-
-	nstrips = TIFFNumberOfStrips(tif);
-	for (offset = 0, strip = 0;
-	     offset < size && strip < nstrips;
-	     offset+=stripsize, strip++) {
-		/*
-		 * Properly read last strip.
-		 */
-		tsize_t	bufsize = size - offset;
-		if (bufsize > stripsize)
-			bufsize = stripsize;
-
-		if (TIFFReadEncodedStrip(tif, strip, buf, -1) != bufsize) {
-			fprintf (stderr, "Can't read strip %lu.\n",
-				 (unsigned long)strip);
-			return -1;
-		}
-		if (memcmp(buf, (char *)array + offset, bufsize) != 0) {
-			fprintf (stderr, "Wrong data read for strip %lu.\n",
-				 (unsigned long)strip);
-			_TIFFfree(buf);
-			return -1;
-		}
-        }
-
-	_TIFFfree(buf);
-
-	return 0;
-}
-
-int
-create_image_striped(const char *name, uint32 width, uint32 length,
-		      uint32 rowsperstrip, uint16 compression,
-		      uint16 spp, uint16 bps, uint16 photometric,
-		      uint16 sampleformat, uint16 planarconfig,
-		      const tdata_t array, const tsize_t size)
-{
-	TIFF		*tif;
-
-	/* Test whether we can write tags. */
-	tif = TIFFOpen(name, "w");
-	if (!tif)
-		goto openfailure;
-
-	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, width)) {
-		fprintf (stderr, "Can't set ImageWidth tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, length)) {
-		fprintf (stderr, "Can't set ImageLength tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, bps)) {
-		fprintf (stderr, "Can't set BitsPerSample tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, spp)) {
-		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_ROWSPERSTRIP, rowsperstrip)) {
-		fprintf (stderr, "Can't set RowsPerStrip tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, planarconfig)) {
-		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
-		goto failure;
-	}
-	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, photometric)) {
-		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
-		goto failure;
-	}
-
-	if (write_strips(tif, array, size) < 0) {
-		fprintf (stderr, "Can't write image data.\n");
-		goto failure;
-	}
-
-	TIFFClose(tif);
-	return 0;
-
-failure:
-	TIFFClose(tif);
-openfailure:
-	fprintf (stderr, "Can't create test TIFF file %s:\n"
-"    ImageWidth=%u, ImageLength=%u, RowsPerStrip=%u, Compression=%d,\n"
-"    BitsPerSample=%d, SamplesPerPixel=%d, SampleFormat=%d,\n"
-"    PlanarConfiguration=%d, PhotometricInterpretation=%d.\n",
-		 name, width, length, rowsperstrip, compression,
-		 bps, spp, sampleformat, planarconfig,
-		 photometric);
-	return -1;
-}
-
-int
-read_image_striped(const char *name, uint32 width, uint32 length,
-		    uint32 rowsperstrip, uint16 compression,
-		    uint16 spp, uint16 bps, uint16 photometric,
-		    uint16 sampleformat, uint16 planarconfig,
-		    const tdata_t array, const tsize_t size)
-{
-	TIFF		*tif;
-	uint16		value_u16;
-	uint32		value_u32;
-
-	/* Test whether we can read written values. */
-	tif = TIFFOpen(name, "r");
-	if (!tif)
-		goto openfailure;
-	
-	if (TIFFIsTiled(tif)) {
-		fprintf (stderr, "Can't read image %s, it is tiled.\n",
-			 name);
-		goto failure;
-	}
-	if (!TIFFGetField(tif, TIFFTAG_IMAGEWIDTH, &value_u32)
-	    || value_u32 != width) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_IMAGEWIDTH);
-		goto failure;
-	}
-	if (!TIFFGetField(tif, TIFFTAG_IMAGELENGTH, &value_u32)
-	    || value_u32 != length) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_IMAGELENGTH);
-		goto failure;
-	}
-	if (!TIFFGetField(tif, TIFFTAG_BITSPERSAMPLE, &value_u16)
-	    || value_u16 != bps) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_BITSPERSAMPLE);
-		goto failure;
-	}
-	if (!TIFFGetField(tif, TIFFTAG_PHOTOMETRIC, &value_u16)
-	    || value_u16 != photometric) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_PHOTOMETRIC);
-		goto failure;
-	}
-	if (!TIFFGetField(tif, TIFFTAG_SAMPLESPERPIXEL, &value_u16)
-	    || value_u16 != spp) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_SAMPLESPERPIXEL);
-		goto failure;
-	}
-	if (!TIFFGetField(tif, TIFFTAG_ROWSPERSTRIP, &value_u32)
-	    || value_u32 != rowsperstrip) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_ROWSPERSTRIP);
-		goto failure;
-	}
-	if (!TIFFGetField(tif, TIFFTAG_PLANARCONFIG, &value_u16)
-	    || value_u16 != planarconfig) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_PLANARCONFIG);
-		goto failure;
-	}
-
-	if (read_strips(tif, array, size) < 0) {
-		fprintf (stderr, "Can't read image data.\n");
-		goto failure;
-	}
-
-	TIFFClose(tif);
-	return 0;
-
-failure:
-	TIFFClose(tif);
-openfailure:
-	fprintf (stderr, "Can't read test TIFF file %s:\n"
-"    ImageWidth=%u, ImageLength=%u, RowsPerStrip=%u, Compression=%d,\n"
-"    BitsPerSample=%d, SamplesPerPixel=%d, SampleFormat=%d,\n"
-"    PlanarConfiguration=%d, PhotometricInterpretation=%d.\n",
-		 name, width, length, rowsperstrip, compression,
-		 bps, spp, sampleformat, planarconfig,
-		 photometric);
-	return -1;
-}
-
-int
-write_scanlines(TIFF *tif, const tdata_t array, const tsize_t size)
-{
-	uint32		length, row;
-	tsize_t		scanlinesize, offset;
-
-	(void) size;
-
-	if (!TIFFGetField(tif, TIFFTAG_IMAGELENGTH, &length)) {
-		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_IMAGELENGTH);
-		return -1;
-	}
-	
-	scanlinesize = TIFFScanlineSize(tif);
-	if (!scanlinesize) {
-		fprintf (stderr, "Wrong size of scanline.\n");
-		return -1;
-	}
-
-	for (offset = 0, row = 0; row < length; offset+=scanlinesize, row++) {
-		if (TIFFWriteScanline(tif, (char *)array + offset, row, 0) < 0) {
-			fprintf (stderr,
-				 "Can't write image data at row %u.\n", row);
-			return -1;
-		}
-        }
-
-	return 0;
-}
-
-/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/test/strip_rw.c tiff-3.9.2/test/strip_rw.c
--- tiff-3.9.2.orig/test/strip_rw.c	2006-03-23 15:54:02.000000000 +0100
+++ tiff-3.9.2/test/strip_rw.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,155 +0,0 @@
-/* $Id: strip_rw.c,v 1.5 2006/03/23 14:54:02 dron Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Test libtiff input/output routines.
- */
-
-#include "tif_config.h"
-
-#include <stdio.h>
-
-#ifdef HAVE_UNISTD_H 
-# include <unistd.h> 
-#endif 
-
-#include "tiffio.h"
-#include "test_arrays.h"
-
-extern int
-create_image_striped(const char *, uint32, uint32, uint32, uint16, uint16,
-		     uint16, uint16, uint16, uint16, const tdata_t,
-		     const tsize_t);
-extern int
-read_image_striped(const char *, uint32, uint32, uint32, uint16, uint16,
-		   uint16, uint16, uint16, uint16, const tdata_t,
-		   const tsize_t);
-
-const char	*filename = "strip_test.tiff";
-
-int
-main(int argc, char **argv)
-{
-	uint32		rowsperstrip;
-	uint16		compression;
-	uint16		spp, bps, photometric, sampleformat, planarconfig;
-
-	/* 
-	 * Test two special cases: image consisting from single line and image
-	 * consisting from single column.
-	 */
-	rowsperstrip = 1;
-	compression = COMPRESSION_NONE;
-	spp = 1;
-	bps = 8;
-        photometric = PHOTOMETRIC_MINISBLACK;
-	sampleformat = SAMPLEFORMAT_UINT;
-	planarconfig = PLANARCONFIG_CONTIG;
-
-	if (create_image_striped(filename, XSIZE * YSIZE, 1, rowsperstrip,
-				  compression, spp, bps, photometric,
-				  sampleformat, planarconfig,
-				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
-		goto failure;
-	}
-	if (read_image_striped(filename, XSIZE * YSIZE, 1, rowsperstrip,
-				compression, spp, bps, photometric,
-				sampleformat, planarconfig,
-				(const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
-		goto failure;
-	}
-	unlink(filename);
-		
-	if (create_image_striped(filename, 1, XSIZE * YSIZE, rowsperstrip,
-				  compression, spp, bps, photometric,
-				  sampleformat, planarconfig,
-				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
-		goto failure;
-	}
-	if (read_image_striped(filename, 1, XSIZE * YSIZE, rowsperstrip,
-				compression, spp, bps, photometric,
-				sampleformat, planarconfig,
-				(const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
-		goto failure;
-	}
-	unlink(filename);
-		
-	/* 
-	 * Test one-channel image with different parameters.
-	 */
-	rowsperstrip = 1;
-	spp = 1;
-	bps = 8;
-        photometric = PHOTOMETRIC_MINISBLACK;
-	sampleformat = SAMPLEFORMAT_UINT;
-	planarconfig = PLANARCONFIG_CONTIG;
-
-	if (create_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
-				  compression, spp, bps, photometric,
-				  sampleformat, planarconfig,
-				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
-		goto failure;
-	}
-	if (read_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
-				compression, spp, bps, photometric,
-				sampleformat, planarconfig,
-				(const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
-		goto failure;
-	}
-	unlink(filename);
-	
-	rowsperstrip = YSIZE;
-	if (create_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
-				  compression, spp, bps, photometric,
-				  sampleformat, planarconfig,
-				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
-		goto failure;
-	}
-	if (read_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
-				compression, spp, bps, photometric,
-				sampleformat, planarconfig,
-				(const tdata_t) byte_array1, byte_array1_size) < 0) {
-		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
-		goto failure;
-	}
-	unlink(filename);
-
-	return 0;
-
-failure:
-	unlink(filename);
-	return 1;
-}
-
-/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/test/test_arrays.c tiff-3.9.2/test/test_arrays.c
--- tiff-3.9.2.orig/test/test_arrays.c	2006-03-23 15:54:02.000000000 +0100
+++ tiff-3.9.2/test/test_arrays.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,829 +0,0 @@
-/* $Id: test_arrays.c,v 1.3 2006/03/23 14:54:02 dron Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Numerical arrays used to test libtiff's read/write functions.
- */
-
-#include <stddef.h>
-
-#include "test_arrays.h"
-
-const unsigned char byte_array1[XSIZE * YSIZE]=
-{
-86, 84, 86, 90, 89, 85, 90, 78, 77, 79, 75, 77, 79, 86,
-87, 83, 82, 87, 89, 88, 86, 87, 88, 87, 81, 84, 85, 85,
-84, 86, 88, 91, 96, 95, 97, 95, 89,
-85, 82, 81, 88, 89, 85, 89, 83, 74, 79, 76, 77, 80, 87,
-87, 84, 84, 88, 90, 89, 87, 85, 87, 88, 83, 80, 82, 84,
-85, 87, 90, 95, 96, 95, 95, 92, 90,
-85, 81, 79, 84, 90, 87, 88, 88, 73, 79, 75, 76, 79, 88,
-88, 87, 85, 90, 92, 89, 88, 88, 87, 86, 84, 82, 82, 83,
-87, 89, 93, 94, 93, 93, 92, 92, 96,
-85, 82, 76, 80, 88, 89, 88, 89, 73, 80, 75, 75, 77, 89,
-92, 93, 91, 89, 94, 92, 90, 89, 88, 84, 84, 82, 82, 85,
-88, 91, 94, 93, 93, 89, 90, 96, 96,
-87, 83, 75, 77, 83, 89, 90, 90, 74, 78, 76, 76, 76, 84,
-94, 100, 89, 92, 94, 92, 90, 89, 90, 85, 84, 83, 83, 87,
-91, 92, 88, 92, 91, 88, 90, 97, 95,
-89, 83, 74, 77, 82, 84, 90, 92, 78, 72, 76, 75, 75, 81,
-95, 101, 95, 92, 95, 93, 90, 89, 90, 87, 86, 84, 86, 88,
-90, 90, 87, 90, 89, 90, 89, 98, 98,
-92, 84, 75, 76, 81, 81, 86, 91, 81, 72, 74, 74, 75, 81,
-104, 108, 93, 92, 95, 94, 88, 87, 89, 87, 85, 85, 88, 89,
-93, 91, 88, 88, 91, 88, 91, 106, 108,
-93, 89, 78, 75, 77, 80, 85, 86, 85, 73, 72, 73, 74, 79,
-102, 101, 88, 92, 93, 91, 87, 87, 86, 87, 85, 86, 88, 89,
-94, 94, 90, 88, 85, 86, 98, 109, 113,
-92, 93, 83, 76, 74, 79, 84, 85, 81, 75, 72, 73, 74, 79,
-105, 86, 86, 92, 96, 98, 104, 86, 85, 85, 85, 88, 90, 90,
-93, 92, 88, 87, 86, 89, 97, 110, 109,
-92, 93, 89, 78, 79, 78, 89, 84, 75, 76, 73, 72, 73, 78,
-105, 83, 82, 88, 83, 107, 95, 84, 85, 84, 86, 87, 90, 91,
-92, 90, 88, 87, 89, 90, 91, 99, 107,
-96, 94, 91, 82, 84, 86, 91, 87, 75, 74, 73, 73, 73, 77,
-101, 86, 83, 89, 92, 99, 98, 86, 86, 87, 83, 84, 89, 89,
-92, 92, 92, 96, 96, 87, 91, 90, 98,
-96, 97, 94, 87, 88, 89, 92, 90, 79, 72, 73, 73, 74, 77,
-100, 92, 84, 86, 98, 100, 92, 87, 88, 88, 84, 83, 87, 89,
-91, 94, 94, 96, 93, 87, 87, 84, 109,
-93, 92, 95, 92, 94, 93, 92, 91, 82, 72, 73, 74, 74, 76,
-95, 89, 85, 84, 102, 89, 85, 88, 94, 86, 82, 83, 82, 91,
-94, 97, 90, 92, 85, 90, 85, 79, 125,
-89, 96, 94, 90, 94, 95, 91, 91, 85, 76, 72, 73, 74, 75,
-88, 100, 83, 84, 84, 83, 85, 88, 90, 85, 84, 83, 84, 88,
-92, 93, 90, 89, 84, 90, 94, 79, 139,
-93, 97, 97, 93, 92, 95, 91, 90, 87, 81, 74, 73, 73, 74,
-85, 97, 95, 95, 89, 86, 86, 92, 87, 85, 84, 90, 86, 85,
-91, 87, 87, 86, 93, 124, 140, 106, 143,
-101, 95, 97, 97, 96, 95, 84, 88, 87, 82, 78, 73, 73, 74,
-82, 92, 104, 95, 88, 89, 87, 89, 86, 85, 86, 87, 87, 81,
-81, 83, 91, 106, 131, 153, 151, 123, 133,
-99, 101, 102, 99, 96, 90, 83, 82, 85, 84, 79, 76, 74, 74,
-78, 81, 89, 96, 90, 93, 88, 88, 86, 88, 89, 95, 89, 82,
-81, 85, 104, 118, 141, 160, 129, 137, 147,
-103, 104, 98, 99, 90, 88, 81, 76, 81, 83, 79, 77, 75, 75,
-75, 76, 80, 90, 94, 87, 86, 87, 92, 85, 85, 85, 87, 87,
-89, 91, 112, 115, 145, 154, 145, 141, 147,
-106, 103, 100, 99, 92, 82, 78, 75, 78, 81, 79, 77, 77, 78,
-78, 76, 77, 81, 89, 87, 84, 84, 90, 86, 85, 84, 80, 85,
-97, 104, 119, 119, 149, 147, 144, 146, 152,
-107, 105, 103, 100, 93, 83, 78, 74, 74, 79, 78, 77, 76, 78,
-80, 79, 76, 78, 83, 84, 81, 81, 84, 83, 82, 78, 78, 85,
-86, 97, 105, 114, 145, 146, 148, 147, 150,
-107, 105, 103, 97, 92, 84, 72, 72, 75, 77, 76, 75, 76, 79,
-80, 80, 77, 76, 82, 81, 80, 81, 80, 80, 80, 77, 74, 74,
-73, 77, 91, 110, 132, 141, 152, 152, 145,
-107, 105, 103, 96, 92, 86, 73, 71, 73, 75, 75, 76, 76, 78,
-80, 80, 80, 98, 80, 80, 82, 82, 80, 78, 76, 73, 71, 72,
-71, 74, 80, 108, 119, 136, 158, 142, 137,
-107, 104, 101, 97, 85, 87, 75, 70, 70, 74, 74, 75, 77, 78,
-80, 82, 110, 117, 110, 78, 81, 83, 81, 78, 76, 73, 71, 69,
-68, 71, 74, 95, 120, 138, 148, 143, 139
-};
-
-const size_t byte_array1_size = sizeof(byte_array1);
-
-const unsigned char byte_array2[YSIZE * XSIZE] =
-{
-77, 73, 76, 80, 79, 75, 82, 65, 62, 64, 59, 59, 61, 72,
-70, 67, 65, 70, 71, 70, 68, 66, 65, 67, 66, 66, 66, 66,
-66, 66, 66, 66, 66, 65, 63, 63, 62,
-75, 71, 71, 79, 81, 75, 81, 73, 59, 65, 60, 60, 64, 73,
-73, 68, 66, 70, 72, 71, 68, 66, 66, 67, 66, 66, 66, 67,
-67, 67, 66, 67, 66, 64, 63, 63, 63,
-76, 71, 66, 73, 81, 78, 80, 79, 59, 66, 60, 59, 62, 74,
-74, 71, 67, 70, 73, 71, 68, 66, 65, 65, 66, 66, 67, 67,
-67, 67, 67, 67, 66, 64, 64, 64, 64,
-76, 72, 64, 68, 79, 81, 80, 80, 59, 68, 60, 59, 60, 75,
-75, 73, 67, 68, 73, 72, 68, 66, 65, 63, 67, 67, 67, 67,
-68, 67, 67, 66, 65, 64, 65, 65, 65,
-79, 72, 63, 66, 73, 80, 83, 82, 60, 65, 61, 61, 60, 66,
-75, 75, 65, 70, 73, 72, 68, 66, 65, 64, 68, 67, 68, 68,
-68, 67, 67, 66, 65, 65, 65, 66, 65,
-81, 73, 62, 65, 72, 74, 82, 85, 66, 59, 62, 60, 60, 63,
-75, 76, 68, 69, 72, 72, 68, 66, 66, 65, 67, 68, 68, 68,
-68, 68, 66, 66, 64, 66, 65, 66, 66,
-84, 74, 64, 64, 70, 71, 78, 84, 70, 58, 60, 59, 59, 63,
-75, 80, 73, 67, 72, 72, 68, 66, 66, 65, 66, 68, 68, 68,
-68, 68, 66, 65, 65, 65, 66, 67, 68,
-87, 81, 66, 63, 65, 68, 76, 76, 75, 59, 58, 59, 59, 60,
-71, 92, 65, 64, 74, 72, 69, 67, 65, 65, 65, 68, 69, 68,
-69, 67, 65, 65, 65, 65, 67, 68, 69,
-86, 86, 73, 64, 62, 67, 75, 76, 70, 61, 58, 58, 59, 60,
-81, 68, 59, 63, 74, 90, 99, 67, 65, 65, 64, 67, 68, 68,
-68, 67, 65, 65, 66, 65, 66, 68, 68,
-85, 85, 80, 66, 67, 67, 81, 74, 62, 63, 59, 58, 58, 60,
-93, 61, 59, 59, 68, 115, 76, 67, 66, 64, 64, 66, 68, 68,
-68, 66, 65, 65, 66, 65, 64, 65, 69,
-90, 87, 83, 71, 74, 77, 83, 79, 63, 60, 59, 59, 58, 58,
-90, 61, 59, 59, 67, 80, 71, 68, 66, 64, 63, 63, 68, 68,
-68, 66, 65, 66, 67, 65, 64, 62, 87,
-91, 92, 86, 76, 78, 81, 85, 82, 67, 59, 59, 59, 59, 60,
-88, 72, 59, 60, 74, 80, 70, 67, 66, 64, 62, 60, 65, 68,
-67, 66, 65, 67, 66, 64, 62, 59, 111,
-84, 84, 87, 85, 87, 85, 84, 84, 72, 59, 59, 59, 59, 59,
-73, 71, 62, 59, 100, 70, 70, 67, 66, 64, 60, 58, 58, 67,
-68, 66, 65, 66, 64, 63, 59, 56, 131,
-80, 90, 87, 83, 88, 89, 84, 83, 76, 64, 59, 59, 59, 58,
-59, 97, 64, 62, 71, 68, 70, 73, 66, 63, 61, 58, 58, 62,
-67, 66, 64, 65, 63, 63, 61, 57, 149,
-86, 91, 92, 87, 85, 88, 83, 81, 78, 69, 61, 59, 59, 59,
-59, 61, 83, 72, 67, 67, 69, 69, 66, 64, 61, 72, 56, 57,
-64, 64, 64, 64, 65, 115, 150, 93, 151,
-97, 89, 91, 92, 89, 88, 74, 80, 78, 71, 65, 59, 58, 59,
-58, 59, 71, 72, 67, 70, 70, 69, 67, 64, 63, 66, 56, 54,
-57, 59, 64, 87, 139, 162, 160, 128, 141,
-94, 96, 97, 94, 89, 82, 71, 70, 76, 73, 67, 61, 59, 59,
-58, 59, 61, 71, 67, 75, 70, 68, 70, 65, 63, 63, 59, 56,
-54, 55, 90, 121, 149, 168, 138, 144, 157,
-99, 100, 93, 93, 82, 80, 70, 62, 70, 72, 67, 63, 60, 60,
-58, 58, 60, 68, 70, 70, 69, 68, 79, 68, 64, 62, 60, 59,
-57, 57, 88, 120, 151, 162, 154, 149, 155,
-103, 99, 95, 94, 84, 73, 67, 62, 65, 69, 67, 64, 63, 64,
-63, 59, 60, 65, 71, 69, 69, 67, 78, 65, 63, 61, 59, 61,
-60, 68, 100, 128, 155, 155, 152, 155, 164,
-104, 102, 99, 95, 86, 74, 67, 61, 61, 66, 65, 63, 63, 64,
-65, 63, 60, 63, 70, 69, 67, 67, 67, 65, 62, 60, 58, 57,
-62, 58, 71, 117, 150, 154, 157, 155, 163,
-104, 101, 99, 91, 84, 74, 59, 59, 62, 64, 63, 61, 62, 64,
-64, 64, 61, 60, 69, 68, 67, 69, 67, 65, 62, 59, 58, 57,
-57, 56, 59, 104, 137, 147, 159, 161, 158,
-104, 101, 99, 90, 85, 77, 60, 57, 60, 62, 62, 62, 63, 64,
-65, 65, 66, 100, 67, 67, 69, 69, 67, 65, 63, 60, 58, 56,
-54, 55, 56, 77, 122, 142, 166, 157, 150,
-104, 101, 97, 92, 77, 79, 64, 57, 57, 62, 62, 62, 64, 65,
-66, 65, 115, 138, 129, 64, 68, 70, 68, 66, 64, 60, 58, 56,
-53, 53, 56, 62, 115, 143, 157, 156, 159
-};
-
-const size_t byte_array2_size = sizeof(byte_array2);
-
-const unsigned char byte_array3[YSIZE * XSIZE] =
-{
-211, 221, 216, 201, 205, 216, 195, 236, 244, 237, 250, 250, 248, 218,
-223, 232, 236, 224, 221, 221, 227, 231, 232, 227, 229, 227, 227, 225,
-227, 225, 226, 226, 226, 228, 234, 234, 234, 216, 226, 228, 205, 200,
-214, 198, 215, 250, 233, 247, 250, 242, 219, 220, 229, 235, 225, 217,
-220, 227, 232, 230, 228, 229, 228, 227, 224, 225, 223, 226, 225, 226,
-230, 233, 233, 234, 213, 227, 237, 220, 200, 204, 202, 201, 248, 231,
-246, 250, 245, 214, 215, 223, 232, 225, 218, 218, 225, 230, 232, 231,
-229, 227, 225, 224, 223, 226, 224, 225, 228, 229, 230, 232, 231, 215,
-223, 242, 233, 206, 200, 201, 197, 250, 227, 250, 249, 248, 211, 212,
-216, 233, 229, 216, 218, 225, 230, 232, 237, 226, 224, 224, 223, 225,
-225, 224, 225, 228, 229, 231, 229, 231, 208, 220, 247, 238, 221, 202,
-194, 194, 245, 237, 247, 247, 249, 234, 210, 212, 237, 222, 219, 217,
-226, 229, 232, 235, 222, 222, 223, 223, 223, 224, 224, 227, 226, 229,
-229, 228, 231, 200, 221, 247, 239, 224, 217, 196, 189, 229, 248, 245,
-248, 250, 241, 210, 210, 230, 225, 218, 218, 224, 230, 230, 229, 224,
-222, 222, 222, 222, 223, 225, 226, 231, 226, 228, 229, 230, 191, 216,
-246, 245, 226, 228, 207, 191, 221, 251, 248, 249, 251, 245, 214, 214,
-233, 229, 217, 217, 224, 229, 230, 229, 225, 220, 223, 221, 222, 224,
-224, 227, 230, 227, 226, 229, 230, 187, 199, 238, 248, 242, 231, 213,
-211, 209, 246, 248, 251, 251, 250, 226, 215, 236, 237, 217, 215, 222,
-226, 229, 229, 227, 222, 222, 223, 222, 225, 227, 228, 226, 227, 228,
-228, 230, 188, 189, 221, 243, 247, 237, 215, 209, 223, 241, 248, 248,
-250, 248, 228, 234, 251, 239, 219, 210, 205, 224, 229, 228, 230, 221,
-223, 223, 222, 226, 229, 228, 224, 227, 229, 230, 232, 190, 190, 201,
-235, 236, 238, 198, 214, 243, 238, 248, 248, 250, 249, 215, 244, 250,
-250, 240, 168, 220, 224, 228, 230, 231, 226, 221, 224, 223, 226, 230,
-227, 226, 226, 230, 233, 234, 179, 185, 195, 224, 215, 210, 195, 204,
-239, 245, 250, 250, 252, 254, 216, 243, 249, 249, 233, 210, 215, 223,
-227, 230, 234, 234, 224, 223, 223, 227, 230, 226, 226, 228, 231, 235,
-212, 178, 174, 190, 211, 207, 199, 189, 194, 230, 250, 250, 250, 253,
-253, 222, 225, 250, 248, 218, 216, 217, 225, 226, 232, 239, 242, 229,
-223, 224, 229, 230, 225, 228, 230, 236, 241, 183, 194, 194, 185, 190,
-185, 190, 191, 191, 219, 250, 251, 250, 253, 254, 241, 225, 246, 249,
-198, 217, 220, 224, 225, 234, 241, 242, 246, 224, 223, 227, 229, 227,
-228, 234, 237, 245, 149, 203, 178, 182, 193, 185, 179, 191, 194, 211,
-236, 252, 252, 254, 254, 253, 192, 240, 244, 235, 224, 220, 229, 224,
-236, 239, 243, 244, 236, 224, 229, 230, 229, 231, 230, 233, 244, 128,
-188, 177, 171, 184, 191, 182, 196, 197, 208, 224, 247, 253, 255, 252,
-250, 248, 226, 216, 228, 230, 220, 220, 227, 234, 237, 231, 247, 244,
-231, 231, 229, 228, 229, 182, 128, 196, 118, 160, 182, 174, 172, 179,
-183, 216, 203, 206, 220, 236, 253, 254, 253, 253, 249, 225, 219, 232,
-230, 220, 224, 227, 233, 237, 234, 244, 250, 245, 240, 224, 212, 174,
-123, 124, 176, 127, 171, 163, 161, 167, 177, 198, 221, 228, 212, 215,
-233, 245, 252, 255, 253, 252, 251, 223, 231, 216, 222, 227, 231, 231,
-234, 227, 238, 245, 249, 244, 210, 177, 124, 129, 134, 124, 113, 156,
-155, 172, 168, 197, 201, 224, 247, 224, 219, 233, 242, 249, 250, 252,
-254, 252, 230, 230, 224, 224, 225, 225, 227, 232, 232, 235, 239, 239,
-241, 213, 178, 131, 128, 128, 120, 114, 149, 157, 165, 168, 191, 218,
-231, 246, 237, 226, 234, 241, 243, 239, 244, 252, 249, 237, 225, 226,
-224, 227, 220, 229, 235, 235, 239, 238, 236, 230, 204, 177, 125, 131,
-127, 117, 111, 146, 151, 158, 166, 187, 215, 230, 246, 246, 231, 238,
-243, 246, 243, 241, 244, 253, 245, 226, 226, 229, 229, 229, 231, 236,
-238, 241, 240, 241, 235, 224, 188, 134, 123, 127, 116, 116, 144, 151,
-158, 173, 190, 214, 251, 250, 243, 236, 242, 249, 246, 241, 241, 244,
-251, 251, 228, 230, 230, 226, 232, 231, 236, 241, 243, 244, 243, 243,
-235, 200, 150, 128, 122, 119, 117, 144, 151, 156, 176, 190, 207, 246,
-253, 244, 239, 244, 246, 244, 242, 240, 243, 249, 198, 239, 234, 226,
-226, 228, 234, 238, 241, 244, 245, 247, 250, 244, 219, 182, 138, 118,
-118, 116, 143, 150, 162, 173, 208, 205, 238, 253, 251, 241, 244, 244,
-242, 243, 238, 246, 193, 146, 173, 246, 231, 223, 230, 232, 236, 240,
-245, 247, 252, 252, 245, 233, 195, 138, 114, 118, 108
-};
-
-const size_t byte_array3_size = sizeof(byte_array3);
-
-const float array_float1[YSIZE * XSIZE] =
-{
-234.866, 229.404, 234.866, 245.790, 243.059, 232.135, 245.790, 213.018,
-210.287, 215.749, 204.825, 210.287, 215.749, 234.866, 237.597, 226.673,
-223.942, 237.597, 243.059, 240.328, 234.866, 237.597, 240.328, 237.597,
-221.211, 229.404, 232.135, 232.135, 229.404, 234.866, 240.328, 248.521,
-262.176, 259.445, 264.907, 259.445, 243.059,
-232.135, 223.942, 221.211, 240.328, 243.059, 232.135, 243.059, 226.673,
-202.094, 215.749, 207.556, 210.287, 218.480, 237.597, 237.597, 229.404,
-229.404, 240.328, 245.790, 243.059, 237.597, 232.135, 237.597, 240.328,
-226.673, 218.480, 223.942, 229.404, 232.135, 237.597, 245.790, 259.445,
-262.176, 259.445, 259.445, 251.252, 245.790,
-232.135, 221.211, 215.749, 229.404, 245.790, 237.597, 240.328, 240.328,
-199.363, 215.749, 204.825, 207.556, 215.749, 240.328, 240.328, 237.597,
-232.135, 245.790, 251.252, 243.059, 240.328, 240.328, 237.597, 234.866,
-229.404, 223.942, 223.942, 226.673, 237.597, 243.059, 253.983, 256.714,
-253.983, 253.983, 251.252, 251.252, 262.176,
-232.135, 223.942, 207.556, 218.480, 240.328, 243.059, 240.328, 243.059,
-199.363, 218.480, 204.825, 204.825, 210.287, 243.059, 251.252, 253.983,
-248.521, 243.059, 256.714, 251.252, 245.790, 243.059, 240.328, 229.404,
-229.404, 223.942, 223.942, 232.135, 240.328, 248.521, 256.714, 253.983,
-253.983, 243.059, 245.790, 262.176, 262.176,
-237.597, 226.673, 204.825, 210.287, 226.673, 243.059, 245.790, 245.790,
-202.094, 213.018, 207.556, 207.556, 207.556, 229.404, 256.714, 273.100,
-243.059, 251.252, 256.714, 251.252, 245.790, 243.059, 245.790, 232.135,
-229.404, 226.673, 226.673, 237.597, 248.521, 251.252, 240.328, 251.252,
-248.521, 240.328, 245.790, 264.907, 259.445,
-243.059, 226.673, 202.094, 210.287, 223.942, 229.404, 245.790, 251.252,
-213.018, 196.632, 207.556, 204.825, 204.825, 221.211, 259.445, 275.831,
-259.445, 251.252, 259.445, 253.983, 245.790, 243.059, 245.790, 237.597,
-234.866, 229.404, 234.866, 240.328, 245.790, 245.790, 237.597, 245.790,
-243.059, 245.790, 243.059, 267.638, 267.638,
-251.252, 229.404, 204.825, 207.556, 221.211, 221.211, 234.866, 248.521,
-221.211, 196.632, 202.094, 202.094, 204.825, 221.211, 284.024, 294.948,
-253.983, 251.252, 259.445, 256.714, 240.328, 237.597, 243.059, 237.597,
-232.135, 232.135, 240.328, 243.059, 253.983, 248.521, 240.328, 240.328,
-248.521, 240.328, 248.521, 289.486, 294.948,
-253.983, 243.059, 213.018, 204.825, 210.287, 218.480, 232.135, 234.866,
-232.135, 199.363, 196.632, 199.363, 202.094, 215.749, 278.562, 275.831,
-240.328, 251.252, 253.983, 248.521, 237.597, 237.597, 234.866, 237.597,
-232.135, 234.866, 240.328, 243.059, 256.714, 256.714, 245.790, 240.328,
-232.135, 234.866, 267.638, 297.679, 308.603,
-251.252, 253.983, 226.673, 207.556, 202.094, 215.749, 229.404, 232.135,
-221.211, 204.825, 196.632, 199.363, 202.094, 215.749, 286.755, 234.866,
-234.866, 251.252, 262.176, 267.638, 284.024, 234.866, 232.135, 232.135,
-232.135, 240.328, 245.790, 245.790, 253.983, 251.252, 240.328, 237.597,
-234.866, 243.059, 264.907, 300.410, 297.679,
-251.252, 253.983, 243.059, 213.018, 215.749, 213.018, 243.059, 229.404,
-204.825, 207.556, 199.363, 196.632, 199.363, 213.018, 286.755, 226.673,
-223.942, 240.328, 226.673, 292.217, 259.445, 229.404, 232.135, 229.404,
-234.866, 237.597, 245.790, 248.521, 251.252, 245.790, 240.328, 237.597,
-243.059, 245.790, 248.521, 270.369, 292.217,
-262.176, 256.714, 248.521, 223.942, 229.404, 234.866, 248.521, 237.597,
-204.825, 202.094, 199.363, 199.363, 199.363, 210.287, 275.831, 234.866,
-226.673, 243.059, 251.252, 270.369, 267.638, 234.866, 234.866, 237.597,
-226.673, 229.404, 243.059, 243.059, 251.252, 251.252, 251.252, 262.176,
-262.176, 237.597, 248.521, 245.790, 267.638,
-262.176, 264.907, 256.714, 237.597, 240.328, 243.059, 251.252, 245.790,
-215.749, 196.632, 199.363, 199.363, 202.094, 210.287, 273.100, 251.252,
-229.404, 234.866, 267.638, 273.100, 251.252, 237.597, 240.328, 240.328,
-229.404, 226.673, 237.597, 243.059, 248.521, 256.714, 256.714, 262.176,
-253.983, 237.597, 237.597, 229.404, 297.679,
-253.983, 251.252, 259.445, 251.252, 256.714, 253.983, 251.252, 248.521,
-223.942, 196.632, 199.363, 202.094, 202.094, 207.556, 259.445, 243.059,
-232.135, 229.404, 278.562, 243.059, 232.135, 240.328, 256.714, 234.866,
-223.942, 226.673, 223.942, 248.521, 256.714, 264.907, 245.790, 251.252,
-232.135, 245.790, 232.135, 215.749, 341.375,
-243.059, 262.176, 256.714, 245.790, 256.714, 259.445, 248.521, 248.521,
-232.135, 207.556, 196.632, 199.363, 202.094, 204.825, 240.328, 273.100,
-226.673, 229.404, 229.404, 226.673, 232.135, 240.328, 245.790, 232.135,
-229.404, 226.673, 229.404, 240.328, 251.252, 253.983, 245.790, 243.059,
-229.404, 245.790, 256.714, 215.749, 379.609,
-253.983, 264.907, 264.907, 253.983, 251.252, 259.445, 248.521, 245.790,
-237.597, 221.211, 202.094, 199.363, 199.363, 202.094, 232.135, 264.907,
-259.445, 259.445, 243.059, 234.866, 234.866, 251.252, 237.597, 232.135,
-229.404, 245.790, 234.866, 232.135, 248.521, 237.597, 237.597, 234.866,
-253.983, 338.644, 382.340, 289.486, 390.533,
-275.831, 259.445, 264.907, 264.907, 262.176, 259.445, 229.404, 240.328,
-237.597, 223.942, 213.018, 199.363, 199.363, 202.094, 223.942, 251.252,
-284.024, 259.445, 240.328, 243.059, 237.597, 243.059, 234.866, 232.135,
-234.866, 237.597, 237.597, 221.211, 221.211, 226.673, 248.521, 289.486,
-357.761, 417.843, 412.381, 335.913, 363.223,
-270.369, 275.831, 278.562, 270.369, 262.176, 245.790, 226.673, 223.942,
-232.135, 229.404, 215.749, 207.556, 202.094, 202.094, 213.018, 221.211,
-243.059, 262.176, 245.790, 253.983, 240.328, 240.328, 234.866, 240.328,
-243.059, 259.445, 243.059, 223.942, 221.211, 232.135, 284.024, 322.258,
-385.071, 436.960, 352.299, 374.147, 401.457,
-281.293, 284.024, 267.638, 270.369, 245.790, 240.328, 221.211, 207.556,
-221.211, 226.673, 215.749, 210.287, 204.825, 204.825, 204.825, 207.556,
-218.480, 245.790, 256.714, 237.597, 234.866, 237.597, 251.252, 232.135,
-232.135, 232.135, 237.597, 237.597, 243.059, 248.521, 305.872, 314.065,
-395.995, 420.574, 395.995, 385.071, 401.457,
-289.486, 281.293, 273.100, 270.369, 251.252, 223.942, 213.018, 204.825,
-213.018, 221.211, 215.749, 210.287, 210.287, 213.018, 213.018, 207.556,
-210.287, 221.211, 243.059, 237.597, 229.404, 229.404, 245.790, 234.866,
-232.135, 229.404, 218.480, 232.135, 264.907, 284.024, 324.989, 324.989,
-406.919, 401.457, 393.264, 398.726, 415.112,
-292.217, 286.755, 281.293, 273.100, 253.983, 226.673, 213.018, 202.094,
-202.094, 215.749, 213.018, 210.287, 207.556, 213.018, 218.480, 215.749,
-207.556, 213.018, 226.673, 229.404, 221.211, 221.211, 229.404, 226.673,
-223.942, 213.018, 213.018, 232.135, 234.866, 264.907, 286.755, 311.334,
-395.995, 398.726, 404.188, 401.457, 409.650,
-292.217, 286.755, 281.293, 264.907, 251.252, 229.404, 196.632, 196.632,
-204.825, 210.287, 207.556, 204.825, 207.556, 215.749, 218.480, 218.480,
-210.287, 207.556, 223.942, 221.211, 218.480, 221.211, 218.480, 218.480,
-218.480, 210.287, 202.094, 202.094, 199.363, 210.287, 248.521, 300.410,
-360.492, 385.071, 415.112, 415.112, 395.995,
-292.217, 286.755, 281.293, 262.176, 251.252, 234.866, 199.363, 193.901,
-199.363, 204.825, 204.825, 207.556, 207.556, 213.018, 218.480, 218.480,
-218.480, 267.638, 218.480, 218.480, 223.942, 223.942, 218.480, 213.018,
-207.556, 199.363, 193.901, 196.632, 193.901, 202.094, 218.480, 294.948,
-324.989, 371.416, 431.498, 387.802, 374.147,
-292.217, 284.024, 275.831, 264.907, 232.135, 237.597, 204.825, 191.170,
-191.170, 202.094, 202.094, 204.825, 210.287, 213.018, 218.480, 223.942,
-300.410, 319.527, 300.410, 213.018, 221.211, 226.673, 221.211, 213.018,
-207.556, 199.363, 193.901, 188.439, 185.708, 193.901, 202.094, 259.445,
-327.720, 376.878, 404.188, 390.533, 379.609
-};
-
-const size_t array_float1_size = sizeof(array_float1);
-
-const float array_float2[YSIZE * XSIZE] =
-{
-210.287, 199.363, 207.556, 218.480, 215.749, 204.825, 223.942, 177.515,
-169.322, 174.784, 161.129, 161.129, 166.591, 196.632, 191.170, 182.977,
-177.515, 191.170, 193.901, 191.170, 185.708, 180.246, 177.515, 182.977,
-180.246, 180.246, 180.246, 180.246, 180.246, 180.246, 180.246, 180.246,
-180.246, 177.515, 172.053, 172.053, 169.322,
-204.825, 193.901, 193.901, 215.749, 221.211, 204.825, 221.211, 199.363,
-161.129, 177.515, 163.860, 163.860, 174.784, 199.363, 199.363, 185.708,
-180.246, 191.170, 196.632, 193.901, 185.708, 180.246, 180.246, 182.977,
-180.246, 180.246, 180.246, 182.977, 182.977, 182.977, 180.246, 182.977,
-180.246, 174.784, 172.053, 172.053, 172.053,
-207.556, 193.901, 180.246, 199.363, 221.211, 213.018, 218.480, 215.749,
-161.129, 180.246, 163.860, 161.129, 169.322, 202.094, 202.094, 193.901,
-182.977, 191.170, 199.363, 193.901, 185.708, 180.246, 177.515, 177.515,
-180.246, 180.246, 182.977, 182.977, 182.977, 182.977, 182.977, 182.977,
-180.246, 174.784, 174.784, 174.784, 174.784,
-207.556, 196.632, 174.784, 185.708, 215.749, 221.211, 218.480, 218.480,
-161.129, 185.708, 163.860, 161.129, 163.860, 204.825, 204.825, 199.363,
-182.977, 185.708, 199.363, 196.632, 185.708, 180.246, 177.515, 172.053,
-182.977, 182.977, 182.977, 182.977, 185.708, 182.977, 182.977, 180.246,
-177.515, 174.784, 177.515, 177.515, 177.515,
-215.749, 196.632, 172.053, 180.246, 199.363, 218.480, 226.673, 223.942,
-163.860, 177.515, 166.591, 166.591, 163.860, 180.246, 204.825, 204.825,
-177.515, 191.170, 199.363, 196.632, 185.708, 180.246, 177.515, 174.784,
-185.708, 182.977, 185.708, 185.708, 185.708, 182.977, 182.977, 180.246,
-177.515, 177.515, 177.515, 180.246, 177.515,
-221.211, 199.363, 169.322, 177.515, 196.632, 202.094, 223.942, 232.135,
-180.246, 161.129, 169.322, 163.860, 163.860, 172.053, 204.825, 207.556,
-185.708, 188.439, 196.632, 196.632, 185.708, 180.246, 180.246, 177.515,
-182.977, 185.708, 185.708, 185.708, 185.708, 185.708, 180.246, 180.246,
-174.784, 180.246, 177.515, 180.246, 180.246,
-229.404, 202.094, 174.784, 174.784, 191.170, 193.901, 213.018, 229.404,
-191.170, 158.398, 163.860, 161.129, 161.129, 172.053, 204.825, 218.480,
-199.363, 182.977, 196.632, 196.632, 185.708, 180.246, 180.246, 177.515,
-180.246, 185.708, 185.708, 185.708, 185.708, 185.708, 180.246, 177.515,
-177.515, 177.515, 180.246, 182.977, 185.708,
-237.597, 221.211, 180.246, 172.053, 177.515, 185.708, 207.556, 207.556,
-204.825, 161.129, 158.398, 161.129, 161.129, 163.860, 193.901, 251.252,
-177.515, 174.784, 202.094, 196.632, 188.439, 182.977, 177.515, 177.515,
-177.515, 185.708, 188.439, 185.708, 188.439, 182.977, 177.515, 177.515,
-177.515, 177.515, 182.977, 185.708, 188.439,
-234.866, 234.866, 199.363, 174.784, 169.322, 182.977, 204.825, 207.556,
-191.170, 166.591, 158.398, 158.398, 161.129, 163.860, 221.211, 185.708,
-161.129, 172.053, 202.094, 245.790, 270.369, 182.977, 177.515, 177.515,
-174.784, 182.977, 185.708, 185.708, 185.708, 182.977, 177.515, 177.515,
-180.246, 177.515, 180.246, 185.708, 185.708,
-232.135, 232.135, 218.480, 180.246, 182.977, 182.977, 221.211, 202.094,
-169.322, 172.053, 161.129, 158.398, 158.398, 163.860, 253.983, 166.591,
-161.129, 161.129, 185.708, 314.065, 207.556, 182.977, 180.246, 174.784,
-174.784, 180.246, 185.708, 185.708, 185.708, 180.246, 177.515, 177.515,
-180.246, 177.515, 174.784, 177.515, 188.439,
-245.790, 237.597, 226.673, 193.901, 202.094, 210.287, 226.673, 215.749,
-172.053, 163.860, 161.129, 161.129, 158.398, 158.398, 245.790, 166.591,
-161.129, 161.129, 182.977, 218.480, 193.901, 185.708, 180.246, 174.784,
-172.053, 172.053, 185.708, 185.708, 185.708, 180.246, 177.515, 180.246,
-182.977, 177.515, 174.784, 169.322, 237.597,
-248.521, 251.252, 234.866, 207.556, 213.018, 221.211, 232.135, 223.942,
-182.977, 161.129, 161.129, 161.129, 161.129, 163.860, 240.328, 196.632,
-161.129, 163.860, 202.094, 218.480, 191.170, 182.977, 180.246, 174.784,
-169.322, 163.860, 177.515, 185.708, 182.977, 180.246, 177.515, 182.977,
-180.246, 174.784, 169.322, 161.129, 303.141,
-229.404, 229.404, 237.597, 232.135, 237.597, 232.135, 229.404, 229.404,
-196.632, 161.129, 161.129, 161.129, 161.129, 161.129, 199.363, 193.901,
-169.322, 161.129, 273.100, 191.170, 191.170, 182.977, 180.246, 174.784,
-163.860, 158.398, 158.398, 182.977, 185.708, 180.246, 177.515, 180.246,
-174.784, 172.053, 161.129, 152.936, 357.761,
-218.480, 245.790, 237.597, 226.673, 240.328, 243.059, 229.404, 226.673,
-207.556, 174.784, 161.129, 161.129, 161.129, 158.398, 161.129, 264.907,
-174.784, 169.322, 193.901, 185.708, 191.170, 199.363, 180.246, 172.053,
-166.591, 158.398, 158.398, 169.322, 182.977, 180.246, 174.784, 177.515,
-172.053, 172.053, 166.591, 155.667, 406.919,
-234.866, 248.521, 251.252, 237.597, 232.135, 240.328, 226.673, 221.211,
-213.018, 188.439, 166.591, 161.129, 161.129, 161.129, 161.129, 166.591,
-226.673, 196.632, 182.977, 182.977, 188.439, 188.439, 180.246, 174.784,
-166.591, 196.632, 152.936, 155.667, 174.784, 174.784, 174.784, 174.784,
-177.515, 314.065, 409.650, 253.983, 412.381,
-264.907, 243.059, 248.521, 251.252, 243.059, 240.328, 202.094, 218.480,
-213.018, 193.901, 177.515, 161.129, 158.398, 161.129, 158.398, 161.129,
-193.901, 196.632, 182.977, 191.170, 191.170, 188.439, 182.977, 174.784,
-172.053, 180.246, 152.936, 147.474, 155.667, 161.129, 174.784, 237.597,
-379.609, 442.422, 436.960, 349.568, 385.071,
-256.714, 262.176, 264.907, 256.714, 243.059, 223.942, 193.901, 191.170,
-207.556, 199.363, 182.977, 166.591, 161.129, 161.129, 158.398, 161.129,
-166.591, 193.901, 182.977, 204.825, 191.170, 185.708, 191.170, 177.515,
-172.053, 172.053, 161.129, 152.936, 147.474, 150.205, 245.790, 330.451,
-406.919, 458.808, 376.878, 393.264, 428.767,
-270.369, 273.100, 253.983, 253.983, 223.942, 218.480, 191.170, 169.322,
-191.170, 196.632, 182.977, 172.053, 163.860, 163.860, 158.398, 158.398,
-163.860, 185.708, 191.170, 191.170, 188.439, 185.708, 215.749, 185.708,
-174.784, 169.322, 163.860, 161.129, 155.667, 155.667, 240.328, 327.720,
-412.381, 442.422, 420.574, 406.919, 423.305,
-281.293, 270.369, 259.445, 256.714, 229.404, 199.363, 182.977, 169.322,
-177.515, 188.439, 182.977, 174.784, 172.053, 174.784, 172.053, 161.129,
-163.860, 177.515, 193.901, 188.439, 188.439, 182.977, 213.018, 177.515,
-172.053, 166.591, 161.129, 166.591, 163.860, 185.708, 273.100, 349.568,
-423.305, 423.305, 415.112, 423.305, 447.884,
-284.024, 278.562, 270.369, 259.445, 234.866, 202.094, 182.977, 166.591,
-166.591, 180.246, 177.515, 172.053, 172.053, 174.784, 177.515, 172.053,
-163.860, 172.053, 191.170, 188.439, 182.977, 182.977, 182.977, 177.515,
-169.322, 163.860, 158.398, 155.667, 169.322, 158.398, 193.901, 319.527,
-409.650, 420.574, 428.767, 423.305, 445.153,
-284.024, 275.831, 270.369, 248.521, 229.404, 202.094, 161.129, 161.129,
-169.322, 174.784, 172.053, 166.591, 169.322, 174.784, 174.784, 174.784,
-166.591, 163.860, 188.439, 185.708, 182.977, 188.439, 182.977, 177.515,
-169.322, 161.129, 158.398, 155.667, 155.667, 152.936, 161.129, 284.024,
-374.147, 401.457, 434.229, 439.691, 431.498,
-284.024, 275.831, 270.369, 245.790, 232.135, 210.287, 163.860, 155.667,
-163.860, 169.322, 169.322, 169.322, 172.053, 174.784, 177.515, 177.515,
-180.246, 273.100, 182.977, 182.977, 188.439, 188.439, 182.977, 177.515,
-172.053, 163.860, 158.398, 152.936, 147.474, 150.205, 152.936, 210.287,
-333.182, 387.802, 453.346, 428.767, 409.650,
-284.024, 275.831, 264.907, 251.252, 210.287, 215.749, 174.784, 155.667,
-155.667, 169.322, 169.322, 169.322, 174.784, 177.515, 180.246, 177.515,
-314.065, 376.878, 352.299, 174.784, 185.708, 191.170, 185.708, 180.246,
-174.784, 163.860, 158.398, 152.936, 144.743, 144.743, 152.936, 169.322,
-314.065, 390.533, 428.767, 426.036, 434.229
-};
-
-const size_t array_float2_size = sizeof(array_float2);
-
-const double array_double1[YSIZE * XSIZE] =
-{
-148.914762, 145.451628, 148.914762, 155.841030, 154.109463, 147.183195,
-155.841030, 135.062226, 133.330659, 136.793793, 129.867525, 133.330659,
-136.793793, 148.914762, 150.646329, 143.720061, 141.988494, 150.646329,
-154.109463, 152.377896, 148.914762, 150.646329, 152.377896, 150.646329,
-140.256927, 145.451628, 147.183195, 147.183195, 145.451628, 148.914762,
-152.377896, 157.572597, 166.230432, 164.498865, 167.961999, 164.498865,
-154.109463,
-147.183195, 141.988494, 140.256927, 152.377896, 154.109463, 147.183195,
-154.109463, 143.720061, 128.135958, 136.793793, 131.599092, 133.330659,
-138.525360, 150.646329, 150.646329, 145.451628, 145.451628, 152.377896,
-155.841030, 154.109463, 150.646329, 147.183195, 150.646329, 152.377896,
-143.720061, 138.525360, 141.988494, 145.451628, 147.183195, 150.646329,
-155.841030, 164.498865, 166.230432, 164.498865, 164.498865, 159.304164,
-155.841030,
-147.183195, 140.256927, 136.793793, 145.451628, 155.841030, 150.646329,
-152.377896, 152.377896, 126.404391, 136.793793, 129.867525, 131.599092,
-136.793793, 152.377896, 152.377896, 150.646329, 147.183195, 155.841030,
-159.304164, 154.109463, 152.377896, 152.377896, 150.646329, 148.914762,
-145.451628, 141.988494, 141.988494, 143.720061, 150.646329, 154.109463,
-161.035731, 162.767298, 161.035731, 161.035731, 159.304164, 159.304164,
-166.230432,
-147.183195, 141.988494, 131.599092, 138.525360, 152.377896, 154.109463,
-152.377896, 154.109463, 126.404391, 138.525360, 129.867525, 129.867525,
-133.330659, 154.109463, 159.304164, 161.035731, 157.572597, 154.109463,
-162.767298, 159.304164, 155.841030, 154.109463, 152.377896, 145.451628,
-145.451628, 141.988494, 141.988494, 147.183195, 152.377896, 157.572597,
-162.767298, 161.035731, 161.035731, 154.109463, 155.841030, 166.230432,
-166.230432,
-150.646329, 143.720061, 129.867525, 133.330659, 143.720061, 154.109463,
-155.841030, 155.841030, 128.135958, 135.062226, 131.599092, 131.599092,
-131.599092, 145.451628, 162.767298, 173.156700, 154.109463, 159.304164,
-162.767298, 159.304164, 155.841030, 154.109463, 155.841030, 147.183195,
-145.451628, 143.720061, 143.720061, 150.646329, 157.572597, 159.304164,
-152.377896, 159.304164, 157.572597, 152.377896, 155.841030, 167.961999,
-164.498865,
-154.109463, 143.720061, 128.135958, 133.330659, 141.988494, 145.451628,
-155.841030, 159.304164, 135.062226, 124.672824, 131.599092, 129.867525,
-129.867525, 140.256927, 164.498865, 174.888267, 164.498865, 159.304164,
-164.498865, 161.035731, 155.841030, 154.109463, 155.841030, 150.646329,
-148.914762, 145.451628, 148.914762, 152.377896, 155.841030, 155.841030,
-150.646329, 155.841030, 154.109463, 155.841030, 154.109463, 169.693566,
-169.693566,
-159.304164, 145.451628, 129.867525, 131.599092, 140.256927, 140.256927,
-148.914762, 157.572597, 140.256927, 124.672824, 128.135958, 128.135958,
-129.867525, 140.256927, 180.082968, 187.009236, 161.035731, 159.304164,
-164.498865, 162.767298, 152.377896, 150.646329, 154.109463, 150.646329,
-147.183195, 147.183195, 152.377896, 154.109463, 161.035731, 157.572597,
-152.377896, 152.377896, 157.572597, 152.377896, 157.572597, 183.546102,
-187.009236,
-161.035731, 154.109463, 135.062226, 129.867525, 133.330659, 138.525360,
-147.183195, 148.914762, 147.183195, 126.404391, 124.672824, 126.404391,
-128.135958, 136.793793, 176.619834, 174.888267, 152.377896, 159.304164,
-161.035731, 157.572597, 150.646329, 150.646329, 148.914762, 150.646329,
-147.183195, 148.914762, 152.377896, 154.109463, 162.767298, 162.767298,
-155.841030, 152.377896, 147.183195, 148.914762, 169.693566, 188.740803,
-195.667071,
-159.304164, 161.035731, 143.720061, 131.599092, 128.135958, 136.793793,
-145.451628, 147.183195, 140.256927, 129.867525, 124.672824, 126.404391,
-128.135958, 136.793793, 181.814535, 148.914762, 148.914762, 159.304164,
-166.230432, 169.693566, 180.082968, 148.914762, 147.183195, 147.183195,
-147.183195, 152.377896, 155.841030, 155.841030, 161.035731, 159.304164,
-152.377896, 150.646329, 148.914762, 154.109463, 167.961999, 190.472370,
-188.740803,
-159.304164, 161.035731, 154.109463, 135.062226, 136.793793, 135.062226,
-154.109463, 145.451628, 129.867525, 131.599092, 126.404391, 124.672824,
-126.404391, 135.062226, 181.814535, 143.720061, 141.988494, 152.377896,
-143.720061, 185.277669, 164.498865, 145.451628, 147.183195, 145.451628,
-148.914762, 150.646329, 155.841030, 157.572597, 159.304164, 155.841030,
-152.377896, 150.646329, 154.109463, 155.841030, 157.572597, 171.425133,
-185.277669,
-166.230432, 162.767298, 157.572597, 141.988494, 145.451628, 148.914762,
-157.572597, 150.646329, 129.867525, 128.135958, 126.404391, 126.404391,
-126.404391, 133.330659, 174.888267, 148.914762, 143.720061, 154.109463,
-159.304164, 171.425133, 169.693566, 148.914762, 148.914762, 150.646329,
-143.720061, 145.451628, 154.109463, 154.109463, 159.304164, 159.304164,
-159.304164, 166.230432, 166.230432, 150.646329, 157.572597, 155.841030,
-169.693566,
-166.230432, 167.961999, 162.767298, 150.646329, 152.377896, 154.109463,
-159.304164, 155.841030, 136.793793, 124.672824, 126.404391, 126.404391,
-128.135958, 133.330659, 173.156700, 159.304164, 145.451628, 148.914762,
-169.693566, 173.156700, 159.304164, 150.646329, 152.377896, 152.377896,
-145.451628, 143.720061, 150.646329, 154.109463, 157.572597, 162.767298,
-162.767298, 166.230432, 161.035731, 150.646329, 150.646329, 145.451628,
-188.740803,
-161.035731, 159.304164, 164.498865, 159.304164, 162.767298, 161.035731,
-159.304164, 157.572597, 141.988494, 124.672824, 126.404391, 128.135958,
-128.135958, 131.599092, 164.498865, 154.109463, 147.183195, 145.451628,
-176.619834, 154.109463, 147.183195, 152.377896, 162.767298, 148.914762,
-141.988494, 143.720061, 141.988494, 157.572597, 162.767298, 167.961999,
-155.841030, 159.304164, 147.183195, 155.841030, 147.183195, 136.793793,
-216.445875,
-154.109463, 166.230432, 162.767298, 155.841030, 162.767298, 164.498865,
-157.572597, 157.572597, 147.183195, 131.599092, 124.672824, 126.404391,
-128.135958, 129.867525, 152.377896, 173.156700, 143.720061, 145.451628,
-145.451628, 143.720061, 147.183195, 152.377896, 155.841030, 147.183195,
-145.451628, 143.720061, 145.451628, 152.377896, 159.304164, 161.035731,
-155.841030, 154.109463, 145.451628, 155.841030, 162.767298, 136.793793,
-240.687813,
-161.035731, 167.961999, 167.961999, 161.035731, 159.304164, 164.498865,
-157.572597, 155.841030, 150.646329, 140.256927, 128.135958, 126.404391,
-126.404391, 128.135958, 147.183195, 167.961999, 164.498865, 164.498865,
-154.109463, 148.914762, 148.914762, 159.304164, 150.646329, 147.183195,
-145.451628, 155.841030, 148.914762, 147.183195, 157.572597, 150.646329,
-150.646329, 148.914762, 161.035731, 214.714308, 242.419380, 183.546102,
-247.614081,
-174.888267, 164.498865, 167.961999, 167.961999, 166.230432, 164.498865,
-145.451628, 152.377896, 150.646329, 141.988494, 135.062226, 126.404391,
-126.404391, 128.135958, 141.988494, 159.304164, 180.082968, 164.498865,
-152.377896, 154.109463, 150.646329, 154.109463, 148.914762, 147.183195,
-148.914762, 150.646329, 150.646329, 140.256927, 140.256927, 143.720061,
-157.572597, 183.546102, 226.835277, 264.929751, 261.466617, 212.982741,
-230.298411,
-171.425133, 174.888267, 176.619834, 171.425133, 166.230432, 155.841030,
-143.720061, 141.988494, 147.183195, 145.451628, 136.793793, 131.599092,
-128.135958, 128.135958, 135.062226, 140.256927, 154.109463, 166.230432,
-155.841030, 161.035731, 152.377896, 152.377896, 148.914762, 152.377896,
-154.109463, 164.498865, 154.109463, 141.988494, 140.256927, 147.183195,
-180.082968, 204.324906, 244.150947, 277.050720, 223.372143, 237.224679,
-254.540349,
-178.351401, 180.082968, 169.693566, 171.425133, 155.841030, 152.377896,
-140.256927, 131.599092, 140.256927, 143.720061, 136.793793, 133.330659,
-129.867525, 129.867525, 129.867525, 131.599092, 138.525360, 155.841030,
-162.767298, 150.646329, 148.914762, 150.646329, 159.304164, 147.183195,
-147.183195, 147.183195, 150.646329, 150.646329, 154.109463, 157.572597,
-193.935504, 199.130205, 251.077215, 266.661318, 251.077215, 244.150947,
-254.540349,
-183.546102, 178.351401, 173.156700, 171.425133, 159.304164, 141.988494,
-135.062226, 129.867525, 135.062226, 140.256927, 136.793793, 133.330659,
-133.330659, 135.062226, 135.062226, 131.599092, 133.330659, 140.256927,
-154.109463, 150.646329, 145.451628, 145.451628, 155.841030, 148.914762,
-147.183195, 145.451628, 138.525360, 147.183195, 167.961999, 180.082968,
-206.056473, 206.056473, 258.003483, 254.540349, 249.345648, 252.808782,
-263.198184,
-185.277669, 181.814535, 178.351401, 173.156700, 161.035731, 143.720061,
-135.062226, 128.135958, 128.135958, 136.793793, 135.062226, 133.330659,
-131.599092, 135.062226, 138.525360, 136.793793, 131.599092, 135.062226,
-143.720061, 145.451628, 140.256927, 140.256927, 145.451628, 143.720061,
-141.988494, 135.062226, 135.062226, 147.183195, 148.914762, 167.961999,
-181.814535, 197.398638, 251.077215, 252.808782, 256.271916, 254.540349,
-259.735050,
-185.277669, 181.814535, 178.351401, 167.961999, 159.304164, 145.451628,
-124.672824, 124.672824, 129.867525, 133.330659, 131.599092, 129.867525,
-131.599092, 136.793793, 138.525360, 138.525360, 133.330659, 131.599092,
-141.988494, 140.256927, 138.525360, 140.256927, 138.525360, 138.525360,
-138.525360, 133.330659, 128.135958, 128.135958, 126.404391, 133.330659,
-157.572597, 190.472370, 228.566844, 244.150947, 263.198184, 263.198184,
-251.077215,
-185.277669, 181.814535, 178.351401, 166.230432, 159.304164, 148.914762,
-126.404391, 122.941257, 126.404391, 129.867525, 129.867525, 131.599092,
-131.599092, 135.062226, 138.525360, 138.525360, 138.525360, 169.693566,
-138.525360, 138.525360, 141.988494, 141.988494, 138.525360, 135.062226,
-131.599092, 126.404391, 122.941257, 124.672824, 122.941257, 128.135958,
-138.525360, 187.009236, 206.056473, 235.493112, 273.587586, 245.882514,
-237.224679,
-185.277669, 180.082968, 174.888267, 167.961999, 147.183195, 150.646329,
-129.867525, 121.209690, 121.209690, 128.135958, 128.135958, 129.867525,
-133.330659, 135.062226, 138.525360, 141.988494, 190.472370, 202.593339,
-190.472370, 135.062226, 140.256927, 143.720061, 140.256927, 135.062226,
-131.599092, 126.404391, 122.941257, 119.478123, 117.746556, 122.941257,
-128.135958, 164.498865, 207.788040, 238.956246, 256.271916, 247.614081,
-240.687813
-};
-
-const size_t array_double1_size = sizeof(array_double1);
-
-const double array_double2[YSIZE * XSIZE] =
-{
-133.330659, 126.404391, 131.599092, 138.525360, 136.793793, 129.867525,
-141.988494, 112.551855, 107.357154, 110.820288, 102.162453, 102.162453,
-105.625587, 124.672824, 121.209690, 116.014989, 112.551855, 121.209690,
-122.941257, 121.209690, 117.746556, 114.283422, 112.551855, 116.014989,
-114.283422, 114.283422, 114.283422, 114.283422, 114.283422, 114.283422,
-114.283422, 114.283422, 114.283422, 112.551855, 109.088721, 109.088721,
-107.357154,
-129.867525, 122.941257, 122.941257, 136.793793, 140.256927, 129.867525,
-140.256927, 126.404391, 102.162453, 112.551855, 103.894020, 103.894020,
-110.820288, 126.404391, 126.404391, 117.746556, 114.283422, 121.209690,
-124.672824, 122.941257, 117.746556, 114.283422, 114.283422, 116.014989,
-114.283422, 114.283422, 114.283422, 116.014989, 116.014989, 116.014989,
-114.283422, 116.014989, 114.283422, 110.820288, 109.088721, 109.088721,
-109.088721,
-131.599092, 122.941257, 114.283422, 126.404391, 140.256927, 135.062226,
-138.525360, 136.793793, 102.162453, 114.283422, 103.894020, 102.162453,
-107.357154, 128.135958, 128.135958, 122.941257, 116.014989, 121.209690,
-126.404391, 122.941257, 117.746556, 114.283422, 112.551855, 112.551855,
-114.283422, 114.283422, 116.014989, 116.014989, 116.014989, 116.014989,
-116.014989, 116.014989, 114.283422, 110.820288, 110.820288, 110.820288,
-110.820288,
-131.599092, 124.672824, 110.820288, 117.746556, 136.793793, 140.256927,
-138.525360, 138.525360, 102.162453, 117.746556, 103.894020, 102.162453,
-103.894020, 129.867525, 129.867525, 126.404391, 116.014989, 117.746556,
-126.404391, 124.672824, 117.746556, 114.283422, 112.551855, 109.088721,
-116.014989, 116.014989, 116.014989, 116.014989, 117.746556, 116.014989,
-116.014989, 114.283422, 112.551855, 110.820288, 112.551855, 112.551855,
-112.551855,
-136.793793, 124.672824, 109.088721, 114.283422, 126.404391, 138.525360,
-143.720061, 141.988494, 103.894020, 112.551855, 105.625587, 105.625587,
-103.894020, 114.283422, 129.867525, 129.867525, 112.551855, 121.209690,
-126.404391, 124.672824, 117.746556, 114.283422, 112.551855, 110.820288,
-117.746556, 116.014989, 117.746556, 117.746556, 117.746556, 116.014989,
-116.014989, 114.283422, 112.551855, 112.551855, 112.551855, 114.283422,
-112.551855,
-140.256927, 126.404391, 107.357154, 112.551855, 124.672824, 128.135958,
-141.988494, 147.183195, 114.283422, 102.162453, 107.357154, 103.894020,
-103.894020, 109.088721, 129.867525, 131.599092, 117.746556, 119.478123,
-124.672824, 124.672824, 117.746556, 114.283422, 114.283422, 112.551855,
-116.014989, 117.746556, 117.746556, 117.746556, 117.746556, 117.746556,
-114.283422, 114.283422, 110.820288, 114.283422, 112.551855, 114.283422,
-114.283422,
-145.451628, 128.135958, 110.820288, 110.820288, 121.209690, 122.941257,
-135.062226, 145.451628, 121.209690, 100.430886, 103.894020, 102.162453,
-102.162453, 109.088721, 129.867525, 138.525360, 126.404391, 116.014989,
-124.672824, 124.672824, 117.746556, 114.283422, 114.283422, 112.551855,
-114.283422, 117.746556, 117.746556, 117.746556, 117.746556, 117.746556,
-114.283422, 112.551855, 112.551855, 112.551855, 114.283422, 116.014989,
-117.746556,
-150.646329, 140.256927, 114.283422, 109.088721, 112.551855, 117.746556,
-131.599092, 131.599092, 129.867525, 102.162453, 100.430886, 102.162453,
-102.162453, 103.894020, 122.941257, 159.304164, 112.551855, 110.820288,
-128.135958, 124.672824, 119.478123, 116.014989, 112.551855, 112.551855,
-112.551855, 117.746556, 119.478123, 117.746556, 119.478123, 116.014989,
-112.551855, 112.551855, 112.551855, 112.551855, 116.014989, 117.746556,
-119.478123,
-148.914762, 148.914762, 126.404391, 110.820288, 107.357154, 116.014989,
-129.867525, 131.599092, 121.209690, 105.625587, 100.430886, 100.430886,
-102.162453, 103.894020, 140.256927, 117.746556, 102.162453, 109.088721,
-128.135958, 155.841030, 171.425133, 116.014989, 112.551855, 112.551855,
-110.820288, 116.014989, 117.746556, 117.746556, 117.746556, 116.014989,
-112.551855, 112.551855, 114.283422, 112.551855, 114.283422, 117.746556,
-117.746556,
-147.183195, 147.183195, 138.525360, 114.283422, 116.014989, 116.014989,
-140.256927, 128.135958, 107.357154, 109.088721, 102.162453, 100.430886,
-100.430886, 103.894020, 161.035731, 105.625587, 102.162453, 102.162453,
-117.746556, 199.130205, 131.599092, 116.014989, 114.283422, 110.820288,
-110.820288, 114.283422, 117.746556, 117.746556, 117.746556, 114.283422,
-112.551855, 112.551855, 114.283422, 112.551855, 110.820288, 112.551855,
-119.478123,
-155.841030, 150.646329, 143.720061, 122.941257, 128.135958, 133.330659,
-143.720061, 136.793793, 109.088721, 103.894020, 102.162453, 102.162453,
-100.430886, 100.430886, 155.841030, 105.625587, 102.162453, 102.162453,
-116.014989, 138.525360, 122.941257, 117.746556, 114.283422, 110.820288,
-109.088721, 109.088721, 117.746556, 117.746556, 117.746556, 114.283422,
-112.551855, 114.283422, 116.014989, 112.551855, 110.820288, 107.357154,
-150.646329,
-157.572597, 159.304164, 148.914762, 131.599092, 135.062226, 140.256927,
-147.183195, 141.988494, 116.014989, 102.162453, 102.162453, 102.162453,
-102.162453, 103.894020, 152.377896, 124.672824, 102.162453, 103.894020,
-128.135958, 138.525360, 121.209690, 116.014989, 114.283422, 110.820288,
-107.357154, 103.894020, 112.551855, 117.746556, 116.014989, 114.283422,
-112.551855, 116.014989, 114.283422, 110.820288, 107.357154, 102.162453,
-192.203937,
-145.451628, 145.451628, 150.646329, 147.183195, 150.646329, 147.183195,
-145.451628, 145.451628, 124.672824, 102.162453, 102.162453, 102.162453,
-102.162453, 102.162453, 126.404391, 122.941257, 107.357154, 102.162453,
-173.156700, 121.209690, 121.209690, 116.014989, 114.283422, 110.820288,
-103.894020, 100.430886, 100.430886, 116.014989, 117.746556, 114.283422,
-112.551855, 114.283422, 110.820288, 109.088721, 102.162453, 96.967752,
-226.835277,
-138.525360, 155.841030, 150.646329, 143.720061, 152.377896, 154.109463,
-145.451628, 143.720061, 131.599092, 110.820288, 102.162453, 102.162453,
-102.162453, 100.430886, 102.162453, 167.961999, 110.820288, 107.357154,
-122.941257, 117.746556, 121.209690, 126.404391, 114.283422, 109.088721,
-105.625587, 100.430886, 100.430886, 107.357154, 116.014989, 114.283422,
-110.820288, 112.551855, 109.088721, 109.088721, 105.625587, 98.699319,
-258.003483,
-148.914762, 157.572597, 159.304164, 150.646329, 147.183195, 152.377896,
-143.720061, 140.256927, 135.062226, 119.478123, 105.625587, 102.162453,
-102.162453, 102.162453, 102.162453, 105.625587, 143.720061, 124.672824,
-116.014989, 116.014989, 119.478123, 119.478123, 114.283422, 110.820288,
-105.625587, 124.672824, 96.967752, 98.699319, 110.820288, 110.820288,
-110.820288, 110.820288, 112.551855, 199.130205, 259.735050, 161.035731,
-261.466617,
-167.961999, 154.109463, 157.572597, 159.304164, 154.109463, 152.377896,
-128.135958, 138.525360, 135.062226, 122.941257, 112.551855, 102.162453,
-100.430886, 102.162453, 100.430886, 102.162453, 122.941257, 124.672824,
-116.014989, 121.209690, 121.209690, 119.478123, 116.014989, 110.820288,
-109.088721, 114.283422, 96.967752, 93.504618, 98.699319, 102.162453,
-110.820288, 150.646329, 240.687813, 280.513854, 277.050720, 221.640576,
-244.150947,
-162.767298, 166.230432, 167.961999, 162.767298, 154.109463, 141.988494,
-122.941257, 121.209690, 131.599092, 126.404391, 116.014989, 105.625587,
-102.162453, 102.162453, 100.430886, 102.162453, 105.625587, 122.941257,
-116.014989, 129.867525, 121.209690, 117.746556, 121.209690, 112.551855,
-109.088721, 109.088721, 102.162453, 96.967752, 93.504618, 95.236185,
-155.841030, 209.519607, 258.003483, 290.903256, 238.956246, 249.345648,
-271.856019,
-171.425133, 173.156700, 161.035731, 161.035731, 141.988494, 138.525360,
-121.209690, 107.357154, 121.209690, 124.672824, 116.014989, 109.088721,
-103.894020, 103.894020, 100.430886, 100.430886, 103.894020, 117.746556,
-121.209690, 121.209690, 119.478123, 117.746556, 136.793793, 117.746556,
-110.820288, 107.357154, 103.894020, 102.162453, 98.699319, 98.699319,
-152.377896, 207.788040, 261.466617, 280.513854, 266.661318, 258.003483,
-268.392885,
-178.351401, 171.425133, 164.498865, 162.767298, 145.451628, 126.404391,
-116.014989, 107.357154, 112.551855, 119.478123, 116.014989, 110.820288,
-109.088721, 110.820288, 109.088721, 102.162453, 103.894020, 112.551855,
-122.941257, 119.478123, 119.478123, 116.014989, 135.062226, 112.551855,
-109.088721, 105.625587, 102.162453, 105.625587, 103.894020, 117.746556,
-173.156700, 221.640576, 268.392885, 268.392885, 263.198184, 268.392885,
-283.976988,
-180.082968, 176.619834, 171.425133, 164.498865, 148.914762, 128.135958,
-116.014989, 105.625587, 105.625587, 114.283422, 112.551855, 109.088721,
-109.088721, 110.820288, 112.551855, 109.088721, 103.894020, 109.088721,
-121.209690, 119.478123, 116.014989, 116.014989, 116.014989, 112.551855,
-107.357154, 103.894020, 100.430886, 98.699319, 107.357154, 100.430886,
-122.941257, 202.593339, 259.735050, 266.661318, 271.856019, 268.392885,
-282.245421,
-180.082968, 174.888267, 171.425133, 157.572597, 145.451628, 128.135958,
-102.162453, 102.162453, 107.357154, 110.820288, 109.088721, 105.625587,
-107.357154, 110.820288, 110.820288, 110.820288, 105.625587, 103.894020,
-119.478123, 117.746556, 116.014989, 119.478123, 116.014989, 112.551855,
-107.357154, 102.162453, 100.430886, 98.699319, 98.699319, 96.967752,
-102.162453, 180.082968, 237.224679, 254.540349, 275.319153, 278.782287,
-273.587586,
-180.082968, 174.888267, 171.425133, 155.841030, 147.183195, 133.330659,
-103.894020, 98.699319, 103.894020, 107.357154, 107.357154, 107.357154,
-109.088721, 110.820288, 112.551855, 112.551855, 114.283422, 173.156700,
-116.014989, 116.014989, 119.478123, 119.478123, 116.014989, 112.551855,
-109.088721, 103.894020, 100.430886, 96.967752, 93.504618, 95.236185,
-96.967752, 133.330659, 211.251174, 245.882514, 287.440122, 271.856019,
-259.735050,
-180.082968, 174.888267, 167.961999, 159.304164, 133.330659, 136.793793,
-110.820288, 98.699319, 98.699319, 107.357154, 107.357154, 107.357154,
-110.820288, 112.551855, 114.283422, 112.551855, 199.130205, 238.956246,
-223.372143, 110.820288, 117.746556, 121.209690, 117.746556, 114.283422,
-110.820288, 103.894020, 100.430886, 96.967752, 91.773051, 91.773051,
-96.967752, 107.357154, 199.130205, 247.614081, 271.856019, 270.124452,
-275.319153
-};
-
-const size_t array_double2_size = sizeof(array_double2);
-
-/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/test/test_arrays.h tiff-3.9.2/test/test_arrays.h
--- tiff-3.9.2.orig/test/test_arrays.h	2006-03-23 15:54:02.000000000 +0100
+++ tiff-3.9.2/test/test_arrays.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,63 +0,0 @@
-/* $Id: test_arrays.h,v 1.3 2006/03/23 14:54:02 dron Exp $ */
-
-/*
- * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
- *
- * Permission to use, copy, modify, distribute, and sell this software and 
- * its documentation for any purpose is hereby granted without fee, provided
- * that (i) the above copyright notices and this permission notice appear in
- * all copies of the software and related documentation, and (ii) the names of
- * Sam Leffler and Silicon Graphics may not be used in any advertising or
- * publicity relating to the software without the specific, prior written
- * permission of Sam Leffler and Silicon Graphics.
- * 
- * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
- * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
- * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
- * 
- * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
- * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
- * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
- * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
- * OF THIS SOFTWARE.
- */
-
-/*
- * TIFF Library
- *
- * Few declarations for the test numerical arrays.
- */
-
-#ifndef _TEST_ARRAYS_ 
-#define _TEST_ARRAYS_
-
-#include <stddef.h>
-
-#define XSIZE 37
-#define YSIZE 23
-
-extern const unsigned char byte_array1[];
-extern const size_t byte_array1_size;
-
-extern const unsigned char byte_array2[];
-extern const size_t byte_array2_size;
-
-extern const unsigned char byte_array3[];
-extern const size_t byte_array3_size;
-
-extern const float array_float1[];
-extern const size_t array_float1_size;
-
-extern const float array_float2[];
-extern const size_t array_float2_size;
-
-extern const double array_double1[];
-extern const size_t array_double1_size;
-
-extern const double array_double2[];
-extern const size_t array_double2_size;
-
-#endif /* _TEST_ARRAYS_ */
-
-/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tests/ascii_tag.c tiff-3.9.2/tests/ascii_tag.c
--- tiff-3.9.2.orig/tests/ascii_tag.c	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/ascii_tag.c	2012-01-14 14:38:26.126146200 +0100
@@ -0,0 +1,170 @@
+/* $Id: ascii_tag.c,v 1.5 2006/03/23 14:54:02 dron Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Module to test ASCII tags read/write functions.
+ */
+
+#include "tif_config.h"
+
+#include <stdio.h>
+#include <string.h>
+
+#ifdef HAVE_UNISTD_H 
+# include <unistd.h> 
+#endif 
+
+#include "tiffio.h"
+
+const char	*filename = "ascii_test.tiff";
+
+static struct Tags {
+	ttag_t		tag;
+	const char	*value;
+} ascii_tags[] = {
+	{ TIFFTAG_DOCUMENTNAME, "Test TIFF image" },
+	{ TIFFTAG_IMAGEDESCRIPTION, "Temporary test image" },
+	{ TIFFTAG_MAKE, "This is not scanned image" },
+	{ TIFFTAG_MODEL, "No scanner" },
+	{ TIFFTAG_PAGENAME, "Test page" },
+	{ TIFFTAG_SOFTWARE, "Libtiff library" },
+	{ TIFFTAG_DATETIME, "2004:09:10 16:09:00" },
+	{ TIFFTAG_ARTIST, "Andrey V. Kiselev" },
+	{ TIFFTAG_HOSTCOMPUTER, "Debian GNU/Linux (Sarge)" },
+	{ TIFFTAG_TARGETPRINTER, "No printer" },
+	{ TIFFTAG_PIXAR_TEXTUREFORMAT, "No texture" },
+	{ TIFFTAG_PIXAR_WRAPMODES, "No wrap" },
+	{ TIFFTAG_COPYRIGHT, "Copyright (c) 2004, Andrey Kiselev" }
+};
+#define NTAGS   (sizeof (ascii_tags) / sizeof (ascii_tags[0]))
+
+const char *ink_names = "Red\0Green\0Blue";
+const int ink_names_size = 15;
+
+int
+main(int argc, char **argv)
+{
+	TIFF		*tif;
+	int		i;
+	unsigned char	buf[3] = { 0, 127, 255 };
+	char		*value;
+
+	/* Test whether we can write tags. */
+	tif = TIFFOpen(filename, "w");
+	if (!tif) {
+		fprintf (stderr, "Can't create test TIFF file %s.\n", filename);
+		return 1;
+	}
+
+	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, 1)) {
+		fprintf (stderr, "Can't set ImageWidth tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, 1)) {
+		fprintf (stderr, "Can't set ImageLength tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, 8)) {
+		fprintf (stderr, "Can't set BitsPerSample tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, 3)) {
+		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, PLANARCONFIG_CONTIG)) {
+		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, PHOTOMETRIC_RGB)) {
+		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
+		goto failure;
+	}
+
+	for (i = 0; i < NTAGS; i++) {
+		if (!TIFFSetField(tif, ascii_tags[i].tag,
+				  ascii_tags[i].value)) {
+			fprintf(stderr, "Can't set tag %d.\n",
+				(int)ascii_tags[i].tag);
+			goto failure;
+		}
+	}
+
+	/* InkNames tag has special form, so we handle it separately. */
+	if (!TIFFSetField(tif, TIFFTAG_NUMBEROFINKS, 3)) {
+		fprintf (stderr, "Can't set tag %d.\n", TIFFTAG_NUMBEROFINKS);
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_INKNAMES, ink_names_size, ink_names)) {
+		fprintf (stderr, "Can't set tag %d.\n", TIFFTAG_INKNAMES);
+		goto failure;
+	}
+
+	/* Write dummy pixel data. */
+	if (!TIFFWriteScanline(tif, buf, 0, 0) < 0) {
+		fprintf (stderr, "Can't write image data.\n");
+		goto failure;
+	}
+
+	TIFFClose(tif);
+	
+	/* Ok, now test whether we can read written values. */
+	tif = TIFFOpen(filename, "r");
+	if (!tif) {
+		fprintf (stderr, "Can't open test TIFF file %s.\n", filename);
+		return 1;
+	}
+
+	for (i = 0; i < NTAGS; i++) {
+		if (!TIFFGetField(tif, ascii_tags[i].tag, &value)
+		    || strcmp(value, ascii_tags[i].value)) {
+			fprintf(stderr, "Can't get tag %d.\n",
+				(int)ascii_tags[i].tag);
+			goto failure;
+		}
+	}
+
+	if (!TIFFGetField(tif, TIFFTAG_INKNAMES, &value)
+	    || memcmp(value, ink_names, ink_names_size)) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_INKNAMES);
+		goto failure;
+	}
+
+	TIFFClose(tif);
+	
+	/* All tests passed; delete file and exit with success status. */
+	unlink(filename);
+	return 0;
+
+failure:
+	/* Something goes wrong; close file and return unsuccessful status. */
+	TIFFClose(tif);
+	unlink(filename);
+	return 1;
+}
+
+/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tests/check_tag.c tiff-3.9.2/tests/check_tag.c
--- tiff-3.9.2.orig/tests/check_tag.c	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/check_tag.c	2012-01-14 14:38:26.126146200 +0100
@@ -0,0 +1,72 @@
+/* $Id: check_tag.c,v 1.2 2006/03/23 14:54:02 dron Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Module to test LONG tags read/write functions.
+ */
+
+#include "tiffio.h"
+
+int
+CheckShortField(TIFF *tif, ttag_t field, uint16 value)
+{
+	uint16 tmp = 0;
+
+	if (!TIFFGetField(tif, field, &tmp)) {
+		fprintf (stderr, "Problem fetching tag %lu.\n",
+			 (unsigned long) field);
+		return -1;
+	}
+	if (tmp != value) {
+		fprintf (stderr, "Wrong SHORT value fetched for tag %lu.\n",
+			 (unsigned long) field);
+		return -1;
+	}
+
+	return 0;
+}
+
+int
+CheckLongField(TIFF *tif, ttag_t field, uint32 value)
+{
+	uint32 tmp = 0;
+
+	if (!TIFFGetField(tif, field, &tmp)) {
+		fprintf (stderr, "Problem fetching tag %lu.\n",
+			 (unsigned long) field);
+		return -1;
+	}
+	if (tmp != value) {
+		fprintf (stderr, "Wrong LONG value fetched for tag %lu.\n",
+			 (unsigned long) field);
+		return -1;
+	}
+
+	return 0;
+}
+
+
diff -Nru tiff-3.9.2.orig/tests/CMakeLists.txt tiff-3.9.2/tests/CMakeLists.txt
--- tiff-3.9.2.orig/tests/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/CMakeLists.txt	2012-01-14 14:38:26.136146600 +0100
@@ -0,0 +1,20 @@
+set(ascii_tag_SRCS ascii_tag.c)
+add_executable(ascii_tag ${ascii_tag_SRCS})
+target_link_libraries(ascii_tag tiff)
+add_test(ascii_tag ascii_tag)
+
+set(long_tag_SRCS long_tag.c check_tag.c)
+add_executable(long_tag ${long_tag_SRCS})
+target_link_libraries(long_tag tiff)
+add_test(long_tag long_tag)
+
+set(short_tag_SRCS short_tag.c check_tag.c)
+add_executable(short_tag ${short_tag_SRCS})
+target_link_libraries(short_tag tiff)
+add_test(short_tag short_tag)
+
+set(strip_rw_SRCS strip_rw.c strip.c test_arrays.c test_arrays.h)
+add_executable(strip_rw ${strip_rw_SRCS})
+target_link_libraries(strip_rw tiff)
+add_test(strip_rw strip_rw)
+
diff -Nru tiff-3.9.2.orig/tests/long_tag.c tiff-3.9.2/tests/long_tag.c
--- tiff-3.9.2.orig/tests/long_tag.c	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/long_tag.c	2012-01-14 14:38:26.136146600 +0100
@@ -0,0 +1,154 @@
+/* $Id: long_tag.c,v 1.3 2006/03/23 14:54:02 dron Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Module to test LONG tags read/write functions.
+ */
+
+#include "tif_config.h"
+
+#include <stdio.h>
+
+#ifdef HAVE_UNISTD_H 
+# include <unistd.h> 
+#endif 
+
+#include "tiffio.h"
+
+extern int CheckLongField(TIFF *, ttag_t, uint32);
+
+const char	*filename = "long_test.tiff";
+
+static struct Tags {
+	ttag_t		tag;
+	short		count;
+	uint32		value;
+} long_tags[] = {
+	{ TIFFTAG_SUBFILETYPE, 1, FILETYPE_REDUCEDIMAGE|FILETYPE_PAGE|FILETYPE_MASK }
+};
+#define NTAGS   (sizeof (long_tags) / sizeof (long_tags[0]))
+
+const uint32	width = 1;
+const uint32	length = 1;
+const uint32	rows_per_strip = 1;
+
+int
+main(int argc, char **argv)
+{
+	TIFF		*tif;
+	int		i;
+	unsigned char	buf[3] = { 0, 127, 255 };
+
+	/* Test whether we can write tags. */
+	tif = TIFFOpen(filename, "w");
+	if (!tif) {
+		fprintf (stderr, "Can't create test TIFF file %s.\n", filename);
+		return 1;
+	}
+
+	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, width)) {
+		fprintf (stderr, "Can't set ImageWidth tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, length)) {
+		fprintf (stderr, "Can't set ImageLength tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, 8)) {
+		fprintf (stderr, "Can't set BitsPerSample tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, 3)) {
+		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip)) {
+		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, PLANARCONFIG_CONTIG)) {
+		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, PHOTOMETRIC_RGB)) {
+		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
+		goto failure;
+	}
+
+	for (i = 0; i < NTAGS; i++) {
+		if (!TIFFSetField(tif, long_tags[i].tag,
+				  long_tags[i].value)) {
+			fprintf(stderr, "Can't set tag %d.\n",
+				(int)long_tags[i].tag);
+			goto failure;
+		}
+	}
+
+	/* Write dummy pixel data. */
+	if (!TIFFWriteScanline(tif, buf, 0, 0) < 0) {
+		fprintf (stderr, "Can't write image data.\n");
+		goto failure;
+	}
+
+	TIFFClose(tif);
+	
+	/* Ok, now test whether we can read written values. */
+	tif = TIFFOpen(filename, "r");
+	if (!tif) {
+		fprintf (stderr, "Can't open test TIFF file %s.\n", filename);
+		return 1;
+	}
+
+	if (CheckLongField(tif, TIFFTAG_IMAGEWIDTH, width) < 0)
+		goto failure;
+
+	if (CheckLongField(tif, TIFFTAG_IMAGELENGTH, length) < 0)
+		goto failure;
+
+	if (CheckLongField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip) < 0)
+		goto failure;
+
+	for (i = 0; i < NTAGS; i++) {
+		if (CheckLongField(tif, long_tags[i].tag,
+				   long_tags[i].value) < 0)
+			goto failure;
+	}
+
+	TIFFClose(tif);
+	
+	/* All tests passed; delete file and exit with success status. */
+	unlink(filename);
+	return 0;
+
+failure:
+	/* Something goes wrong; close file and return unsuccessful status. */
+	TIFFClose(tif);
+	unlink(filename);
+	return 1;
+}
+
+/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tests/Makefile.am tiff-3.9.2/tests/Makefile.am
--- tiff-3.9.2.orig/tests/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/Makefile.am	2012-01-14 14:38:26.136146600 +0100
@@ -0,0 +1,46 @@
+# Tag Image File Format (TIFF) Software
+#
+# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>
+#
+# Permission to use, copy, modify, distribute, and sell this software and 
+# its documentation for any purpose is hereby granted without fee, provided
+# that (i) the above copyright notices and this permission notice appear in
+# all copies of the software and related documentation, and (ii) the names of
+# Sam Leffler and Silicon Graphics may not be used in any advertising or
+# publicity relating to the software without the specific, prior written
+# permission of Sam Leffler and Silicon Graphics.
+# 
+# THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+# 
+# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+# OF THIS SOFTWARE.
+
+# Process this file with automake to produce Makefile.in.
+
+AUTOMAKE_OPTIONS = 1.11 color-tests parallel-tests foreign
+
+LIBTIFF = $(top_builddir)/libtiff/libtiff.la
+
+#EXTRA_DIST = Makefile.vc
+
+TESTS = $(check_PROGRAMS)
+
+check_PROGRAMS = ascii_tag long_tag short_tag strip_rw
+
+ascii_tag_SOURCES = ascii_tag.c
+ascii_tag_LDADD = $(LIBTIFF)
+long_tag_SOURCES = long_tag.c check_tag.c
+long_tag_LDADD = $(LIBTIFF)
+short_tag_SOURCES = short_tag.c check_tag.c
+short_tag_LDADD = $(LIBTIFF)
+strip_rw_SOURCES = strip_rw.c strip.c test_arrays.c test_arrays.h
+strip_rw_LDADD = $(LIBTIFF)
+
+INCLUDES = -I$(top_srcdir)/libtiff
+
diff -Nru tiff-3.9.2.orig/tests/Makefile.in tiff-3.9.2/tests/Makefile.in
--- tiff-3.9.2.orig/tests/Makefile.in	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/Makefile.in	2012-01-14 14:38:26.136146600 +0100
@@ -0,0 +1,846 @@
+# Makefile.in generated by automake 1.11 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
+# Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# Tag Image File Format (TIFF) Software
+#
+# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>
+#
+# Permission to use, copy, modify, distribute, and sell this software and 
+# its documentation for any purpose is hereby granted without fee, provided
+# that (i) the above copyright notices and this permission notice appear in
+# all copies of the software and related documentation, and (ii) the names of
+# Sam Leffler and Silicon Graphics may not be used in any advertising or
+# publicity relating to the software without the specific, prior written
+# permission of Sam Leffler and Silicon Graphics.
+# 
+# THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+# 
+# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+# OF THIS SOFTWARE.
+
+# Process this file with automake to produce Makefile.in.
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+check_PROGRAMS = ascii_tag$(EXEEXT) long_tag$(EXEEXT) \
+	short_tag$(EXEEXT) strip_rw$(EXEEXT)
+subdir = test
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
+CONFIG_HEADER = $(top_builddir)/libtiff/tif_config.h \
+	$(top_builddir)/libtiff/tiffconf.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am_ascii_tag_OBJECTS = ascii_tag.$(OBJEXT)
+ascii_tag_OBJECTS = $(am_ascii_tag_OBJECTS)
+ascii_tag_DEPENDENCIES = $(LIBTIFF)
+AM_V_lt = $(am__v_lt_$(V))
+am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
+am__v_lt_0 = --silent
+am_long_tag_OBJECTS = long_tag.$(OBJEXT) check_tag.$(OBJEXT)
+long_tag_OBJECTS = $(am_long_tag_OBJECTS)
+long_tag_DEPENDENCIES = $(LIBTIFF)
+am_short_tag_OBJECTS = short_tag.$(OBJEXT) check_tag.$(OBJEXT)
+short_tag_OBJECTS = $(am_short_tag_OBJECTS)
+short_tag_DEPENDENCIES = $(LIBTIFF)
+am_strip_rw_OBJECTS = strip_rw.$(OBJEXT) strip.$(OBJEXT) \
+	test_arrays.$(OBJEXT)
+strip_rw_OBJECTS = $(am_strip_rw_OBJECTS)
+strip_rw_DEPENDENCIES = $(LIBTIFF)
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/libtiff
+depcomp = $(SHELL) $(top_srcdir)/config/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
+	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
+	$(AM_CFLAGS) $(CFLAGS)
+AM_V_CC = $(am__v_CC_$(V))
+am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
+am__v_CC_0 = @echo "  CC    " $@;
+AM_V_at = $(am__v_at_$(V))
+am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
+am__v_at_0 = @
+CCLD = $(CC)
+LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(AM_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_CCLD = $(am__v_CCLD_$(V))
+am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
+am__v_CCLD_0 = @echo "  CCLD  " $@;
+AM_V_GEN = $(am__v_GEN_$(V))
+am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
+am__v_GEN_0 = @echo "  GEN   " $@;
+SOURCES = $(ascii_tag_SOURCES) $(long_tag_SOURCES) \
+	$(short_tag_SOURCES) $(strip_rw_SOURCES)
+DIST_SOURCES = $(ascii_tag_SOURCES) $(long_tag_SOURCES) \
+	$(short_tag_SOURCES) $(strip_rw_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
+# then this fails; a conservative approach.  Of course do not redirect
+# stdout here, just stderr.
+am__tty_colors = \
+red=; grn=; lgn=; blu=; std=; \
+test "X$(AM_COLOR_TESTS)" != Xno \
+&& test "X$$TERM" != Xdumb \
+&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
+&& { \
+  red='[0;31m'; \
+  grn='[0;32m'; \
+  lgn='[1;32m'; \
+  blu='[1;34m'; \
+  std='[m'; \
+}
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+# Restructured Text title and section.
+am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
+am__rst_section = sed 'p;s/./=/g;p;g'
+# Put stdin (possibly several lines separated by ".  ") in a box.
+am__text_box = $(AWK) '{				\
+  n = split($$0, lines, "\\.  "); max = 0;		\
+  for (i = 1; i <= n; ++i)				\
+    if (max < length(lines[i]))				\
+      max = length(lines[i]);				\
+  for (i = 0; i < max; ++i) line = line "=";		\
+  print line;						\
+  for (i = 1; i <= n; ++i) if (lines[i]) print lines[i];\
+  print line;						\
+}'
+# Solaris 10 'make', and several other traditional 'make' implementations,
+# pass "-e" to $(SHELL).  This contradicts POSIX.  Work around the problem
+# by disabling -e (using the XSI extension "set +e") if it's set.
+am__sh_e_setup = case $$- in *e*) set +e;; esac
+# To be inserted before the command running the test.  Creates the
+# directory for the log if needed.  Stores in $dir the directory
+# containing $f, in $tst the test, in $log the log, and passes
+# TESTS_ENVIRONMENT.  Save and restore TERM around use of
+# TESTS_ENVIRONMENT, in case that unsets it.
+am__check_pre = \
+$(am__sh_e_setup);					\
+$(am__vpath_adj_setup) $(am__vpath_adj)			\
+srcdir=$(srcdir); export srcdir;			\
+rm -f $@-t;						\
+trap 'st=$$?; rm -f '\''$(abs_builddir)/$@-t'\''; (exit $$st); exit $$st' \
+  1 2 13 15;						\
+am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;		\
+test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
+if test -f "./$$f"; then dir=./;			\
+elif test -f "$$f"; then dir=;				\
+else dir="$(srcdir)/"; fi;				\
+tst=$$dir$$f; log='$@'; __SAVED_TERM=$$TERM;		\
+$(TESTS_ENVIRONMENT)
+RECHECK_LOGS = $(TEST_LOGS)
+AM_RECURSIVE_TARGETS = check check-html recheck recheck-html
+TEST_SUITE_LOG = test-suite.log
+TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
+TEST_EXTENSIONS = @EXEEXT@ .test
+LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
+am__test_logs1 = $(TESTS:=.log)
+am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
+TEST_LOGS = $(am__test_logs2:.test.log=.log)
+TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
+	$(TEST_LOG_FLAGS)
+TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMTAR = @AMTAR@
+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
+AR = @AR@
+AS = @AS@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXX = @CXX@
+CXXCPP = @CXXCPP@
+CXXDEPMODE = @CXXDEPMODE@
+CXXFLAGS = @CXXFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DLLTOOL = @DLLTOOL@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GLUT_CFLAGS = @GLUT_CFLAGS@
+GLUT_LIBS = @GLUT_LIBS@
+GLU_CFLAGS = @GLU_CFLAGS@
+GLU_LIBS = @GLU_LIBS@
+GL_CFLAGS = @GL_CFLAGS@
+GL_LIBS = @GL_LIBS@
+GREP = @GREP@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBDIR = @LIBDIR@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTIFF_ALPHA_VERSION = @LIBTIFF_ALPHA_VERSION@
+LIBTIFF_DOCDIR = @LIBTIFF_DOCDIR@
+LIBTIFF_MAJOR_VERSION = @LIBTIFF_MAJOR_VERSION@
+LIBTIFF_MICRO_VERSION = @LIBTIFF_MICRO_VERSION@
+LIBTIFF_MINOR_VERSION = @LIBTIFF_MINOR_VERSION@
+LIBTIFF_RELEASE_DATE = @LIBTIFF_RELEASE_DATE@
+LIBTIFF_VERSION = @LIBTIFF_VERSION@
+LIBTIFF_VERSION_INFO = @LIBTIFF_VERSION_INFO@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PTHREAD_CC = @PTHREAD_CC@
+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
+PTHREAD_LIBS = @PTHREAD_LIBS@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+XMKMF = @XMKMF@
+X_CFLAGS = @X_CFLAGS@
+X_EXTRA_LIBS = @X_EXTRA_LIBS@
+X_LIBS = @X_LIBS@
+X_PRE_LIBS = @X_PRE_LIBS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_CXX = @ac_ct_CXX@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+acx_pthread_config = @acx_pthread_config@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+AUTOMAKE_OPTIONS = 1.11 color-tests parallel-tests foreign
+LIBTIFF = $(top_builddir)/libtiff/libtiff.la
+
+#EXTRA_DIST = Makefile.vc
+TESTS = $(check_PROGRAMS)
+ascii_tag_SOURCES = ascii_tag.c
+ascii_tag_LDADD = $(LIBTIFF)
+long_tag_SOURCES = long_tag.c check_tag.c
+long_tag_LDADD = $(LIBTIFF)
+short_tag_SOURCES = short_tag.c check_tag.c
+short_tag_LDADD = $(LIBTIFF)
+strip_rw_SOURCES = strip_rw.c strip.c test_arrays.c test_arrays.h
+strip_rw_LDADD = $(LIBTIFF)
+INCLUDES = -I$(top_srcdir)/libtiff
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .html .lo .log .o .obj .test .test$(EXEEXT)
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign test/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+clean-checkPROGRAMS:
+	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
+	echo " rm -f" $$list; \
+	rm -f $$list || exit $$?; \
+	test -n "$(EXEEXT)" || exit 0; \
+	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
+	echo " rm -f" $$list; \
+	rm -f $$list
+ascii_tag$(EXEEXT): $(ascii_tag_OBJECTS) $(ascii_tag_DEPENDENCIES) 
+	@rm -f ascii_tag$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(ascii_tag_OBJECTS) $(ascii_tag_LDADD) $(LIBS)
+long_tag$(EXEEXT): $(long_tag_OBJECTS) $(long_tag_DEPENDENCIES) 
+	@rm -f long_tag$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(long_tag_OBJECTS) $(long_tag_LDADD) $(LIBS)
+short_tag$(EXEEXT): $(short_tag_OBJECTS) $(short_tag_DEPENDENCIES) 
+	@rm -f short_tag$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(short_tag_OBJECTS) $(short_tag_LDADD) $(LIBS)
+strip_rw$(EXEEXT): $(strip_rw_OBJECTS) $(strip_rw_DEPENDENCIES) 
+	@rm -f strip_rw$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(strip_rw_OBJECTS) $(strip_rw_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ascii_tag.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_tag.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/long_tag.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/short_tag.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strip.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strip_rw.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_arrays.Po@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
+@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+# To be appended to the command running the test.  Handle the stdout
+# and stderr redirection, and catch the exit status.
+am__check_post =					\
+>$@-t 2>&1;						\
+estatus=$$?;						\
+if test -n '$(DISABLE_HARD_ERRORS)'			\
+   && test $$estatus -eq 99; then			\
+  estatus=1;						\
+fi;							\
+TERM=$$__SAVED_TERM; export TERM;			\
+$(am__tty_colors);					\
+xfailed=PASS;						\
+case " $(XFAIL_TESTS) " in				\
+  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
+    xfailed=XFAIL;;					\
+esac;							\
+case $$estatus:$$xfailed in				\
+    0:XFAIL) col=$$red; res=XPASS;;			\
+    0:*)     col=$$grn; res=PASS ;;			\
+    77:*)    col=$$blu; res=SKIP ;;			\
+    99:*)    col=$$red; res=FAIL ;;			\
+    *:XFAIL) col=$$lgn; res=XFAIL;;			\
+    *:*)     col=$$red; res=FAIL ;;			\
+esac;							\
+echo "$${col}$$res$${std}: $$f";			\
+echo "$$res: $$f (exit: $$estatus)" |			\
+  $(am__rst_section) >$@;				\
+cat $@-t >>$@;						\
+rm -f $@-t
+
+$(TEST_SUITE_LOG): $(TEST_LOGS)
+	@$(am__sh_e_setup);						\
+	list='$(TEST_LOGS)';						\
+	results=`for f in $$list; do					\
+		   read line < $$f && echo "$$line" || echo FAIL;	\
+		 done`;							\
+	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
+	fail=`echo "$$results" | grep -c '^FAIL'`;			\
+	pass=`echo "$$results" | grep -c '^PASS'`;			\
+	skip=`echo "$$results" | grep -c '^SKIP'`;			\
+	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
+	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
+	failures=`expr $$fail + $$xpass`;				\
+	all=`expr $$all - $$skip`;					\
+	if test "$$all" -eq 1; then tests=test; All=;			\
+	else tests=tests; All="All "; fi;				\
+	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
+	  fail=0:xpass=0:xfail=0)					\
+	    msg="$$All$$all $$tests passed.  ";				\
+	    exit=true;;							\
+	  fail=0:xpass=0:xfail=*)					\
+	    msg="$$All$$all $$tests behaved as expected";		\
+	    if test "$$xfail" -eq 1; then xfailures=failure;		\
+	    else xfailures=failures; fi;				\
+	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
+	    exit=true;;							\
+	  fail=*:xpass=0:xfail=*)					\
+	    msg="$$fail of $$all $$tests failed.  ";			\
+	    exit=false;;						\
+	  fail=*:xpass=*:xfail=*)					\
+	    msg="$$failures of $$all $$tests did not behave as expected"; \
+	    if test "$$xpass" -eq 1; then xpasses=pass;			\
+	    else xpasses=passes; fi;					\
+	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
+	    exit=false;;						\
+	  *)								\
+	    echo >&2 "incorrect case"; exit 4;;				\
+	esac;								\
+	if test "$$skip" -ne 0; then					\
+	  if test "$$skip" -eq 1; then					\
+	    msg="$$msg($$skip test was not run).  ";			\
+	  else								\
+	    msg="$$msg($$skip tests were not run).  ";			\
+	  fi;								\
+	fi;								\
+	{								\
+	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
+	    $(am__rst_title);						\
+	  echo "$$msg";							\
+	  echo;								\
+	  echo ".. contents:: :depth: 2";				\
+	  echo;								\
+	  for f in $$list; do						\
+	    read line < $$f;						\
+	    case $$line in						\
+	      PASS:*|XFAIL:*);;						\
+	      *) echo; cat $$f;;					\
+	    esac;							\
+	  done;								\
+	} >$(TEST_SUITE_LOG).tmp;					\
+	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
+	if test "$$failures" -ne 0; then				\
+	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
+	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
+	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
+	  fi;								\
+	fi;								\
+	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
+	$(am__tty_colors);						\
+	if $$exit; then							\
+	  echo $(ECHO_N) "$$grn$(ECHO_C)";				\
+	 else								\
+	  echo $(ECHO_N) "$$red$(ECHO_C)";				\
+	fi;								\
+	echo "$$msg" | $(am__text_box);					\
+	echo $(ECHO_N) "$$std$(ECHO_C)";				\
+	$$exit
+
+# Run all the tests.
+check-TESTS:
+	@list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list
+	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
+	@set_logs=; if test "X$(TEST_LOGS)" = X.log; then		\
+	  set_logs=TEST_LOGS=;						\
+	fi;								\
+	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) $$set_logs
+
+.log.html:
+	@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
+	for r2h in $$list; do						\
+	  if ($$r2h --version) >/dev/null 2>&1; then			\
+	    R2H=$$r2h;							\
+	  fi;								\
+	done;								\
+	if test -z "$$R2H"; then					\
+	  echo >&2 "cannot find rst2html, cannot create $@";		\
+	  exit 2;							\
+	fi;								\
+	$$R2H $< >$@.tmp
+	@mv $@.tmp $@
+
+# Be sure to run check first, and then to convert the result.
+# Beware of concurrent executions.  Run "check" not "check-TESTS", as
+# check-SCRIPTS and other runtimeDependencies are rebuilt by the former only.
+# And expect check to fail.
+check-html:
+	@if $(MAKE) $(AM_MAKEFLAGS) check; then			\
+	  rv=0; else rv=$$?;					\
+	fi;							\
+	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) || exit 4;	\
+	exit $$rv
+recheck recheck-html:
+	@target=`echo $@ | sed 's,^re,,'`;				\
+	list='$(TEST_LOGS)';						\
+	list=`for f in $$list; do					\
+	        test -f $$f || continue;				\
+	        if read line < $$f; then				\
+	          case $$line in FAIL*|XPASS*) echo $$f;; esac;		\
+	        else echo $$f; fi;					\
+	      done | tr '\012\015' '  '`;				\
+	$(MAKE) $(AM_MAKEFLAGS) $$target AM_MAKEFLAGS='$(AM_MAKEFLAGS) TEST_LOGS="'"$$list"'"'
+ascii_tag.log: ascii_tag$(EXEEXT)
+	@p='ascii_tag$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
+long_tag.log: long_tag$(EXEEXT)
+	@p='long_tag$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
+short_tag.log: short_tag$(EXEEXT)
+	@p='short_tag$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
+strip_rw.log: strip_rw$(EXEEXT)
+	@p='strip_rw$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
+.test.log:
+	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
+@am__EXEEXT_TRUE@.test$(EXEEXT).log:
+@am__EXEEXT_TRUE@	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
+	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
+	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
+	-test -z "$(TEST_SUITE_HTML)" || rm -f $(TEST_SUITE_HTML)
+	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am:
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am:
+
+.MAKE: check-am check-html install-am install-strip recheck \
+	recheck-html
+
+.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am check-html \
+	clean clean-checkPROGRAMS clean-generic clean-libtool ctags \
+	distclean distclean-compile distclean-generic \
+	distclean-libtool distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-dvi install-dvi-am install-exec \
+	install-exec-am install-html install-html-am install-info \
+	install-info-am install-man install-pdf install-pdf-am \
+	install-ps install-ps-am install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	recheck recheck-html tags uninstall uninstall-am
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff -Nru tiff-3.9.2.orig/tests/short_tag.c tiff-3.9.2/tests/short_tag.c
--- tiff-3.9.2.orig/tests/short_tag.c	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/short_tag.c	2012-01-14 14:38:26.146147000 +0100
@@ -0,0 +1,179 @@
+/* $Id: short_tag.c,v 1.6 2006/03/23 14:54:02 dron Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Module to test SHORT tags read/write functions.
+ */
+
+#include "tif_config.h"
+
+#include <stdio.h>
+
+#ifdef HAVE_UNISTD_H 
+# include <unistd.h> 
+#endif 
+
+#include "tiffio.h"
+
+extern int CheckShortField(TIFF *, ttag_t, uint16);
+
+const char	*filename = "short_test.tiff";
+
+#define	SPP	3		/* Samples per pixel */
+const uint16	width = 1;
+const uint16	length = 1;
+const uint16	bps = 8;
+const uint16	photometric = PHOTOMETRIC_RGB;
+const uint16	rows_per_strip = 1;
+const uint16	planarconfig = PLANARCONFIG_CONTIG;
+
+static struct SingleTags {
+	ttag_t		tag;
+	uint16		value;
+} short_single_tags[] = {
+	{ TIFFTAG_COMPRESSION, COMPRESSION_NONE },
+	{ TIFFTAG_FILLORDER, FILLORDER_MSB2LSB },
+	{ TIFFTAG_ORIENTATION, ORIENTATION_BOTRIGHT },
+	{ TIFFTAG_RESOLUTIONUNIT, RESUNIT_INCH },
+	{ TIFFTAG_INKSET, INKSET_MULTIINK },
+	{ TIFFTAG_MINSAMPLEVALUE, 23 },
+	{ TIFFTAG_MAXSAMPLEVALUE, 241 },
+	{ TIFFTAG_NUMBEROFINKS, SPP },
+	{ TIFFTAG_SAMPLEFORMAT, SAMPLEFORMAT_UINT }
+	/*{ TIFFTAG_IMAGEDEPTH, 1 },
+	{ TIFFTAG_TILEDEPTH, 1 }*/
+};
+#define NSINGLETAGS   (sizeof(short_single_tags) / sizeof(short_single_tags[0]))
+
+int
+main(int argc, char **argv)
+{
+	TIFF		*tif;
+	int		i;
+	unsigned char	buf[3] = { 0, 127, 255 };
+
+	/* Test whether we can write tags. */
+	tif = TIFFOpen(filename, "w");
+	if (!tif) {
+		fprintf (stderr, "Can't create test TIFF file %s.\n", filename);
+		return 1;
+	}
+
+	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, width)) {
+		fprintf (stderr, "Can't set ImageWidth tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, length)) {
+		fprintf (stderr, "Can't set ImageLength tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, bps)) {
+		fprintf (stderr, "Can't set BitsPerSample tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, SPP)) {
+		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip)) {
+		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, planarconfig)) {
+		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, photometric)) {
+		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
+		goto failure;
+	}
+
+	for (i = 0; i < NSINGLETAGS; i++) {
+		if (!TIFFSetField(tif, short_single_tags[i].tag,
+				  short_single_tags[i].value)) {
+			fprintf(stderr, "Can't set tag %d.\n",
+				(int)short_single_tags[i].tag);
+			goto failure;
+		}
+	}
+
+	/* Write dummy pixel data. */
+	if (!TIFFWriteScanline(tif, buf, 0, 0) < 0) {
+		fprintf (stderr, "Can't write image data.\n");
+		goto failure;
+	}
+
+	TIFFClose(tif);
+	
+	/* Ok, now test whether we can read written values. */
+	tif = TIFFOpen(filename, "r");
+	if (!tif) {
+		fprintf (stderr, "Can't open test TIFF file %s.\n", filename);
+		return 1;
+	}
+	
+	if (CheckLongField(tif, TIFFTAG_IMAGEWIDTH, width) < 0)
+		goto failure;
+
+	if (CheckLongField(tif, TIFFTAG_IMAGELENGTH, length) < 0)
+		goto failure;
+
+	if (CheckShortField(tif, TIFFTAG_BITSPERSAMPLE, bps) < 0)
+		goto failure;
+
+	if (CheckShortField(tif, TIFFTAG_PHOTOMETRIC, photometric) < 0)
+		goto failure;
+
+	if (CheckShortField(tif, TIFFTAG_SAMPLESPERPIXEL, SPP) < 0)
+		goto failure;
+
+	if (CheckLongField(tif, TIFFTAG_ROWSPERSTRIP, rows_per_strip) < 0)
+		goto failure;
+
+	if (CheckShortField(tif, TIFFTAG_PLANARCONFIG, planarconfig) < 0)
+		goto failure;
+
+	for (i = 0; i < NSINGLETAGS; i++) {
+		if (CheckShortField(tif, short_single_tags[i].tag,
+				    short_single_tags[i].value) < 0)
+			goto failure;
+	}
+
+	TIFFClose(tif);
+	
+	/* All tests passed; delete file and exit with success status. */
+	unlink(filename);
+	return 0;
+
+failure:
+	/* Something goes wrong; close file and return unsuccessful status. */
+	TIFFClose(tif);
+	unlink(filename);
+	return 1;
+}
+
+/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tests/strip.c tiff-3.9.2/tests/strip.c
--- tiff-3.9.2.orig/tests/strip.c	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/strip.c	2012-01-14 14:38:26.146147000 +0100
@@ -0,0 +1,291 @@
+/* $Id: strip.c,v 1.3.2.1 2009-01-01 17:52:51 bfriesen Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Functions to test strip interface of libtiff.
+ */
+
+#include <stdio.h>
+#include <string.h>
+
+#include "tiffio.h"
+
+int
+write_strips(TIFF *tif, const tdata_t array, const tsize_t size)
+{
+	tstrip_t	strip, nstrips;
+	tsize_t		stripsize, offset;
+
+	stripsize = TIFFStripSize(tif);
+	if (!stripsize) {
+		fprintf (stderr, "Wrong size of strip.\n");
+		return -1;
+	}
+
+	nstrips = TIFFNumberOfStrips(tif);
+	for (offset = 0, strip = 0;
+	     offset < size && strip < nstrips;
+	     offset+=stripsize, strip++) {
+		/*
+		 * Properly write last strip.
+		 */
+		tsize_t	bufsize = size - offset;
+		if (bufsize > stripsize)
+			bufsize = stripsize;
+
+		if (TIFFWriteEncodedStrip(tif, strip, (char *)array + offset,
+					  bufsize) != bufsize) {
+			fprintf (stderr, "Can't write strip %lu.\n",
+				 (unsigned long)strip);
+			return -1;
+		}
+        }
+
+	return 0;
+}
+
+int
+read_strips(TIFF *tif, const tdata_t array, const tsize_t size)
+{
+	tstrip_t	strip, nstrips;
+	tsize_t		stripsize, offset;
+	tdata_t		buf = NULL;
+
+	stripsize = TIFFStripSize(tif);
+	if (!stripsize) {
+		fprintf (stderr, "Wrong size of strip.\n");
+		return -1;
+	}
+
+	buf = _TIFFmalloc(stripsize);
+	if (!buf) {
+		fprintf (stderr, "Can't allocate space for strip buffer.\n");
+		return -1;
+	}
+
+	nstrips = TIFFNumberOfStrips(tif);
+	for (offset = 0, strip = 0;
+	     offset < size && strip < nstrips;
+	     offset+=stripsize, strip++) {
+		/*
+		 * Properly read last strip.
+		 */
+		tsize_t	bufsize = size - offset;
+		if (bufsize > stripsize)
+			bufsize = stripsize;
+
+		if (TIFFReadEncodedStrip(tif, strip, buf, -1) != bufsize) {
+			fprintf (stderr, "Can't read strip %lu.\n",
+				 (unsigned long)strip);
+			return -1;
+		}
+		if (memcmp(buf, (char *)array + offset, bufsize) != 0) {
+			fprintf (stderr, "Wrong data read for strip %lu.\n",
+				 (unsigned long)strip);
+			_TIFFfree(buf);
+			return -1;
+		}
+        }
+
+	_TIFFfree(buf);
+
+	return 0;
+}
+
+int
+create_image_striped(const char *name, uint32 width, uint32 length,
+		      uint32 rowsperstrip, uint16 compression,
+		      uint16 spp, uint16 bps, uint16 photometric,
+		      uint16 sampleformat, uint16 planarconfig,
+		      const tdata_t array, const tsize_t size)
+{
+	TIFF		*tif;
+
+	/* Test whether we can write tags. */
+	tif = TIFFOpen(name, "w");
+	if (!tif)
+		goto openfailure;
+
+	if (!TIFFSetField(tif, TIFFTAG_IMAGEWIDTH, width)) {
+		fprintf (stderr, "Can't set ImageWidth tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_IMAGELENGTH, length)) {
+		fprintf (stderr, "Can't set ImageLength tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_BITSPERSAMPLE, bps)) {
+		fprintf (stderr, "Can't set BitsPerSample tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_SAMPLESPERPIXEL, spp)) {
+		fprintf (stderr, "Can't set SamplesPerPixel tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_ROWSPERSTRIP, rowsperstrip)) {
+		fprintf (stderr, "Can't set RowsPerStrip tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PLANARCONFIG, planarconfig)) {
+		fprintf (stderr, "Can't set PlanarConfiguration tag.\n");
+		goto failure;
+	}
+	if (!TIFFSetField(tif, TIFFTAG_PHOTOMETRIC, photometric)) {
+		fprintf (stderr, "Can't set PhotometricInterpretation tag.\n");
+		goto failure;
+	}
+
+	if (write_strips(tif, array, size) < 0) {
+		fprintf (stderr, "Can't write image data.\n");
+		goto failure;
+	}
+
+	TIFFClose(tif);
+	return 0;
+
+failure:
+	TIFFClose(tif);
+openfailure:
+	fprintf (stderr, "Can't create test TIFF file %s:\n"
+"    ImageWidth=%u, ImageLength=%u, RowsPerStrip=%u, Compression=%d,\n"
+"    BitsPerSample=%d, SamplesPerPixel=%d, SampleFormat=%d,\n"
+"    PlanarConfiguration=%d, PhotometricInterpretation=%d.\n",
+		 name, width, length, rowsperstrip, compression,
+		 bps, spp, sampleformat, planarconfig,
+		 photometric);
+	return -1;
+}
+
+int
+read_image_striped(const char *name, uint32 width, uint32 length,
+		    uint32 rowsperstrip, uint16 compression,
+		    uint16 spp, uint16 bps, uint16 photometric,
+		    uint16 sampleformat, uint16 planarconfig,
+		    const tdata_t array, const tsize_t size)
+{
+	TIFF		*tif;
+	uint16		value_u16;
+	uint32		value_u32;
+
+	/* Test whether we can read written values. */
+	tif = TIFFOpen(name, "r");
+	if (!tif)
+		goto openfailure;
+	
+	if (TIFFIsTiled(tif)) {
+		fprintf (stderr, "Can't read image %s, it is tiled.\n",
+			 name);
+		goto failure;
+	}
+	if (!TIFFGetField(tif, TIFFTAG_IMAGEWIDTH, &value_u32)
+	    || value_u32 != width) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_IMAGEWIDTH);
+		goto failure;
+	}
+	if (!TIFFGetField(tif, TIFFTAG_IMAGELENGTH, &value_u32)
+	    || value_u32 != length) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_IMAGELENGTH);
+		goto failure;
+	}
+	if (!TIFFGetField(tif, TIFFTAG_BITSPERSAMPLE, &value_u16)
+	    || value_u16 != bps) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_BITSPERSAMPLE);
+		goto failure;
+	}
+	if (!TIFFGetField(tif, TIFFTAG_PHOTOMETRIC, &value_u16)
+	    || value_u16 != photometric) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_PHOTOMETRIC);
+		goto failure;
+	}
+	if (!TIFFGetField(tif, TIFFTAG_SAMPLESPERPIXEL, &value_u16)
+	    || value_u16 != spp) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_SAMPLESPERPIXEL);
+		goto failure;
+	}
+	if (!TIFFGetField(tif, TIFFTAG_ROWSPERSTRIP, &value_u32)
+	    || value_u32 != rowsperstrip) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_ROWSPERSTRIP);
+		goto failure;
+	}
+	if (!TIFFGetField(tif, TIFFTAG_PLANARCONFIG, &value_u16)
+	    || value_u16 != planarconfig) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_PLANARCONFIG);
+		goto failure;
+	}
+
+	if (read_strips(tif, array, size) < 0) {
+		fprintf (stderr, "Can't read image data.\n");
+		goto failure;
+	}
+
+	TIFFClose(tif);
+	return 0;
+
+failure:
+	TIFFClose(tif);
+openfailure:
+	fprintf (stderr, "Can't read test TIFF file %s:\n"
+"    ImageWidth=%u, ImageLength=%u, RowsPerStrip=%u, Compression=%d,\n"
+"    BitsPerSample=%d, SamplesPerPixel=%d, SampleFormat=%d,\n"
+"    PlanarConfiguration=%d, PhotometricInterpretation=%d.\n",
+		 name, width, length, rowsperstrip, compression,
+		 bps, spp, sampleformat, planarconfig,
+		 photometric);
+	return -1;
+}
+
+int
+write_scanlines(TIFF *tif, const tdata_t array, const tsize_t size)
+{
+	uint32		length, row;
+	tsize_t		scanlinesize, offset;
+
+	(void) size;
+
+	if (!TIFFGetField(tif, TIFFTAG_IMAGELENGTH, &length)) {
+		fprintf (stderr, "Can't get tag %d.\n", TIFFTAG_IMAGELENGTH);
+		return -1;
+	}
+	
+	scanlinesize = TIFFScanlineSize(tif);
+	if (!scanlinesize) {
+		fprintf (stderr, "Wrong size of scanline.\n");
+		return -1;
+	}
+
+	for (offset = 0, row = 0; row < length; offset+=scanlinesize, row++) {
+		if (TIFFWriteScanline(tif, (char *)array + offset, row, 0) < 0) {
+			fprintf (stderr,
+				 "Can't write image data at row %u.\n", row);
+			return -1;
+		}
+        }
+
+	return 0;
+}
+
+/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tests/strip_rw.c tiff-3.9.2/tests/strip_rw.c
--- tiff-3.9.2.orig/tests/strip_rw.c	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/strip_rw.c	2012-01-14 14:38:26.146147000 +0100
@@ -0,0 +1,155 @@
+/* $Id: strip_rw.c,v 1.5 2006/03/23 14:54:02 dron Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Test libtiff input/output routines.
+ */
+
+#include "tif_config.h"
+
+#include <stdio.h>
+
+#ifdef HAVE_UNISTD_H 
+# include <unistd.h> 
+#endif 
+
+#include "tiffio.h"
+#include "test_arrays.h"
+
+extern int
+create_image_striped(const char *, uint32, uint32, uint32, uint16, uint16,
+		     uint16, uint16, uint16, uint16, const tdata_t,
+		     const tsize_t);
+extern int
+read_image_striped(const char *, uint32, uint32, uint32, uint16, uint16,
+		   uint16, uint16, uint16, uint16, const tdata_t,
+		   const tsize_t);
+
+const char	*filename = "strip_test.tiff";
+
+int
+main(int argc, char **argv)
+{
+	uint32		rowsperstrip;
+	uint16		compression;
+	uint16		spp, bps, photometric, sampleformat, planarconfig;
+
+	/* 
+	 * Test two special cases: image consisting from single line and image
+	 * consisting from single column.
+	 */
+	rowsperstrip = 1;
+	compression = COMPRESSION_NONE;
+	spp = 1;
+	bps = 8;
+        photometric = PHOTOMETRIC_MINISBLACK;
+	sampleformat = SAMPLEFORMAT_UINT;
+	planarconfig = PLANARCONFIG_CONTIG;
+
+	if (create_image_striped(filename, XSIZE * YSIZE, 1, rowsperstrip,
+				  compression, spp, bps, photometric,
+				  sampleformat, planarconfig,
+				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
+		goto failure;
+	}
+	if (read_image_striped(filename, XSIZE * YSIZE, 1, rowsperstrip,
+				compression, spp, bps, photometric,
+				sampleformat, planarconfig,
+				(const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
+		goto failure;
+	}
+	unlink(filename);
+		
+	if (create_image_striped(filename, 1, XSIZE * YSIZE, rowsperstrip,
+				  compression, spp, bps, photometric,
+				  sampleformat, planarconfig,
+				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
+		goto failure;
+	}
+	if (read_image_striped(filename, 1, XSIZE * YSIZE, rowsperstrip,
+				compression, spp, bps, photometric,
+				sampleformat, planarconfig,
+				(const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
+		goto failure;
+	}
+	unlink(filename);
+		
+	/* 
+	 * Test one-channel image with different parameters.
+	 */
+	rowsperstrip = 1;
+	spp = 1;
+	bps = 8;
+        photometric = PHOTOMETRIC_MINISBLACK;
+	sampleformat = SAMPLEFORMAT_UINT;
+	planarconfig = PLANARCONFIG_CONTIG;
+
+	if (create_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
+				  compression, spp, bps, photometric,
+				  sampleformat, planarconfig,
+				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
+		goto failure;
+	}
+	if (read_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
+				compression, spp, bps, photometric,
+				sampleformat, planarconfig,
+				(const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
+		goto failure;
+	}
+	unlink(filename);
+	
+	rowsperstrip = YSIZE;
+	if (create_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
+				  compression, spp, bps, photometric,
+				  sampleformat, planarconfig,
+				  (const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't create TIFF file %s.\n", filename);
+		goto failure;
+	}
+	if (read_image_striped(filename, XSIZE, YSIZE, rowsperstrip,
+				compression, spp, bps, photometric,
+				sampleformat, planarconfig,
+				(const tdata_t) byte_array1, byte_array1_size) < 0) {
+		fprintf (stderr, "Can't read TIFF file %s.\n", filename);
+		goto failure;
+	}
+	unlink(filename);
+
+	return 0;
+
+failure:
+	unlink(filename);
+	return 1;
+}
+
+/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tests/test_arrays.c tiff-3.9.2/tests/test_arrays.c
--- tiff-3.9.2.orig/tests/test_arrays.c	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/test_arrays.c	2012-01-14 14:38:26.146147000 +0100
@@ -0,0 +1,833 @@
+/* $Id: test_arrays.c,v 1.3 2006/03/23 14:54:02 dron Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Numerical arrays used to test libtiff's read/write functions.
+ */
+
+#ifdef _MSC_VER
+#pragma warning( disable : 4305 )
+#endif
+
+#include <stddef.h>
+
+#include "test_arrays.h"
+
+const unsigned char byte_array1[XSIZE * YSIZE]=
+{
+86, 84, 86, 90, 89, 85, 90, 78, 77, 79, 75, 77, 79, 86,
+87, 83, 82, 87, 89, 88, 86, 87, 88, 87, 81, 84, 85, 85,
+84, 86, 88, 91, 96, 95, 97, 95, 89,
+85, 82, 81, 88, 89, 85, 89, 83, 74, 79, 76, 77, 80, 87,
+87, 84, 84, 88, 90, 89, 87, 85, 87, 88, 83, 80, 82, 84,
+85, 87, 90, 95, 96, 95, 95, 92, 90,
+85, 81, 79, 84, 90, 87, 88, 88, 73, 79, 75, 76, 79, 88,
+88, 87, 85, 90, 92, 89, 88, 88, 87, 86, 84, 82, 82, 83,
+87, 89, 93, 94, 93, 93, 92, 92, 96,
+85, 82, 76, 80, 88, 89, 88, 89, 73, 80, 75, 75, 77, 89,
+92, 93, 91, 89, 94, 92, 90, 89, 88, 84, 84, 82, 82, 85,
+88, 91, 94, 93, 93, 89, 90, 96, 96,
+87, 83, 75, 77, 83, 89, 90, 90, 74, 78, 76, 76, 76, 84,
+94, 100, 89, 92, 94, 92, 90, 89, 90, 85, 84, 83, 83, 87,
+91, 92, 88, 92, 91, 88, 90, 97, 95,
+89, 83, 74, 77, 82, 84, 90, 92, 78, 72, 76, 75, 75, 81,
+95, 101, 95, 92, 95, 93, 90, 89, 90, 87, 86, 84, 86, 88,
+90, 90, 87, 90, 89, 90, 89, 98, 98,
+92, 84, 75, 76, 81, 81, 86, 91, 81, 72, 74, 74, 75, 81,
+104, 108, 93, 92, 95, 94, 88, 87, 89, 87, 85, 85, 88, 89,
+93, 91, 88, 88, 91, 88, 91, 106, 108,
+93, 89, 78, 75, 77, 80, 85, 86, 85, 73, 72, 73, 74, 79,
+102, 101, 88, 92, 93, 91, 87, 87, 86, 87, 85, 86, 88, 89,
+94, 94, 90, 88, 85, 86, 98, 109, 113,
+92, 93, 83, 76, 74, 79, 84, 85, 81, 75, 72, 73, 74, 79,
+105, 86, 86, 92, 96, 98, 104, 86, 85, 85, 85, 88, 90, 90,
+93, 92, 88, 87, 86, 89, 97, 110, 109,
+92, 93, 89, 78, 79, 78, 89, 84, 75, 76, 73, 72, 73, 78,
+105, 83, 82, 88, 83, 107, 95, 84, 85, 84, 86, 87, 90, 91,
+92, 90, 88, 87, 89, 90, 91, 99, 107,
+96, 94, 91, 82, 84, 86, 91, 87, 75, 74, 73, 73, 73, 77,
+101, 86, 83, 89, 92, 99, 98, 86, 86, 87, 83, 84, 89, 89,
+92, 92, 92, 96, 96, 87, 91, 90, 98,
+96, 97, 94, 87, 88, 89, 92, 90, 79, 72, 73, 73, 74, 77,
+100, 92, 84, 86, 98, 100, 92, 87, 88, 88, 84, 83, 87, 89,
+91, 94, 94, 96, 93, 87, 87, 84, 109,
+93, 92, 95, 92, 94, 93, 92, 91, 82, 72, 73, 74, 74, 76,
+95, 89, 85, 84, 102, 89, 85, 88, 94, 86, 82, 83, 82, 91,
+94, 97, 90, 92, 85, 90, 85, 79, 125,
+89, 96, 94, 90, 94, 95, 91, 91, 85, 76, 72, 73, 74, 75,
+88, 100, 83, 84, 84, 83, 85, 88, 90, 85, 84, 83, 84, 88,
+92, 93, 90, 89, 84, 90, 94, 79, 139,
+93, 97, 97, 93, 92, 95, 91, 90, 87, 81, 74, 73, 73, 74,
+85, 97, 95, 95, 89, 86, 86, 92, 87, 85, 84, 90, 86, 85,
+91, 87, 87, 86, 93, 124, 140, 106, 143,
+101, 95, 97, 97, 96, 95, 84, 88, 87, 82, 78, 73, 73, 74,
+82, 92, 104, 95, 88, 89, 87, 89, 86, 85, 86, 87, 87, 81,
+81, 83, 91, 106, 131, 153, 151, 123, 133,
+99, 101, 102, 99, 96, 90, 83, 82, 85, 84, 79, 76, 74, 74,
+78, 81, 89, 96, 90, 93, 88, 88, 86, 88, 89, 95, 89, 82,
+81, 85, 104, 118, 141, 160, 129, 137, 147,
+103, 104, 98, 99, 90, 88, 81, 76, 81, 83, 79, 77, 75, 75,
+75, 76, 80, 90, 94, 87, 86, 87, 92, 85, 85, 85, 87, 87,
+89, 91, 112, 115, 145, 154, 145, 141, 147,
+106, 103, 100, 99, 92, 82, 78, 75, 78, 81, 79, 77, 77, 78,
+78, 76, 77, 81, 89, 87, 84, 84, 90, 86, 85, 84, 80, 85,
+97, 104, 119, 119, 149, 147, 144, 146, 152,
+107, 105, 103, 100, 93, 83, 78, 74, 74, 79, 78, 77, 76, 78,
+80, 79, 76, 78, 83, 84, 81, 81, 84, 83, 82, 78, 78, 85,
+86, 97, 105, 114, 145, 146, 148, 147, 150,
+107, 105, 103, 97, 92, 84, 72, 72, 75, 77, 76, 75, 76, 79,
+80, 80, 77, 76, 82, 81, 80, 81, 80, 80, 80, 77, 74, 74,
+73, 77, 91, 110, 132, 141, 152, 152, 145,
+107, 105, 103, 96, 92, 86, 73, 71, 73, 75, 75, 76, 76, 78,
+80, 80, 80, 98, 80, 80, 82, 82, 80, 78, 76, 73, 71, 72,
+71, 74, 80, 108, 119, 136, 158, 142, 137,
+107, 104, 101, 97, 85, 87, 75, 70, 70, 74, 74, 75, 77, 78,
+80, 82, 110, 117, 110, 78, 81, 83, 81, 78, 76, 73, 71, 69,
+68, 71, 74, 95, 120, 138, 148, 143, 139
+};
+
+const size_t byte_array1_size = sizeof(byte_array1);
+
+const unsigned char byte_array2[YSIZE * XSIZE] =
+{
+77, 73, 76, 80, 79, 75, 82, 65, 62, 64, 59, 59, 61, 72,
+70, 67, 65, 70, 71, 70, 68, 66, 65, 67, 66, 66, 66, 66,
+66, 66, 66, 66, 66, 65, 63, 63, 62,
+75, 71, 71, 79, 81, 75, 81, 73, 59, 65, 60, 60, 64, 73,
+73, 68, 66, 70, 72, 71, 68, 66, 66, 67, 66, 66, 66, 67,
+67, 67, 66, 67, 66, 64, 63, 63, 63,
+76, 71, 66, 73, 81, 78, 80, 79, 59, 66, 60, 59, 62, 74,
+74, 71, 67, 70, 73, 71, 68, 66, 65, 65, 66, 66, 67, 67,
+67, 67, 67, 67, 66, 64, 64, 64, 64,
+76, 72, 64, 68, 79, 81, 80, 80, 59, 68, 60, 59, 60, 75,
+75, 73, 67, 68, 73, 72, 68, 66, 65, 63, 67, 67, 67, 67,
+68, 67, 67, 66, 65, 64, 65, 65, 65,
+79, 72, 63, 66, 73, 80, 83, 82, 60, 65, 61, 61, 60, 66,
+75, 75, 65, 70, 73, 72, 68, 66, 65, 64, 68, 67, 68, 68,
+68, 67, 67, 66, 65, 65, 65, 66, 65,
+81, 73, 62, 65, 72, 74, 82, 85, 66, 59, 62, 60, 60, 63,
+75, 76, 68, 69, 72, 72, 68, 66, 66, 65, 67, 68, 68, 68,
+68, 68, 66, 66, 64, 66, 65, 66, 66,
+84, 74, 64, 64, 70, 71, 78, 84, 70, 58, 60, 59, 59, 63,
+75, 80, 73, 67, 72, 72, 68, 66, 66, 65, 66, 68, 68, 68,
+68, 68, 66, 65, 65, 65, 66, 67, 68,
+87, 81, 66, 63, 65, 68, 76, 76, 75, 59, 58, 59, 59, 60,
+71, 92, 65, 64, 74, 72, 69, 67, 65, 65, 65, 68, 69, 68,
+69, 67, 65, 65, 65, 65, 67, 68, 69,
+86, 86, 73, 64, 62, 67, 75, 76, 70, 61, 58, 58, 59, 60,
+81, 68, 59, 63, 74, 90, 99, 67, 65, 65, 64, 67, 68, 68,
+68, 67, 65, 65, 66, 65, 66, 68, 68,
+85, 85, 80, 66, 67, 67, 81, 74, 62, 63, 59, 58, 58, 60,
+93, 61, 59, 59, 68, 115, 76, 67, 66, 64, 64, 66, 68, 68,
+68, 66, 65, 65, 66, 65, 64, 65, 69,
+90, 87, 83, 71, 74, 77, 83, 79, 63, 60, 59, 59, 58, 58,
+90, 61, 59, 59, 67, 80, 71, 68, 66, 64, 63, 63, 68, 68,
+68, 66, 65, 66, 67, 65, 64, 62, 87,
+91, 92, 86, 76, 78, 81, 85, 82, 67, 59, 59, 59, 59, 60,
+88, 72, 59, 60, 74, 80, 70, 67, 66, 64, 62, 60, 65, 68,
+67, 66, 65, 67, 66, 64, 62, 59, 111,
+84, 84, 87, 85, 87, 85, 84, 84, 72, 59, 59, 59, 59, 59,
+73, 71, 62, 59, 100, 70, 70, 67, 66, 64, 60, 58, 58, 67,
+68, 66, 65, 66, 64, 63, 59, 56, 131,
+80, 90, 87, 83, 88, 89, 84, 83, 76, 64, 59, 59, 59, 58,
+59, 97, 64, 62, 71, 68, 70, 73, 66, 63, 61, 58, 58, 62,
+67, 66, 64, 65, 63, 63, 61, 57, 149,
+86, 91, 92, 87, 85, 88, 83, 81, 78, 69, 61, 59, 59, 59,
+59, 61, 83, 72, 67, 67, 69, 69, 66, 64, 61, 72, 56, 57,
+64, 64, 64, 64, 65, 115, 150, 93, 151,
+97, 89, 91, 92, 89, 88, 74, 80, 78, 71, 65, 59, 58, 59,
+58, 59, 71, 72, 67, 70, 70, 69, 67, 64, 63, 66, 56, 54,
+57, 59, 64, 87, 139, 162, 160, 128, 141,
+94, 96, 97, 94, 89, 82, 71, 70, 76, 73, 67, 61, 59, 59,
+58, 59, 61, 71, 67, 75, 70, 68, 70, 65, 63, 63, 59, 56,
+54, 55, 90, 121, 149, 168, 138, 144, 157,
+99, 100, 93, 93, 82, 80, 70, 62, 70, 72, 67, 63, 60, 60,
+58, 58, 60, 68, 70, 70, 69, 68, 79, 68, 64, 62, 60, 59,
+57, 57, 88, 120, 151, 162, 154, 149, 155,
+103, 99, 95, 94, 84, 73, 67, 62, 65, 69, 67, 64, 63, 64,
+63, 59, 60, 65, 71, 69, 69, 67, 78, 65, 63, 61, 59, 61,
+60, 68, 100, 128, 155, 155, 152, 155, 164,
+104, 102, 99, 95, 86, 74, 67, 61, 61, 66, 65, 63, 63, 64,
+65, 63, 60, 63, 70, 69, 67, 67, 67, 65, 62, 60, 58, 57,
+62, 58, 71, 117, 150, 154, 157, 155, 163,
+104, 101, 99, 91, 84, 74, 59, 59, 62, 64, 63, 61, 62, 64,
+64, 64, 61, 60, 69, 68, 67, 69, 67, 65, 62, 59, 58, 57,
+57, 56, 59, 104, 137, 147, 159, 161, 158,
+104, 101, 99, 90, 85, 77, 60, 57, 60, 62, 62, 62, 63, 64,
+65, 65, 66, 100, 67, 67, 69, 69, 67, 65, 63, 60, 58, 56,
+54, 55, 56, 77, 122, 142, 166, 157, 150,
+104, 101, 97, 92, 77, 79, 64, 57, 57, 62, 62, 62, 64, 65,
+66, 65, 115, 138, 129, 64, 68, 70, 68, 66, 64, 60, 58, 56,
+53, 53, 56, 62, 115, 143, 157, 156, 159
+};
+
+const size_t byte_array2_size = sizeof(byte_array2);
+
+const unsigned char byte_array3[YSIZE * XSIZE] =
+{
+211, 221, 216, 201, 205, 216, 195, 236, 244, 237, 250, 250, 248, 218,
+223, 232, 236, 224, 221, 221, 227, 231, 232, 227, 229, 227, 227, 225,
+227, 225, 226, 226, 226, 228, 234, 234, 234, 216, 226, 228, 205, 200,
+214, 198, 215, 250, 233, 247, 250, 242, 219, 220, 229, 235, 225, 217,
+220, 227, 232, 230, 228, 229, 228, 227, 224, 225, 223, 226, 225, 226,
+230, 233, 233, 234, 213, 227, 237, 220, 200, 204, 202, 201, 248, 231,
+246, 250, 245, 214, 215, 223, 232, 225, 218, 218, 225, 230, 232, 231,
+229, 227, 225, 224, 223, 226, 224, 225, 228, 229, 230, 232, 231, 215,
+223, 242, 233, 206, 200, 201, 197, 250, 227, 250, 249, 248, 211, 212,
+216, 233, 229, 216, 218, 225, 230, 232, 237, 226, 224, 224, 223, 225,
+225, 224, 225, 228, 229, 231, 229, 231, 208, 220, 247, 238, 221, 202,
+194, 194, 245, 237, 247, 247, 249, 234, 210, 212, 237, 222, 219, 217,
+226, 229, 232, 235, 222, 222, 223, 223, 223, 224, 224, 227, 226, 229,
+229, 228, 231, 200, 221, 247, 239, 224, 217, 196, 189, 229, 248, 245,
+248, 250, 241, 210, 210, 230, 225, 218, 218, 224, 230, 230, 229, 224,
+222, 222, 222, 222, 223, 225, 226, 231, 226, 228, 229, 230, 191, 216,
+246, 245, 226, 228, 207, 191, 221, 251, 248, 249, 251, 245, 214, 214,
+233, 229, 217, 217, 224, 229, 230, 229, 225, 220, 223, 221, 222, 224,
+224, 227, 230, 227, 226, 229, 230, 187, 199, 238, 248, 242, 231, 213,
+211, 209, 246, 248, 251, 251, 250, 226, 215, 236, 237, 217, 215, 222,
+226, 229, 229, 227, 222, 222, 223, 222, 225, 227, 228, 226, 227, 228,
+228, 230, 188, 189, 221, 243, 247, 237, 215, 209, 223, 241, 248, 248,
+250, 248, 228, 234, 251, 239, 219, 210, 205, 224, 229, 228, 230, 221,
+223, 223, 222, 226, 229, 228, 224, 227, 229, 230, 232, 190, 190, 201,
+235, 236, 238, 198, 214, 243, 238, 248, 248, 250, 249, 215, 244, 250,
+250, 240, 168, 220, 224, 228, 230, 231, 226, 221, 224, 223, 226, 230,
+227, 226, 226, 230, 233, 234, 179, 185, 195, 224, 215, 210, 195, 204,
+239, 245, 250, 250, 252, 254, 216, 243, 249, 249, 233, 210, 215, 223,
+227, 230, 234, 234, 224, 223, 223, 227, 230, 226, 226, 228, 231, 235,
+212, 178, 174, 190, 211, 207, 199, 189, 194, 230, 250, 250, 250, 253,
+253, 222, 225, 250, 248, 218, 216, 217, 225, 226, 232, 239, 242, 229,
+223, 224, 229, 230, 225, 228, 230, 236, 241, 183, 194, 194, 185, 190,
+185, 190, 191, 191, 219, 250, 251, 250, 253, 254, 241, 225, 246, 249,
+198, 217, 220, 224, 225, 234, 241, 242, 246, 224, 223, 227, 229, 227,
+228, 234, 237, 245, 149, 203, 178, 182, 193, 185, 179, 191, 194, 211,
+236, 252, 252, 254, 254, 253, 192, 240, 244, 235, 224, 220, 229, 224,
+236, 239, 243, 244, 236, 224, 229, 230, 229, 231, 230, 233, 244, 128,
+188, 177, 171, 184, 191, 182, 196, 197, 208, 224, 247, 253, 255, 252,
+250, 248, 226, 216, 228, 230, 220, 220, 227, 234, 237, 231, 247, 244,
+231, 231, 229, 228, 229, 182, 128, 196, 118, 160, 182, 174, 172, 179,
+183, 216, 203, 206, 220, 236, 253, 254, 253, 253, 249, 225, 219, 232,
+230, 220, 224, 227, 233, 237, 234, 244, 250, 245, 240, 224, 212, 174,
+123, 124, 176, 127, 171, 163, 161, 167, 177, 198, 221, 228, 212, 215,
+233, 245, 252, 255, 253, 252, 251, 223, 231, 216, 222, 227, 231, 231,
+234, 227, 238, 245, 249, 244, 210, 177, 124, 129, 134, 124, 113, 156,
+155, 172, 168, 197, 201, 224, 247, 224, 219, 233, 242, 249, 250, 252,
+254, 252, 230, 230, 224, 224, 225, 225, 227, 232, 232, 235, 239, 239,
+241, 213, 178, 131, 128, 128, 120, 114, 149, 157, 165, 168, 191, 218,
+231, 246, 237, 226, 234, 241, 243, 239, 244, 252, 249, 237, 225, 226,
+224, 227, 220, 229, 235, 235, 239, 238, 236, 230, 204, 177, 125, 131,
+127, 117, 111, 146, 151, 158, 166, 187, 215, 230, 246, 246, 231, 238,
+243, 246, 243, 241, 244, 253, 245, 226, 226, 229, 229, 229, 231, 236,
+238, 241, 240, 241, 235, 224, 188, 134, 123, 127, 116, 116, 144, 151,
+158, 173, 190, 214, 251, 250, 243, 236, 242, 249, 246, 241, 241, 244,
+251, 251, 228, 230, 230, 226, 232, 231, 236, 241, 243, 244, 243, 243,
+235, 200, 150, 128, 122, 119, 117, 144, 151, 156, 176, 190, 207, 246,
+253, 244, 239, 244, 246, 244, 242, 240, 243, 249, 198, 239, 234, 226,
+226, 228, 234, 238, 241, 244, 245, 247, 250, 244, 219, 182, 138, 118,
+118, 116, 143, 150, 162, 173, 208, 205, 238, 253, 251, 241, 244, 244,
+242, 243, 238, 246, 193, 146, 173, 246, 231, 223, 230, 232, 236, 240,
+245, 247, 252, 252, 245, 233, 195, 138, 114, 118, 108
+};
+
+const size_t byte_array3_size = sizeof(byte_array3);
+
+const float array_float1[YSIZE * XSIZE] =
+{
+234.866, 229.404, 234.866, 245.790, 243.059, 232.135, 245.790, 213.018,
+210.287, 215.749, 204.825, 210.287, 215.749, 234.866, 237.597, 226.673,
+223.942, 237.597, 243.059, 240.328, 234.866, 237.597, 240.328, 237.597,
+221.211, 229.404, 232.135, 232.135, 229.404, 234.866, 240.328, 248.521,
+262.176, 259.445, 264.907, 259.445, 243.059,
+232.135, 223.942, 221.211, 240.328, 243.059, 232.135, 243.059, 226.673,
+202.094, 215.749, 207.556, 210.287, 218.480, 237.597, 237.597, 229.404,
+229.404, 240.328, 245.790, 243.059, 237.597, 232.135, 237.597, 240.328,
+226.673, 218.480, 223.942, 229.404, 232.135, 237.597, 245.790, 259.445,
+262.176, 259.445, 259.445, 251.252, 245.790,
+232.135, 221.211, 215.749, 229.404, 245.790, 237.597, 240.328, 240.328,
+199.363, 215.749, 204.825, 207.556, 215.749, 240.328, 240.328, 237.597,
+232.135, 245.790, 251.252, 243.059, 240.328, 240.328, 237.597, 234.866,
+229.404, 223.942, 223.942, 226.673, 237.597, 243.059, 253.983, 256.714,
+253.983, 253.983, 251.252, 251.252, 262.176,
+232.135, 223.942, 207.556, 218.480, 240.328, 243.059, 240.328, 243.059,
+199.363, 218.480, 204.825, 204.825, 210.287, 243.059, 251.252, 253.983,
+248.521, 243.059, 256.714, 251.252, 245.790, 243.059, 240.328, 229.404,
+229.404, 223.942, 223.942, 232.135, 240.328, 248.521, 256.714, 253.983,
+253.983, 243.059, 245.790, 262.176, 262.176,
+237.597, 226.673, 204.825, 210.287, 226.673, 243.059, 245.790, 245.790,
+202.094, 213.018, 207.556, 207.556, 207.556, 229.404, 256.714, 273.100,
+243.059, 251.252, 256.714, 251.252, 245.790, 243.059, 245.790, 232.135,
+229.404, 226.673, 226.673, 237.597, 248.521, 251.252, 240.328, 251.252,
+248.521, 240.328, 245.790, 264.907, 259.445,
+243.059, 226.673, 202.094, 210.287, 223.942, 229.404, 245.790, 251.252,
+213.018, 196.632, 207.556, 204.825, 204.825, 221.211, 259.445, 275.831,
+259.445, 251.252, 259.445, 253.983, 245.790, 243.059, 245.790, 237.597,
+234.866, 229.404, 234.866, 240.328, 245.790, 245.790, 237.597, 245.790,
+243.059, 245.790, 243.059, 267.638, 267.638,
+251.252, 229.404, 204.825, 207.556, 221.211, 221.211, 234.866, 248.521,
+221.211, 196.632, 202.094, 202.094, 204.825, 221.211, 284.024, 294.948,
+253.983, 251.252, 259.445, 256.714, 240.328, 237.597, 243.059, 237.597,
+232.135, 232.135, 240.328, 243.059, 253.983, 248.521, 240.328, 240.328,
+248.521, 240.328, 248.521, 289.486, 294.948,
+253.983, 243.059, 213.018, 204.825, 210.287, 218.480, 232.135, 234.866,
+232.135, 199.363, 196.632, 199.363, 202.094, 215.749, 278.562, 275.831,
+240.328, 251.252, 253.983, 248.521, 237.597, 237.597, 234.866, 237.597,
+232.135, 234.866, 240.328, 243.059, 256.714, 256.714, 245.790, 240.328,
+232.135, 234.866, 267.638, 297.679, 308.603,
+251.252, 253.983, 226.673, 207.556, 202.094, 215.749, 229.404, 232.135,
+221.211, 204.825, 196.632, 199.363, 202.094, 215.749, 286.755, 234.866,
+234.866, 251.252, 262.176, 267.638, 284.024, 234.866, 232.135, 232.135,
+232.135, 240.328, 245.790, 245.790, 253.983, 251.252, 240.328, 237.597,
+234.866, 243.059, 264.907, 300.410, 297.679,
+251.252, 253.983, 243.059, 213.018, 215.749, 213.018, 243.059, 229.404,
+204.825, 207.556, 199.363, 196.632, 199.363, 213.018, 286.755, 226.673,
+223.942, 240.328, 226.673, 292.217, 259.445, 229.404, 232.135, 229.404,
+234.866, 237.597, 245.790, 248.521, 251.252, 245.790, 240.328, 237.597,
+243.059, 245.790, 248.521, 270.369, 292.217,
+262.176, 256.714, 248.521, 223.942, 229.404, 234.866, 248.521, 237.597,
+204.825, 202.094, 199.363, 199.363, 199.363, 210.287, 275.831, 234.866,
+226.673, 243.059, 251.252, 270.369, 267.638, 234.866, 234.866, 237.597,
+226.673, 229.404, 243.059, 243.059, 251.252, 251.252, 251.252, 262.176,
+262.176, 237.597, 248.521, 245.790, 267.638,
+262.176, 264.907, 256.714, 237.597, 240.328, 243.059, 251.252, 245.790,
+215.749, 196.632, 199.363, 199.363, 202.094, 210.287, 273.100, 251.252,
+229.404, 234.866, 267.638, 273.100, 251.252, 237.597, 240.328, 240.328,
+229.404, 226.673, 237.597, 243.059, 248.521, 256.714, 256.714, 262.176,
+253.983, 237.597, 237.597, 229.404, 297.679,
+253.983, 251.252, 259.445, 251.252, 256.714, 253.983, 251.252, 248.521,
+223.942, 196.632, 199.363, 202.094, 202.094, 207.556, 259.445, 243.059,
+232.135, 229.404, 278.562, 243.059, 232.135, 240.328, 256.714, 234.866,
+223.942, 226.673, 223.942, 248.521, 256.714, 264.907, 245.790, 251.252,
+232.135, 245.790, 232.135, 215.749, 341.375,
+243.059, 262.176, 256.714, 245.790, 256.714, 259.445, 248.521, 248.521,
+232.135, 207.556, 196.632, 199.363, 202.094, 204.825, 240.328, 273.100,
+226.673, 229.404, 229.404, 226.673, 232.135, 240.328, 245.790, 232.135,
+229.404, 226.673, 229.404, 240.328, 251.252, 253.983, 245.790, 243.059,
+229.404, 245.790, 256.714, 215.749, 379.609,
+253.983, 264.907, 264.907, 253.983, 251.252, 259.445, 248.521, 245.790,
+237.597, 221.211, 202.094, 199.363, 199.363, 202.094, 232.135, 264.907,
+259.445, 259.445, 243.059, 234.866, 234.866, 251.252, 237.597, 232.135,
+229.404, 245.790, 234.866, 232.135, 248.521, 237.597, 237.597, 234.866,
+253.983, 338.644, 382.340, 289.486, 390.533,
+275.831, 259.445, 264.907, 264.907, 262.176, 259.445, 229.404, 240.328,
+237.597, 223.942, 213.018, 199.363, 199.363, 202.094, 223.942, 251.252,
+284.024, 259.445, 240.328, 243.059, 237.597, 243.059, 234.866, 232.135,
+234.866, 237.597, 237.597, 221.211, 221.211, 226.673, 248.521, 289.486,
+357.761, 417.843, 412.381, 335.913, 363.223,
+270.369, 275.831, 278.562, 270.369, 262.176, 245.790, 226.673, 223.942,
+232.135, 229.404, 215.749, 207.556, 202.094, 202.094, 213.018, 221.211,
+243.059, 262.176, 245.790, 253.983, 240.328, 240.328, 234.866, 240.328,
+243.059, 259.445, 243.059, 223.942, 221.211, 232.135, 284.024, 322.258,
+385.071, 436.960, 352.299, 374.147, 401.457,
+281.293, 284.024, 267.638, 270.369, 245.790, 240.328, 221.211, 207.556,
+221.211, 226.673, 215.749, 210.287, 204.825, 204.825, 204.825, 207.556,
+218.480, 245.790, 256.714, 237.597, 234.866, 237.597, 251.252, 232.135,
+232.135, 232.135, 237.597, 237.597, 243.059, 248.521, 305.872, 314.065,
+395.995, 420.574, 395.995, 385.071, 401.457,
+289.486, 281.293, 273.100, 270.369, 251.252, 223.942, 213.018, 204.825,
+213.018, 221.211, 215.749, 210.287, 210.287, 213.018, 213.018, 207.556,
+210.287, 221.211, 243.059, 237.597, 229.404, 229.404, 245.790, 234.866,
+232.135, 229.404, 218.480, 232.135, 264.907, 284.024, 324.989, 324.989,
+406.919, 401.457, 393.264, 398.726, 415.112,
+292.217, 286.755, 281.293, 273.100, 253.983, 226.673, 213.018, 202.094,
+202.094, 215.749, 213.018, 210.287, 207.556, 213.018, 218.480, 215.749,
+207.556, 213.018, 226.673, 229.404, 221.211, 221.211, 229.404, 226.673,
+223.942, 213.018, 213.018, 232.135, 234.866, 264.907, 286.755, 311.334,
+395.995, 398.726, 404.188, 401.457, 409.650,
+292.217, 286.755, 281.293, 264.907, 251.252, 229.404, 196.632, 196.632,
+204.825, 210.287, 207.556, 204.825, 207.556, 215.749, 218.480, 218.480,
+210.287, 207.556, 223.942, 221.211, 218.480, 221.211, 218.480, 218.480,
+218.480, 210.287, 202.094, 202.094, 199.363, 210.287, 248.521, 300.410,
+360.492, 385.071, 415.112, 415.112, 395.995,
+292.217, 286.755, 281.293, 262.176, 251.252, 234.866, 199.363, 193.901,
+199.363, 204.825, 204.825, 207.556, 207.556, 213.018, 218.480, 218.480,
+218.480, 267.638, 218.480, 218.480, 223.942, 223.942, 218.480, 213.018,
+207.556, 199.363, 193.901, 196.632, 193.901, 202.094, 218.480, 294.948,
+324.989, 371.416, 431.498, 387.802, 374.147,
+292.217, 284.024, 275.831, 264.907, 232.135, 237.597, 204.825, 191.170,
+191.170, 202.094, 202.094, 204.825, 210.287, 213.018, 218.480, 223.942,
+300.410, 319.527, 300.410, 213.018, 221.211, 226.673, 221.211, 213.018,
+207.556, 199.363, 193.901, 188.439, 185.708, 193.901, 202.094, 259.445,
+327.720, 376.878, 404.188, 390.533, 379.609
+};
+
+const size_t array_float1_size = sizeof(array_float1);
+
+const float array_float2[YSIZE * XSIZE] =
+{
+210.287, 199.363, 207.556, 218.480, 215.749, 204.825, 223.942, 177.515,
+169.322, 174.784, 161.129, 161.129, 166.591, 196.632, 191.170, 182.977,
+177.515, 191.170, 193.901, 191.170, 185.708, 180.246, 177.515, 182.977,
+180.246, 180.246, 180.246, 180.246, 180.246, 180.246, 180.246, 180.246,
+180.246, 177.515, 172.053, 172.053, 169.322,
+204.825, 193.901, 193.901, 215.749, 221.211, 204.825, 221.211, 199.363,
+161.129, 177.515, 163.860, 163.860, 174.784, 199.363, 199.363, 185.708,
+180.246, 191.170, 196.632, 193.901, 185.708, 180.246, 180.246, 182.977,
+180.246, 180.246, 180.246, 182.977, 182.977, 182.977, 180.246, 182.977,
+180.246, 174.784, 172.053, 172.053, 172.053,
+207.556, 193.901, 180.246, 199.363, 221.211, 213.018, 218.480, 215.749,
+161.129, 180.246, 163.860, 161.129, 169.322, 202.094, 202.094, 193.901,
+182.977, 191.170, 199.363, 193.901, 185.708, 180.246, 177.515, 177.515,
+180.246, 180.246, 182.977, 182.977, 182.977, 182.977, 182.977, 182.977,
+180.246, 174.784, 174.784, 174.784, 174.784,
+207.556, 196.632, 174.784, 185.708, 215.749, 221.211, 218.480, 218.480,
+161.129, 185.708, 163.860, 161.129, 163.860, 204.825, 204.825, 199.363,
+182.977, 185.708, 199.363, 196.632, 185.708, 180.246, 177.515, 172.053,
+182.977, 182.977, 182.977, 182.977, 185.708, 182.977, 182.977, 180.246,
+177.515, 174.784, 177.515, 177.515, 177.515,
+215.749, 196.632, 172.053, 180.246, 199.363, 218.480, 226.673, 223.942,
+163.860, 177.515, 166.591, 166.591, 163.860, 180.246, 204.825, 204.825,
+177.515, 191.170, 199.363, 196.632, 185.708, 180.246, 177.515, 174.784,
+185.708, 182.977, 185.708, 185.708, 185.708, 182.977, 182.977, 180.246,
+177.515, 177.515, 177.515, 180.246, 177.515,
+221.211, 199.363, 169.322, 177.515, 196.632, 202.094, 223.942, 232.135,
+180.246, 161.129, 169.322, 163.860, 163.860, 172.053, 204.825, 207.556,
+185.708, 188.439, 196.632, 196.632, 185.708, 180.246, 180.246, 177.515,
+182.977, 185.708, 185.708, 185.708, 185.708, 185.708, 180.246, 180.246,
+174.784, 180.246, 177.515, 180.246, 180.246,
+229.404, 202.094, 174.784, 174.784, 191.170, 193.901, 213.018, 229.404,
+191.170, 158.398, 163.860, 161.129, 161.129, 172.053, 204.825, 218.480,
+199.363, 182.977, 196.632, 196.632, 185.708, 180.246, 180.246, 177.515,
+180.246, 185.708, 185.708, 185.708, 185.708, 185.708, 180.246, 177.515,
+177.515, 177.515, 180.246, 182.977, 185.708,
+237.597, 221.211, 180.246, 172.053, 177.515, 185.708, 207.556, 207.556,
+204.825, 161.129, 158.398, 161.129, 161.129, 163.860, 193.901, 251.252,
+177.515, 174.784, 202.094, 196.632, 188.439, 182.977, 177.515, 177.515,
+177.515, 185.708, 188.439, 185.708, 188.439, 182.977, 177.515, 177.515,
+177.515, 177.515, 182.977, 185.708, 188.439,
+234.866, 234.866, 199.363, 174.784, 169.322, 182.977, 204.825, 207.556,
+191.170, 166.591, 158.398, 158.398, 161.129, 163.860, 221.211, 185.708,
+161.129, 172.053, 202.094, 245.790, 270.369, 182.977, 177.515, 177.515,
+174.784, 182.977, 185.708, 185.708, 185.708, 182.977, 177.515, 177.515,
+180.246, 177.515, 180.246, 185.708, 185.708,
+232.135, 232.135, 218.480, 180.246, 182.977, 182.977, 221.211, 202.094,
+169.322, 172.053, 161.129, 158.398, 158.398, 163.860, 253.983, 166.591,
+161.129, 161.129, 185.708, 314.065, 207.556, 182.977, 180.246, 174.784,
+174.784, 180.246, 185.708, 185.708, 185.708, 180.246, 177.515, 177.515,
+180.246, 177.515, 174.784, 177.515, 188.439,
+245.790, 237.597, 226.673, 193.901, 202.094, 210.287, 226.673, 215.749,
+172.053, 163.860, 161.129, 161.129, 158.398, 158.398, 245.790, 166.591,
+161.129, 161.129, 182.977, 218.480, 193.901, 185.708, 180.246, 174.784,
+172.053, 172.053, 185.708, 185.708, 185.708, 180.246, 177.515, 180.246,
+182.977, 177.515, 174.784, 169.322, 237.597,
+248.521, 251.252, 234.866, 207.556, 213.018, 221.211, 232.135, 223.942,
+182.977, 161.129, 161.129, 161.129, 161.129, 163.860, 240.328, 196.632,
+161.129, 163.860, 202.094, 218.480, 191.170, 182.977, 180.246, 174.784,
+169.322, 163.860, 177.515, 185.708, 182.977, 180.246, 177.515, 182.977,
+180.246, 174.784, 169.322, 161.129, 303.141,
+229.404, 229.404, 237.597, 232.135, 237.597, 232.135, 229.404, 229.404,
+196.632, 161.129, 161.129, 161.129, 161.129, 161.129, 199.363, 193.901,
+169.322, 161.129, 273.100, 191.170, 191.170, 182.977, 180.246, 174.784,
+163.860, 158.398, 158.398, 182.977, 185.708, 180.246, 177.515, 180.246,
+174.784, 172.053, 161.129, 152.936, 357.761,
+218.480, 245.790, 237.597, 226.673, 240.328, 243.059, 229.404, 226.673,
+207.556, 174.784, 161.129, 161.129, 161.129, 158.398, 161.129, 264.907,
+174.784, 169.322, 193.901, 185.708, 191.170, 199.363, 180.246, 172.053,
+166.591, 158.398, 158.398, 169.322, 182.977, 180.246, 174.784, 177.515,
+172.053, 172.053, 166.591, 155.667, 406.919,
+234.866, 248.521, 251.252, 237.597, 232.135, 240.328, 226.673, 221.211,
+213.018, 188.439, 166.591, 161.129, 161.129, 161.129, 161.129, 166.591,
+226.673, 196.632, 182.977, 182.977, 188.439, 188.439, 180.246, 174.784,
+166.591, 196.632, 152.936, 155.667, 174.784, 174.784, 174.784, 174.784,
+177.515, 314.065, 409.650, 253.983, 412.381,
+264.907, 243.059, 248.521, 251.252, 243.059, 240.328, 202.094, 218.480,
+213.018, 193.901, 177.515, 161.129, 158.398, 161.129, 158.398, 161.129,
+193.901, 196.632, 182.977, 191.170, 191.170, 188.439, 182.977, 174.784,
+172.053, 180.246, 152.936, 147.474, 155.667, 161.129, 174.784, 237.597,
+379.609, 442.422, 436.960, 349.568, 385.071,
+256.714, 262.176, 264.907, 256.714, 243.059, 223.942, 193.901, 191.170,
+207.556, 199.363, 182.977, 166.591, 161.129, 161.129, 158.398, 161.129,
+166.591, 193.901, 182.977, 204.825, 191.170, 185.708, 191.170, 177.515,
+172.053, 172.053, 161.129, 152.936, 147.474, 150.205, 245.790, 330.451,
+406.919, 458.808, 376.878, 393.264, 428.767,
+270.369, 273.100, 253.983, 253.983, 223.942, 218.480, 191.170, 169.322,
+191.170, 196.632, 182.977, 172.053, 163.860, 163.860, 158.398, 158.398,
+163.860, 185.708, 191.170, 191.170, 188.439, 185.708, 215.749, 185.708,
+174.784, 169.322, 163.860, 161.129, 155.667, 155.667, 240.328, 327.720,
+412.381, 442.422, 420.574, 406.919, 423.305,
+281.293, 270.369, 259.445, 256.714, 229.404, 199.363, 182.977, 169.322,
+177.515, 188.439, 182.977, 174.784, 172.053, 174.784, 172.053, 161.129,
+163.860, 177.515, 193.901, 188.439, 188.439, 182.977, 213.018, 177.515,
+172.053, 166.591, 161.129, 166.591, 163.860, 185.708, 273.100, 349.568,
+423.305, 423.305, 415.112, 423.305, 447.884,
+284.024, 278.562, 270.369, 259.445, 234.866, 202.094, 182.977, 166.591,
+166.591, 180.246, 177.515, 172.053, 172.053, 174.784, 177.515, 172.053,
+163.860, 172.053, 191.170, 188.439, 182.977, 182.977, 182.977, 177.515,
+169.322, 163.860, 158.398, 155.667, 169.322, 158.398, 193.901, 319.527,
+409.650, 420.574, 428.767, 423.305, 445.153,
+284.024, 275.831, 270.369, 248.521, 229.404, 202.094, 161.129, 161.129,
+169.322, 174.784, 172.053, 166.591, 169.322, 174.784, 174.784, 174.784,
+166.591, 163.860, 188.439, 185.708, 182.977, 188.439, 182.977, 177.515,
+169.322, 161.129, 158.398, 155.667, 155.667, 152.936, 161.129, 284.024,
+374.147, 401.457, 434.229, 439.691, 431.498,
+284.024, 275.831, 270.369, 245.790, 232.135, 210.287, 163.860, 155.667,
+163.860, 169.322, 169.322, 169.322, 172.053, 174.784, 177.515, 177.515,
+180.246, 273.100, 182.977, 182.977, 188.439, 188.439, 182.977, 177.515,
+172.053, 163.860, 158.398, 152.936, 147.474, 150.205, 152.936, 210.287,
+333.182, 387.802, 453.346, 428.767, 409.650,
+284.024, 275.831, 264.907, 251.252, 210.287, 215.749, 174.784, 155.667,
+155.667, 169.322, 169.322, 169.322, 174.784, 177.515, 180.246, 177.515,
+314.065, 376.878, 352.299, 174.784, 185.708, 191.170, 185.708, 180.246,
+174.784, 163.860, 158.398, 152.936, 144.743, 144.743, 152.936, 169.322,
+314.065, 390.533, 428.767, 426.036, 434.229
+};
+
+const size_t array_float2_size = sizeof(array_float2);
+
+const double array_double1[YSIZE * XSIZE] =
+{
+148.914762, 145.451628, 148.914762, 155.841030, 154.109463, 147.183195,
+155.841030, 135.062226, 133.330659, 136.793793, 129.867525, 133.330659,
+136.793793, 148.914762, 150.646329, 143.720061, 141.988494, 150.646329,
+154.109463, 152.377896, 148.914762, 150.646329, 152.377896, 150.646329,
+140.256927, 145.451628, 147.183195, 147.183195, 145.451628, 148.914762,
+152.377896, 157.572597, 166.230432, 164.498865, 167.961999, 164.498865,
+154.109463,
+147.183195, 141.988494, 140.256927, 152.377896, 154.109463, 147.183195,
+154.109463, 143.720061, 128.135958, 136.793793, 131.599092, 133.330659,
+138.525360, 150.646329, 150.646329, 145.451628, 145.451628, 152.377896,
+155.841030, 154.109463, 150.646329, 147.183195, 150.646329, 152.377896,
+143.720061, 138.525360, 141.988494, 145.451628, 147.183195, 150.646329,
+155.841030, 164.498865, 166.230432, 164.498865, 164.498865, 159.304164,
+155.841030,
+147.183195, 140.256927, 136.793793, 145.451628, 155.841030, 150.646329,
+152.377896, 152.377896, 126.404391, 136.793793, 129.867525, 131.599092,
+136.793793, 152.377896, 152.377896, 150.646329, 147.183195, 155.841030,
+159.304164, 154.109463, 152.377896, 152.377896, 150.646329, 148.914762,
+145.451628, 141.988494, 141.988494, 143.720061, 150.646329, 154.109463,
+161.035731, 162.767298, 161.035731, 161.035731, 159.304164, 159.304164,
+166.230432,
+147.183195, 141.988494, 131.599092, 138.525360, 152.377896, 154.109463,
+152.377896, 154.109463, 126.404391, 138.525360, 129.867525, 129.867525,
+133.330659, 154.109463, 159.304164, 161.035731, 157.572597, 154.109463,
+162.767298, 159.304164, 155.841030, 154.109463, 152.377896, 145.451628,
+145.451628, 141.988494, 141.988494, 147.183195, 152.377896, 157.572597,
+162.767298, 161.035731, 161.035731, 154.109463, 155.841030, 166.230432,
+166.230432,
+150.646329, 143.720061, 129.867525, 133.330659, 143.720061, 154.109463,
+155.841030, 155.841030, 128.135958, 135.062226, 131.599092, 131.599092,
+131.599092, 145.451628, 162.767298, 173.156700, 154.109463, 159.304164,
+162.767298, 159.304164, 155.841030, 154.109463, 155.841030, 147.183195,
+145.451628, 143.720061, 143.720061, 150.646329, 157.572597, 159.304164,
+152.377896, 159.304164, 157.572597, 152.377896, 155.841030, 167.961999,
+164.498865,
+154.109463, 143.720061, 128.135958, 133.330659, 141.988494, 145.451628,
+155.841030, 159.304164, 135.062226, 124.672824, 131.599092, 129.867525,
+129.867525, 140.256927, 164.498865, 174.888267, 164.498865, 159.304164,
+164.498865, 161.035731, 155.841030, 154.109463, 155.841030, 150.646329,
+148.914762, 145.451628, 148.914762, 152.377896, 155.841030, 155.841030,
+150.646329, 155.841030, 154.109463, 155.841030, 154.109463, 169.693566,
+169.693566,
+159.304164, 145.451628, 129.867525, 131.599092, 140.256927, 140.256927,
+148.914762, 157.572597, 140.256927, 124.672824, 128.135958, 128.135958,
+129.867525, 140.256927, 180.082968, 187.009236, 161.035731, 159.304164,
+164.498865, 162.767298, 152.377896, 150.646329, 154.109463, 150.646329,
+147.183195, 147.183195, 152.377896, 154.109463, 161.035731, 157.572597,
+152.377896, 152.377896, 157.572597, 152.377896, 157.572597, 183.546102,
+187.009236,
+161.035731, 154.109463, 135.062226, 129.867525, 133.330659, 138.525360,
+147.183195, 148.914762, 147.183195, 126.404391, 124.672824, 126.404391,
+128.135958, 136.793793, 176.619834, 174.888267, 152.377896, 159.304164,
+161.035731, 157.572597, 150.646329, 150.646329, 148.914762, 150.646329,
+147.183195, 148.914762, 152.377896, 154.109463, 162.767298, 162.767298,
+155.841030, 152.377896, 147.183195, 148.914762, 169.693566, 188.740803,
+195.667071,
+159.304164, 161.035731, 143.720061, 131.599092, 128.135958, 136.793793,
+145.451628, 147.183195, 140.256927, 129.867525, 124.672824, 126.404391,
+128.135958, 136.793793, 181.814535, 148.914762, 148.914762, 159.304164,
+166.230432, 169.693566, 180.082968, 148.914762, 147.183195, 147.183195,
+147.183195, 152.377896, 155.841030, 155.841030, 161.035731, 159.304164,
+152.377896, 150.646329, 148.914762, 154.109463, 167.961999, 190.472370,
+188.740803,
+159.304164, 161.035731, 154.109463, 135.062226, 136.793793, 135.062226,
+154.109463, 145.451628, 129.867525, 131.599092, 126.404391, 124.672824,
+126.404391, 135.062226, 181.814535, 143.720061, 141.988494, 152.377896,
+143.720061, 185.277669, 164.498865, 145.451628, 147.183195, 145.451628,
+148.914762, 150.646329, 155.841030, 157.572597, 159.304164, 155.841030,
+152.377896, 150.646329, 154.109463, 155.841030, 157.572597, 171.425133,
+185.277669,
+166.230432, 162.767298, 157.572597, 141.988494, 145.451628, 148.914762,
+157.572597, 150.646329, 129.867525, 128.135958, 126.404391, 126.404391,
+126.404391, 133.330659, 174.888267, 148.914762, 143.720061, 154.109463,
+159.304164, 171.425133, 169.693566, 148.914762, 148.914762, 150.646329,
+143.720061, 145.451628, 154.109463, 154.109463, 159.304164, 159.304164,
+159.304164, 166.230432, 166.230432, 150.646329, 157.572597, 155.841030,
+169.693566,
+166.230432, 167.961999, 162.767298, 150.646329, 152.377896, 154.109463,
+159.304164, 155.841030, 136.793793, 124.672824, 126.404391, 126.404391,
+128.135958, 133.330659, 173.156700, 159.304164, 145.451628, 148.914762,
+169.693566, 173.156700, 159.304164, 150.646329, 152.377896, 152.377896,
+145.451628, 143.720061, 150.646329, 154.109463, 157.572597, 162.767298,
+162.767298, 166.230432, 161.035731, 150.646329, 150.646329, 145.451628,
+188.740803,
+161.035731, 159.304164, 164.498865, 159.304164, 162.767298, 161.035731,
+159.304164, 157.572597, 141.988494, 124.672824, 126.404391, 128.135958,
+128.135958, 131.599092, 164.498865, 154.109463, 147.183195, 145.451628,
+176.619834, 154.109463, 147.183195, 152.377896, 162.767298, 148.914762,
+141.988494, 143.720061, 141.988494, 157.572597, 162.767298, 167.961999,
+155.841030, 159.304164, 147.183195, 155.841030, 147.183195, 136.793793,
+216.445875,
+154.109463, 166.230432, 162.767298, 155.841030, 162.767298, 164.498865,
+157.572597, 157.572597, 147.183195, 131.599092, 124.672824, 126.404391,
+128.135958, 129.867525, 152.377896, 173.156700, 143.720061, 145.451628,
+145.451628, 143.720061, 147.183195, 152.377896, 155.841030, 147.183195,
+145.451628, 143.720061, 145.451628, 152.377896, 159.304164, 161.035731,
+155.841030, 154.109463, 145.451628, 155.841030, 162.767298, 136.793793,
+240.687813,
+161.035731, 167.961999, 167.961999, 161.035731, 159.304164, 164.498865,
+157.572597, 155.841030, 150.646329, 140.256927, 128.135958, 126.404391,
+126.404391, 128.135958, 147.183195, 167.961999, 164.498865, 164.498865,
+154.109463, 148.914762, 148.914762, 159.304164, 150.646329, 147.183195,
+145.451628, 155.841030, 148.914762, 147.183195, 157.572597, 150.646329,
+150.646329, 148.914762, 161.035731, 214.714308, 242.419380, 183.546102,
+247.614081,
+174.888267, 164.498865, 167.961999, 167.961999, 166.230432, 164.498865,
+145.451628, 152.377896, 150.646329, 141.988494, 135.062226, 126.404391,
+126.404391, 128.135958, 141.988494, 159.304164, 180.082968, 164.498865,
+152.377896, 154.109463, 150.646329, 154.109463, 148.914762, 147.183195,
+148.914762, 150.646329, 150.646329, 140.256927, 140.256927, 143.720061,
+157.572597, 183.546102, 226.835277, 264.929751, 261.466617, 212.982741,
+230.298411,
+171.425133, 174.888267, 176.619834, 171.425133, 166.230432, 155.841030,
+143.720061, 141.988494, 147.183195, 145.451628, 136.793793, 131.599092,
+128.135958, 128.135958, 135.062226, 140.256927, 154.109463, 166.230432,
+155.841030, 161.035731, 152.377896, 152.377896, 148.914762, 152.377896,
+154.109463, 164.498865, 154.109463, 141.988494, 140.256927, 147.183195,
+180.082968, 204.324906, 244.150947, 277.050720, 223.372143, 237.224679,
+254.540349,
+178.351401, 180.082968, 169.693566, 171.425133, 155.841030, 152.377896,
+140.256927, 131.599092, 140.256927, 143.720061, 136.793793, 133.330659,
+129.867525, 129.867525, 129.867525, 131.599092, 138.525360, 155.841030,
+162.767298, 150.646329, 148.914762, 150.646329, 159.304164, 147.183195,
+147.183195, 147.183195, 150.646329, 150.646329, 154.109463, 157.572597,
+193.935504, 199.130205, 251.077215, 266.661318, 251.077215, 244.150947,
+254.540349,
+183.546102, 178.351401, 173.156700, 171.425133, 159.304164, 141.988494,
+135.062226, 129.867525, 135.062226, 140.256927, 136.793793, 133.330659,
+133.330659, 135.062226, 135.062226, 131.599092, 133.330659, 140.256927,
+154.109463, 150.646329, 145.451628, 145.451628, 155.841030, 148.914762,
+147.183195, 145.451628, 138.525360, 147.183195, 167.961999, 180.082968,
+206.056473, 206.056473, 258.003483, 254.540349, 249.345648, 252.808782,
+263.198184,
+185.277669, 181.814535, 178.351401, 173.156700, 161.035731, 143.720061,
+135.062226, 128.135958, 128.135958, 136.793793, 135.062226, 133.330659,
+131.599092, 135.062226, 138.525360, 136.793793, 131.599092, 135.062226,
+143.720061, 145.451628, 140.256927, 140.256927, 145.451628, 143.720061,
+141.988494, 135.062226, 135.062226, 147.183195, 148.914762, 167.961999,
+181.814535, 197.398638, 251.077215, 252.808782, 256.271916, 254.540349,
+259.735050,
+185.277669, 181.814535, 178.351401, 167.961999, 159.304164, 145.451628,
+124.672824, 124.672824, 129.867525, 133.330659, 131.599092, 129.867525,
+131.599092, 136.793793, 138.525360, 138.525360, 133.330659, 131.599092,
+141.988494, 140.256927, 138.525360, 140.256927, 138.525360, 138.525360,
+138.525360, 133.330659, 128.135958, 128.135958, 126.404391, 133.330659,
+157.572597, 190.472370, 228.566844, 244.150947, 263.198184, 263.198184,
+251.077215,
+185.277669, 181.814535, 178.351401, 166.230432, 159.304164, 148.914762,
+126.404391, 122.941257, 126.404391, 129.867525, 129.867525, 131.599092,
+131.599092, 135.062226, 138.525360, 138.525360, 138.525360, 169.693566,
+138.525360, 138.525360, 141.988494, 141.988494, 138.525360, 135.062226,
+131.599092, 126.404391, 122.941257, 124.672824, 122.941257, 128.135958,
+138.525360, 187.009236, 206.056473, 235.493112, 273.587586, 245.882514,
+237.224679,
+185.277669, 180.082968, 174.888267, 167.961999, 147.183195, 150.646329,
+129.867525, 121.209690, 121.209690, 128.135958, 128.135958, 129.867525,
+133.330659, 135.062226, 138.525360, 141.988494, 190.472370, 202.593339,
+190.472370, 135.062226, 140.256927, 143.720061, 140.256927, 135.062226,
+131.599092, 126.404391, 122.941257, 119.478123, 117.746556, 122.941257,
+128.135958, 164.498865, 207.788040, 238.956246, 256.271916, 247.614081,
+240.687813
+};
+
+const size_t array_double1_size = sizeof(array_double1);
+
+const double array_double2[YSIZE * XSIZE] =
+{
+133.330659, 126.404391, 131.599092, 138.525360, 136.793793, 129.867525,
+141.988494, 112.551855, 107.357154, 110.820288, 102.162453, 102.162453,
+105.625587, 124.672824, 121.209690, 116.014989, 112.551855, 121.209690,
+122.941257, 121.209690, 117.746556, 114.283422, 112.551855, 116.014989,
+114.283422, 114.283422, 114.283422, 114.283422, 114.283422, 114.283422,
+114.283422, 114.283422, 114.283422, 112.551855, 109.088721, 109.088721,
+107.357154,
+129.867525, 122.941257, 122.941257, 136.793793, 140.256927, 129.867525,
+140.256927, 126.404391, 102.162453, 112.551855, 103.894020, 103.894020,
+110.820288, 126.404391, 126.404391, 117.746556, 114.283422, 121.209690,
+124.672824, 122.941257, 117.746556, 114.283422, 114.283422, 116.014989,
+114.283422, 114.283422, 114.283422, 116.014989, 116.014989, 116.014989,
+114.283422, 116.014989, 114.283422, 110.820288, 109.088721, 109.088721,
+109.088721,
+131.599092, 122.941257, 114.283422, 126.404391, 140.256927, 135.062226,
+138.525360, 136.793793, 102.162453, 114.283422, 103.894020, 102.162453,
+107.357154, 128.135958, 128.135958, 122.941257, 116.014989, 121.209690,
+126.404391, 122.941257, 117.746556, 114.283422, 112.551855, 112.551855,
+114.283422, 114.283422, 116.014989, 116.014989, 116.014989, 116.014989,
+116.014989, 116.014989, 114.283422, 110.820288, 110.820288, 110.820288,
+110.820288,
+131.599092, 124.672824, 110.820288, 117.746556, 136.793793, 140.256927,
+138.525360, 138.525360, 102.162453, 117.746556, 103.894020, 102.162453,
+103.894020, 129.867525, 129.867525, 126.404391, 116.014989, 117.746556,
+126.404391, 124.672824, 117.746556, 114.283422, 112.551855, 109.088721,
+116.014989, 116.014989, 116.014989, 116.014989, 117.746556, 116.014989,
+116.014989, 114.283422, 112.551855, 110.820288, 112.551855, 112.551855,
+112.551855,
+136.793793, 124.672824, 109.088721, 114.283422, 126.404391, 138.525360,
+143.720061, 141.988494, 103.894020, 112.551855, 105.625587, 105.625587,
+103.894020, 114.283422, 129.867525, 129.867525, 112.551855, 121.209690,
+126.404391, 124.672824, 117.746556, 114.283422, 112.551855, 110.820288,
+117.746556, 116.014989, 117.746556, 117.746556, 117.746556, 116.014989,
+116.014989, 114.283422, 112.551855, 112.551855, 112.551855, 114.283422,
+112.551855,
+140.256927, 126.404391, 107.357154, 112.551855, 124.672824, 128.135958,
+141.988494, 147.183195, 114.283422, 102.162453, 107.357154, 103.894020,
+103.894020, 109.088721, 129.867525, 131.599092, 117.746556, 119.478123,
+124.672824, 124.672824, 117.746556, 114.283422, 114.283422, 112.551855,
+116.014989, 117.746556, 117.746556, 117.746556, 117.746556, 117.746556,
+114.283422, 114.283422, 110.820288, 114.283422, 112.551855, 114.283422,
+114.283422,
+145.451628, 128.135958, 110.820288, 110.820288, 121.209690, 122.941257,
+135.062226, 145.451628, 121.209690, 100.430886, 103.894020, 102.162453,
+102.162453, 109.088721, 129.867525, 138.525360, 126.404391, 116.014989,
+124.672824, 124.672824, 117.746556, 114.283422, 114.283422, 112.551855,
+114.283422, 117.746556, 117.746556, 117.746556, 117.746556, 117.746556,
+114.283422, 112.551855, 112.551855, 112.551855, 114.283422, 116.014989,
+117.746556,
+150.646329, 140.256927, 114.283422, 109.088721, 112.551855, 117.746556,
+131.599092, 131.599092, 129.867525, 102.162453, 100.430886, 102.162453,
+102.162453, 103.894020, 122.941257, 159.304164, 112.551855, 110.820288,
+128.135958, 124.672824, 119.478123, 116.014989, 112.551855, 112.551855,
+112.551855, 117.746556, 119.478123, 117.746556, 119.478123, 116.014989,
+112.551855, 112.551855, 112.551855, 112.551855, 116.014989, 117.746556,
+119.478123,
+148.914762, 148.914762, 126.404391, 110.820288, 107.357154, 116.014989,
+129.867525, 131.599092, 121.209690, 105.625587, 100.430886, 100.430886,
+102.162453, 103.894020, 140.256927, 117.746556, 102.162453, 109.088721,
+128.135958, 155.841030, 171.425133, 116.014989, 112.551855, 112.551855,
+110.820288, 116.014989, 117.746556, 117.746556, 117.746556, 116.014989,
+112.551855, 112.551855, 114.283422, 112.551855, 114.283422, 117.746556,
+117.746556,
+147.183195, 147.183195, 138.525360, 114.283422, 116.014989, 116.014989,
+140.256927, 128.135958, 107.357154, 109.088721, 102.162453, 100.430886,
+100.430886, 103.894020, 161.035731, 105.625587, 102.162453, 102.162453,
+117.746556, 199.130205, 131.599092, 116.014989, 114.283422, 110.820288,
+110.820288, 114.283422, 117.746556, 117.746556, 117.746556, 114.283422,
+112.551855, 112.551855, 114.283422, 112.551855, 110.820288, 112.551855,
+119.478123,
+155.841030, 150.646329, 143.720061, 122.941257, 128.135958, 133.330659,
+143.720061, 136.793793, 109.088721, 103.894020, 102.162453, 102.162453,
+100.430886, 100.430886, 155.841030, 105.625587, 102.162453, 102.162453,
+116.014989, 138.525360, 122.941257, 117.746556, 114.283422, 110.820288,
+109.088721, 109.088721, 117.746556, 117.746556, 117.746556, 114.283422,
+112.551855, 114.283422, 116.014989, 112.551855, 110.820288, 107.357154,
+150.646329,
+157.572597, 159.304164, 148.914762, 131.599092, 135.062226, 140.256927,
+147.183195, 141.988494, 116.014989, 102.162453, 102.162453, 102.162453,
+102.162453, 103.894020, 152.377896, 124.672824, 102.162453, 103.894020,
+128.135958, 138.525360, 121.209690, 116.014989, 114.283422, 110.820288,
+107.357154, 103.894020, 112.551855, 117.746556, 116.014989, 114.283422,
+112.551855, 116.014989, 114.283422, 110.820288, 107.357154, 102.162453,
+192.203937,
+145.451628, 145.451628, 150.646329, 147.183195, 150.646329, 147.183195,
+145.451628, 145.451628, 124.672824, 102.162453, 102.162453, 102.162453,
+102.162453, 102.162453, 126.404391, 122.941257, 107.357154, 102.162453,
+173.156700, 121.209690, 121.209690, 116.014989, 114.283422, 110.820288,
+103.894020, 100.430886, 100.430886, 116.014989, 117.746556, 114.283422,
+112.551855, 114.283422, 110.820288, 109.088721, 102.162453, 96.967752,
+226.835277,
+138.525360, 155.841030, 150.646329, 143.720061, 152.377896, 154.109463,
+145.451628, 143.720061, 131.599092, 110.820288, 102.162453, 102.162453,
+102.162453, 100.430886, 102.162453, 167.961999, 110.820288, 107.357154,
+122.941257, 117.746556, 121.209690, 126.404391, 114.283422, 109.088721,
+105.625587, 100.430886, 100.430886, 107.357154, 116.014989, 114.283422,
+110.820288, 112.551855, 109.088721, 109.088721, 105.625587, 98.699319,
+258.003483,
+148.914762, 157.572597, 159.304164, 150.646329, 147.183195, 152.377896,
+143.720061, 140.256927, 135.062226, 119.478123, 105.625587, 102.162453,
+102.162453, 102.162453, 102.162453, 105.625587, 143.720061, 124.672824,
+116.014989, 116.014989, 119.478123, 119.478123, 114.283422, 110.820288,
+105.625587, 124.672824, 96.967752, 98.699319, 110.820288, 110.820288,
+110.820288, 110.820288, 112.551855, 199.130205, 259.735050, 161.035731,
+261.466617,
+167.961999, 154.109463, 157.572597, 159.304164, 154.109463, 152.377896,
+128.135958, 138.525360, 135.062226, 122.941257, 112.551855, 102.162453,
+100.430886, 102.162453, 100.430886, 102.162453, 122.941257, 124.672824,
+116.014989, 121.209690, 121.209690, 119.478123, 116.014989, 110.820288,
+109.088721, 114.283422, 96.967752, 93.504618, 98.699319, 102.162453,
+110.820288, 150.646329, 240.687813, 280.513854, 277.050720, 221.640576,
+244.150947,
+162.767298, 166.230432, 167.961999, 162.767298, 154.109463, 141.988494,
+122.941257, 121.209690, 131.599092, 126.404391, 116.014989, 105.625587,
+102.162453, 102.162453, 100.430886, 102.162453, 105.625587, 122.941257,
+116.014989, 129.867525, 121.209690, 117.746556, 121.209690, 112.551855,
+109.088721, 109.088721, 102.162453, 96.967752, 93.504618, 95.236185,
+155.841030, 209.519607, 258.003483, 290.903256, 238.956246, 249.345648,
+271.856019,
+171.425133, 173.156700, 161.035731, 161.035731, 141.988494, 138.525360,
+121.209690, 107.357154, 121.209690, 124.672824, 116.014989, 109.088721,
+103.894020, 103.894020, 100.430886, 100.430886, 103.894020, 117.746556,
+121.209690, 121.209690, 119.478123, 117.746556, 136.793793, 117.746556,
+110.820288, 107.357154, 103.894020, 102.162453, 98.699319, 98.699319,
+152.377896, 207.788040, 261.466617, 280.513854, 266.661318, 258.003483,
+268.392885,
+178.351401, 171.425133, 164.498865, 162.767298, 145.451628, 126.404391,
+116.014989, 107.357154, 112.551855, 119.478123, 116.014989, 110.820288,
+109.088721, 110.820288, 109.088721, 102.162453, 103.894020, 112.551855,
+122.941257, 119.478123, 119.478123, 116.014989, 135.062226, 112.551855,
+109.088721, 105.625587, 102.162453, 105.625587, 103.894020, 117.746556,
+173.156700, 221.640576, 268.392885, 268.392885, 263.198184, 268.392885,
+283.976988,
+180.082968, 176.619834, 171.425133, 164.498865, 148.914762, 128.135958,
+116.014989, 105.625587, 105.625587, 114.283422, 112.551855, 109.088721,
+109.088721, 110.820288, 112.551855, 109.088721, 103.894020, 109.088721,
+121.209690, 119.478123, 116.014989, 116.014989, 116.014989, 112.551855,
+107.357154, 103.894020, 100.430886, 98.699319, 107.357154, 100.430886,
+122.941257, 202.593339, 259.735050, 266.661318, 271.856019, 268.392885,
+282.245421,
+180.082968, 174.888267, 171.425133, 157.572597, 145.451628, 128.135958,
+102.162453, 102.162453, 107.357154, 110.820288, 109.088721, 105.625587,
+107.357154, 110.820288, 110.820288, 110.820288, 105.625587, 103.894020,
+119.478123, 117.746556, 116.014989, 119.478123, 116.014989, 112.551855,
+107.357154, 102.162453, 100.430886, 98.699319, 98.699319, 96.967752,
+102.162453, 180.082968, 237.224679, 254.540349, 275.319153, 278.782287,
+273.587586,
+180.082968, 174.888267, 171.425133, 155.841030, 147.183195, 133.330659,
+103.894020, 98.699319, 103.894020, 107.357154, 107.357154, 107.357154,
+109.088721, 110.820288, 112.551855, 112.551855, 114.283422, 173.156700,
+116.014989, 116.014989, 119.478123, 119.478123, 116.014989, 112.551855,
+109.088721, 103.894020, 100.430886, 96.967752, 93.504618, 95.236185,
+96.967752, 133.330659, 211.251174, 245.882514, 287.440122, 271.856019,
+259.735050,
+180.082968, 174.888267, 167.961999, 159.304164, 133.330659, 136.793793,
+110.820288, 98.699319, 98.699319, 107.357154, 107.357154, 107.357154,
+110.820288, 112.551855, 114.283422, 112.551855, 199.130205, 238.956246,
+223.372143, 110.820288, 117.746556, 121.209690, 117.746556, 114.283422,
+110.820288, 103.894020, 100.430886, 96.967752, 91.773051, 91.773051,
+96.967752, 107.357154, 199.130205, 247.614081, 271.856019, 270.124452,
+275.319153
+};
+
+const size_t array_double2_size = sizeof(array_double2);
+
+/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tests/test_arrays.h tiff-3.9.2/tests/test_arrays.h
--- tiff-3.9.2.orig/tests/test_arrays.h	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tests/test_arrays.h	2012-01-14 14:38:26.156147400 +0100
@@ -0,0 +1,63 @@
+/* $Id: test_arrays.h,v 1.3 2006/03/23 14:54:02 dron Exp $ */
+
+/*
+ * Copyright (c) 2004, Andrey Kiselev  <dron@ak4719.spb.edu>
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and 
+ * its documentation for any purpose is hereby granted without fee, provided
+ * that (i) the above copyright notices and this permission notice appear in
+ * all copies of the software and related documentation, and (ii) the names of
+ * Sam Leffler and Silicon Graphics may not be used in any advertising or
+ * publicity relating to the software without the specific, prior written
+ * permission of Sam Leffler and Silicon Graphics.
+ * 
+ * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
+ * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
+ * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
+ * 
+ * IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+ * ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
+ * LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
+ * OF THIS SOFTWARE.
+ */
+
+/*
+ * TIFF Library
+ *
+ * Few declarations for the test numerical arrays.
+ */
+
+#ifndef _TEST_ARRAYS_ 
+#define _TEST_ARRAYS_
+
+#include <stddef.h>
+
+#define XSIZE 37
+#define YSIZE 23
+
+extern const unsigned char byte_array1[];
+extern const size_t byte_array1_size;
+
+extern const unsigned char byte_array2[];
+extern const size_t byte_array2_size;
+
+extern const unsigned char byte_array3[];
+extern const size_t byte_array3_size;
+
+extern const float array_float1[];
+extern const size_t array_float1_size;
+
+extern const float array_float2[];
+extern const size_t array_float2_size;
+
+extern const double array_double1[];
+extern const size_t array_double1_size;
+
+extern const double array_double2[];
+extern const size_t array_double2_size;
+
+#endif /* _TEST_ARRAYS_ */
+
+/* vim: set ts=8 sts=8 sw=8 noet: */
diff -Nru tiff-3.9.2.orig/tools/CMakeLists.txt tiff-3.9.2/tools/CMakeLists.txt
--- tiff-3.9.2.orig/tools/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ tiff-3.9.2/tools/CMakeLists.txt	2012-01-14 14:38:26.156147400 +0100
@@ -0,0 +1,137 @@
+
+#EXTRA_PROGRAMS = sgi2tiff sgisv ycbcr
+
+#if HAVE_RPATH
+#AM_LDFLAGS = $(LIBDIR)
+#endif
+
+include_directories(${CMAKE_BINARY_DIR}/libtiff ${CMAKE_SOURCE_DIR}/libtiff)
+
+set(bmp2tiff_SRCS bmp2tiff.c)
+add_executable(bmp2tiff ${bmp2tiff_SRCS})
+target_link_libraries(bmp2tiff tiff port)
+
+set(fax2ps_SRCS fax2ps.c)
+add_executable(fax2ps ${fax2ps_SRCS})
+target_link_libraries(fax2ps tiff port)
+
+set(fax2tiff_SRCS fax2tiff.c)
+add_executable(fax2tiff ${fax2tiff_SRCS})
+target_link_libraries(fax2tiff tiff port)
+
+set(gif2tiff_SRCS gif2tiff.c)
+add_executable(gif2tiff ${gif2tiff_SRCS})
+target_link_libraries(gif2tiff tiff port)
+
+set(pal2rgb_SRCS pal2rgb.c)
+add_executable(pal2rgb ${pal2rgb_SRCS})
+target_link_libraries(pal2rgb tiff port)
+
+set(ppm2tiff_SRCS ppm2tiff.c)
+add_executable(ppm2tiff ${ppm2tiff_SRCS})
+target_link_libraries(ppm2tiff tiff port)
+
+set(ras2tiff_SRCS ras2tiff.c rasterfile.h)
+add_executable(ras2tiff ${ras2tiff_SRCS})
+target_link_libraries(ras2tiff tiff port)
+
+set(raw2tiff_SRCS raw2tiff.c)
+add_executable(raw2tiff ${raw2tiff_SRCS})
+target_link_libraries(raw2tiff tiff port)
+
+set(rgb2ycbcr_SRCS rgb2ycbcr.c ../libtiff/tif_aux.c)
+add_executable(rgb2ycbcr ${rgb2ycbcr_SRCS})
+target_link_libraries(rgb2ycbcr tiff port)
+
+set(thumbnail_SRCS thumbnail.c)
+add_executable(thumbnail ${thumbnail_SRCS})
+target_link_libraries(thumbnail tiff port)
+
+set(tiff2bw_SRCS tiff2bw.c)
+add_executable(tiff2bw ${tiff2bw_SRCS})
+target_link_libraries(tiff2bw tiff port)
+
+set(tiff2pdf_SRCS tiff2pdf.c)
+add_executable(tiff2pdf ${tiff2pdf_SRCS})
+target_link_libraries(tiff2pdf tiff port)
+
+set(tiff2ps_SRCS tiff2ps.c)
+add_executable(tiff2ps ${tiff2ps_SRCS})
+target_link_libraries(tiff2ps tiff port)
+
+set(tiff2rgba_SRCS tiff2rgba.c ../libtiff/tif_aux.c)
+add_executable(tiff2rgba ${tiff2rgba_SRCS})
+target_link_libraries(tiff2rgba tiff port)
+
+set(tiffcmp_SRCS tiffcmp.c)
+add_executable(tiffcmp ${tiffcmp_SRCS})
+target_link_libraries(tiffcmp tiff port)
+
+set(tiffcp_SRCS tiffcp.c)
+add_executable(tiffcp ${tiffcp_SRCS})
+target_link_libraries(tiffcp tiff port)
+
+set(tiffcrop_SRCS tiffcrop.c)
+add_executable(tiffcrop ${tiffcrop_SRCS})
+target_link_libraries(tiffcrop tiff port)
+
+set(tiffdither_SRCS tiffdither.c)
+add_executable(tiffdither ${tiffdither_SRCS})
+target_link_libraries(tiffdither tiff port)
+
+set(tiffdump_SRCS tiffdump.c)
+add_executable(tiffdump ${tiffdump_SRCS})
+target_link_libraries(tiffdump tiff port)
+
+set(tiffinfo_SRCS tiffinfo.c)
+add_executable(tiffinfo ${tiffinfo_SRCS})
+target_link_libraries(tiffinfo tiff port)
+
+set(tiffmedian_SRCS tiffmedian.c)
+add_executable(tiffmedian ${tiffmedian_SRCS})
+target_link_libraries(tiffmedian tiff port)
+
+set(tiffset_SRCS tiffset.c)
+add_executable(tiffset ${tiffset_SRCS})
+target_link_libraries(tiffset tiff port)
+
+set(tiffsplit_SRCS tiffsplit.c)
+add_executable(tiffsplit ${tiffsplit_SRCS})
+target_link_libraries(tiffsplit tiff port)
+
+if(HAVE_OPENGL)
+    set(tiffgt_SRCS tiffgt.c)
+#    include_directories(${OpenGL_INCLUDE_DIR})
+    add_executable(tiffgt ${tiffgt_SRCS})
+    target_link_libraries(tiffgt tiff port ${OpenGL_LIBRARIES})
+endif(HAVE_OPENGL)
+
+set(tools
+bmp2tiff
+fax2ps
+fax2tiff
+gif2tiff
+pal2rgb
+ppm2tiff
+ras2tiff
+raw2tiff
+rgb2ycbcr
+thumbnail
+tiff2bw
+tiff2pdf
+tiff2ps
+tiff2rgba
+tiffcmp
+tiffcp
+tiffcrop
+tiffdither
+tiffdump
+tiffinfo
+tiffmedian
+tiffset
+tiffsplit
+)
+
+install(TARGETS ${tools} RUNTIME DESTINATION bin
+                         LIBRARY DESTINATION lib
+                         ARCHIVE DESTINATION lib)
\ Kein Zeilenumbruch am Dateiende.
diff -Nru tiff-3.9.2.orig/tools/tiff2ps.c tiff-3.9.2/tools/tiff2ps.c
--- tiff-3.9.2.orig/tools/tiff2ps.c	2009-01-12 17:25:18.000000000 +0100
+++ tiff-3.9.2/tools/tiff2ps.c	2012-01-14 14:38:26.156147400 +0100
@@ -574,7 +574,7 @@
            *   pages from each horizontal segment if the image is wider than pagewidth
            */
 
-          ximages = ceil (imagewidth / pagewidth);
+          ximages = (int)ceil (imagewidth / pagewidth);
           overlapspace = (ximages - 1) * overlap;
           if (((imagewidth + overlapspace) * (pageheight / splitheight)) > (ximages * pagewidth)) {
             ximages++;
@@ -607,7 +607,7 @@
 	    }
 	  }
         } else {  /* splitaxis is HORIZONTAL */
-          ximages = ceil (imagewidth / splitwidth);
+          ximages = (int)ceil (imagewidth / splitwidth);
           overlapspace = (ximages - 1) * overlap;
           if (((imagewidth + overlapspace) * (pagewidth / splitwidth)) > (ximages * pagewidth)) {
             ximages++;
diff -Nru tiff-3.9.2.orig/tools/tiffcrop.c tiff-3.9.2/tools/tiffcrop.c
--- tiff-3.9.2.orig/tools/tiffcrop.c	2009-11-03 16:24:12.000000000 +0100
+++ tiff-3.9.2/tools/tiffcrop.c	2012-01-14 14:38:26.166147800 +0100
@@ -2904,9 +2904,9 @@
         }
       else /* If we have a full buffer's worth, write it out */
         {
-        bytebuff1 = (buff2 >> 24);
+        bytebuff1 = (uint8)(buff2 >> 24);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 16);
+        bytebuff2 = (uint8)(buff2 >> 16);
         *dst++ = bytebuff2;
         ready_bits -= 16;
 
@@ -2920,7 +2920,7 @@
   /* catch any trailing bits at the end of the line */
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 24);
+    bytebuff1 = (uint8)(buff2 >> 24);
     *dst++ = bytebuff1;
 
     buff2 = (buff2 << 8);
@@ -3004,13 +3004,13 @@
       /* If we have a full buffer's worth, write it out */
       if (ready_bits >= 32)
         {
-        bytebuff1 = (buff2 >> 56);
+        bytebuff1 = (uint8)(buff2 >> 56);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 48);
+        bytebuff2 = (uint8)(buff2 >> 48);
         *dst++ = bytebuff2;
-        bytebuff3 = (buff2 >> 40);
+        bytebuff3 = (uint8)(buff2 >> 40);
         *dst++ = bytebuff3;
-        bytebuff4 = (buff2 >> 32);
+        bytebuff4 = (uint8)(buff2 >> 32);
         *dst++ = bytebuff4;
         ready_bits -= 32;
                     
@@ -3027,7 +3027,7 @@
     }
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 56);
+    bytebuff1 = (uint8)(buff2 >> 56);
     *dst++ = bytebuff1;
     buff2 = (buff2 << 8);
     ready_bits -= 8;
@@ -3277,9 +3277,9 @@
         }
       else /* If we have a full buffer's worth, write it out */
         {
-        bytebuff1 = (buff2 >> 24);
+        bytebuff1 = (uint8)(buff2 >> 24);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 16);
+        bytebuff2 = (uint8)(buff2 >> 16);
         *dst++ = bytebuff2;
         ready_bits -= 16;
 
@@ -3293,7 +3293,7 @@
   /* catch any trailing bits at the end of the line */
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 24);
+    bytebuff1 = (uint8)(buff2 >> 24);
     *dst++ = bytebuff1;
 
     buff2 = (buff2 << 8);
@@ -3385,13 +3385,13 @@
         }
       else  /* If we have a full buffer's worth, write it out */
         {
-        bytebuff1 = (buff2 >> 56);
+        bytebuff1 = (uint8)(buff2 >> 56);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 48);
+        bytebuff2 = (uint8)(buff2 >> 48);
         *dst++ = bytebuff2;
-        bytebuff3 = (buff2 >> 40);
+        bytebuff3 = (uint8)(buff2 >> 40);
         *dst++ = bytebuff3;
-        bytebuff4 = (buff2 >> 32);
+        bytebuff4 = (uint8)(buff2 >> 32);
         *dst++ = bytebuff4;
         ready_bits -= 32;
                     
@@ -3403,7 +3403,7 @@
     }
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 56);
+    bytebuff1 = (uint8)(buff2 >> 56);
     *dst++ = bytebuff1;
     buff2 = (buff2 << 8);
     ready_bits -= 8;
@@ -3917,9 +3917,9 @@
 	/* If we have a full buffer's worth, write it out */
 	if (ready_bits >= 16)
 	  {
-	    bytebuff1 = (buff2 >> 24);
+	    bytebuff1 = (uint8)(buff2 >> 24);
 	    *dst++ = bytebuff1;
-	    bytebuff2 = (buff2 >> 16);
+	    bytebuff2 = (uint8)(buff2 >> 16);
 	    *dst++ = bytebuff2;
 	    ready_bits -= 16;
 
@@ -3954,7 +3954,7 @@
     /* catch any trailing bits at the end of the line */
     while (ready_bits > 0)
       {
-	bytebuff1 = (buff2 >> 24);
+	bytebuff1 = (uint8)(buff2 >> 24);
 	*dst++ = bytebuff1;
 
 	buff2 = (buff2 << 8);
@@ -4050,13 +4050,13 @@
 	/* If we have a full buffer's worth, write it out */
 	if (ready_bits >= 32)
 	  {
-	  bytebuff1 = (buff2 >> 56);
+	  bytebuff1 = (uint8)(buff2 >> 56);
 	  *dst++ = bytebuff1;
-	  bytebuff2 = (buff2 >> 48);
+	  bytebuff2 = (uint8)(buff2 >> 48);
 	  *dst++ = bytebuff2;
-	  bytebuff3 = (buff2 >> 40);
+	  bytebuff3 = (uint8)(buff2 >> 40);
 	  *dst++ = bytebuff3;
-	  bytebuff4 = (buff2 >> 32);
+	  bytebuff4 = (uint8)(buff2 >> 32);
 	  *dst++ = bytebuff4;
 	  ready_bits -= 32;
                     
@@ -4077,17 +4077,17 @@
 	  dump_info (dumpfile, format, "",
 		     "Row %3d, Col %3d, Sample %d, Src byte offset %3d  bit offset %2d  Dst offset %3d",
 		     row + 1, col + 1, s, src_byte, src_bit, dst - out);
-	  dump_wide (dumpfile, format, "Match bits ", matchbits);
+	  dump_wide (dumpfile, format, "Match bits ", (uint32)matchbits);
 	  dump_data (dumpfile, format, "Src   bits ", src, 8);
-	  dump_wide (dumpfile, format, "Buff1 bits ", buff1);
-	  dump_wide (dumpfile, format, "Buff2 bits ", buff2);
+	  dump_wide (dumpfile, format, "Buff1 bits ", (uint32)buff1);
+	  dump_wide (dumpfile, format, "Buff2 bits ", (uint32)buff2);
 	  dump_info (dumpfile, format, "", "Ready bits:   %d, %s", ready_bits, action); 
 	  }
 	}
       }
     while (ready_bits > 0)
       {
-      bytebuff1 = (buff2 >> 56);
+      bytebuff1 = (uint8)(buff2 >> 56);
       *dst++ = bytebuff1;
       buff2 = (buff2 << 8);
       ready_bits -= 8;
@@ -4099,10 +4099,10 @@
 	         "Row %3d, Col %3d, Src byte offset %3d  bit offset %2d  Dst offset %3d",
 		 row + 1, col + 1, src_byte, src_bit, dst - out);
 
-      dump_long (dumpfile, format, "Match bits ", matchbits);
+      dump_long (dumpfile, format, "Match bits ", (uint32)matchbits);
       dump_data (dumpfile, format, "Src   bits ", src, 4);
-      dump_long (dumpfile, format, "Buff1 bits ", buff1);
-      dump_long (dumpfile, format, "Buff2 bits ", buff2);
+      dump_long (dumpfile, format, "Buff1 bits ", (uint32)buff1);
+      dump_long (dumpfile, format, "Buff2 bits ", (uint32)buff2);
       dump_byte (dumpfile, format, "Write bits1", bytebuff1);
       dump_byte (dumpfile, format, "Write bits2", bytebuff2);
       dump_info (dumpfile, format, "", "Ready bits:  %2d", ready_bits); 
@@ -4441,9 +4441,9 @@
 	/* If we have a full buffer's worth, write it out */
 	if (ready_bits >= 16)
 	  {
-	    bytebuff1 = (buff2 >> 24);
+	    bytebuff1 = (uint8)(buff2 >> 24);
 	    *dst++ = bytebuff1;
-	    bytebuff2 = (buff2 >> 16);
+	    bytebuff2 = (uint8)(buff2 >> 16);
 	    *dst++ = bytebuff2;
 	    ready_bits -= 16;
 
@@ -4478,7 +4478,7 @@
     /* catch any trailing bits at the end of the line */
     while (ready_bits > 0)
       {
-	bytebuff1 = (buff2 >> 24);
+	bytebuff1 = (uint8)(buff2 >> 24);
 	*dst++ = bytebuff1;
 
 	buff2 = (buff2 << 8);
@@ -4575,13 +4575,13 @@
 	/* If we have a full buffer's worth, write it out */
 	if (ready_bits >= 32)
 	  {
-	  bytebuff1 = (buff2 >> 56);
+	  bytebuff1 = (uint8)(buff2 >> 56);
 	  *dst++ = bytebuff1;
-	  bytebuff2 = (buff2 >> 48);
+	  bytebuff2 = (uint8)(buff2 >> 48);
 	  *dst++ = bytebuff2;
-	  bytebuff3 = (buff2 >> 40);
+	  bytebuff3 = (uint8)(buff2 >> 40);
 	  *dst++ = bytebuff3;
-	  bytebuff4 = (buff2 >> 32);
+	  bytebuff4 = (uint8)(buff2 >> 32);
 	  *dst++ = bytebuff4;
 	  ready_bits -= 32;
                     
@@ -4612,7 +4612,7 @@
       }
     while (ready_bits > 0)
       {
-      bytebuff1 = (buff2 >> 56);
+      bytebuff1 = (uint8)(buff2 >> 56);
       *dst++ = bytebuff1;
       buff2 = (buff2 << 8);
       ready_bits -= 8;
@@ -4624,10 +4624,10 @@
 	         "Row %3d, Col %3d, Src byte offset %3d  bit offset %2d  Dst offset %3d",
 		 row + 1, col + 1, src_byte, src_bit, dst - out);
 
-      dump_long (dumpfile, format, "Match bits ", matchbits);
+      dump_long (dumpfile, format, "Match bits ", (uint32)matchbits);
       dump_data (dumpfile, format, "Src   bits ", src, 4);
-      dump_long (dumpfile, format, "Buff1 bits ", buff1);
-      dump_long (dumpfile, format, "Buff2 bits ", buff2);
+      dump_long (dumpfile, format, "Buff1 bits ", (uint32)buff1);
+      dump_long (dumpfile, format, "Buff2 bits ", (uint32)buff2);
       dump_byte (dumpfile, format, "Write bits1", bytebuff1);
       dump_byte (dumpfile, format, "Write bits2", bytebuff2);
       dump_info (dumpfile, format, "", "Ready bits:  %2d", ready_bits); 
@@ -5501,12 +5501,12 @@
   if (page->width <= 0)
     pwidth = iwidth;
   else
-    pwidth = page->width;
+    pwidth = (uint32)page->width;
 
   if (page->length <= 0)
     plength = ilength;
   else
-    plength = page->length;
+    plength = (uint32)page->length;
 
   if (dump->debug)
     {
@@ -7876,9 +7876,9 @@
       /* If we have a full buffer's worth, write it out */
       if (ready_bits >= 16)
         {
-        bytebuff1 = (buff2 >> 24);
+        bytebuff1 = (uint8)(buff2 >> 24);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 16);
+        bytebuff2 = (uint8)(buff2 >> 16);
         *dst++ = bytebuff2;
         ready_bits -= 16;
 
@@ -7897,7 +7897,7 @@
  /* catch any trailing bits at the end of the line */
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 24);
+    bytebuff1 = (uint8)(buff2 >> 24);
     *dst++ = bytebuff1;
 
     buff2 = (buff2 << 8);
@@ -7988,13 +7988,13 @@
         }
       else /* If we have a full buffer's worth, write it out */
         {
-        bytebuff1 = (buff2 >> 56);
+        bytebuff1 = (uint8)(buff2 >> 56);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 48);
+        bytebuff2 = (uint8)(buff2 >> 48);
         *dst++ = bytebuff2;
-        bytebuff3 = (buff2 >> 40);
+        bytebuff3 = (uint8)(buff2 >> 40);
         *dst++ = bytebuff3;
-        bytebuff4 = (buff2 >> 32);
+        bytebuff4 = (uint8)(buff2 >> 32);
         *dst++ = bytebuff4;
         ready_bits -= 32;
                     
@@ -8006,7 +8006,7 @@
     }
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 56);
+    bytebuff1 = (uint8)(buff2 >> 56);
     *dst++ = bytebuff1;
     buff2 = (buff2 << 8);
     ready_bits -= 8;
@@ -8495,9 +8495,9 @@
         }
       else /* If we have a full buffer's worth, write it out */
         {
-        bytebuff1 = (buff2 >> 24);
+        bytebuff1 = (uint8)(buff2 >> 24);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 16);
+        bytebuff2 = (uint8)(buff2 >> 16);
         *dst++ = bytebuff2;
         ready_bits -= 16;
 
@@ -8511,7 +8511,7 @@
  /* catch any trailing bits at the end of the line */
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 24);
+    bytebuff1 = (uint8)(buff2 >> 24);
     *dst++ = bytebuff1;
 
     buff2 = (buff2 << 8);
@@ -8596,13 +8596,13 @@
         }
       else /* If we have a full buffer's worth, write it out */
         {
-        bytebuff1 = (buff2 >> 56);
+        bytebuff1 = (uint8)(buff2 >> 56);
         *dst++ = bytebuff1;
-        bytebuff2 = (buff2 >> 48);
+        bytebuff2 = (uint8)(buff2 >> 48);
         *dst++ = bytebuff2;
-        bytebuff3 = (buff2 >> 40);
+        bytebuff3 = (uint8)(buff2 >> 40);
         *dst++ = bytebuff3;
-        bytebuff4 = (buff2 >> 32);
+        bytebuff4 = (uint8)(buff2 >> 32);
         *dst++ = bytebuff4;
         ready_bits -= 32;
                     
@@ -8614,7 +8614,7 @@
     }
   while (ready_bits > 0)
     {
-    bytebuff1 = (buff2 >> 56);
+    bytebuff1 = (uint8)(buff2 >> 56);
     *dst++ = bytebuff1;
     buff2 = (buff2 << 8);
     ready_bits -= 8;

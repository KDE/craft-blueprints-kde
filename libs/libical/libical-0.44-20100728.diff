diff -Nru libical-0.44.orig/cmake/modules/FindWcecompat.cmake libical-0.44/cmake/modules/FindWcecompat.cmake
--- libical-0.44.orig/cmake/modules/FindWcecompat.cmake	1970-01-01 01:00:00.000000000 +0100
+++ libical-0.44/cmake/modules/FindWcecompat.cmake	2010-11-20 12:20:34.120736800 +0100
@@ -0,0 +1,33 @@
+# Try to find Wcecompat functionality
+# Once done this will define
+#
+#  WCECOMPAT_FOUND - system has Wcecompat
+#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory
+#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat
+#
+# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+  set(Wcecompat_FIND_QUIETLY TRUE)
+endif(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+
+find_path(WCECOMPAT_INCLUDE_DIR errno.h PATH_SUFFIXES wcecompat)
+
+set(WCECOMPAT_LIB_FOUND FALSE)
+
+if(WCECOMPAT_INCLUDE_DIR)
+    find_library(WCECOMPAT_LIBRARIES NAMES wcecompat wcecompatex )
+    if(WCECOMPAT_LIBRARIES)
+      set(WCECOMPAT_LIB_FOUND TRUE)
+    endif(WCECOMPAT_LIBRARIES)
+endif(WCECOMPAT_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(WCECOMPAT_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Wcecompat  DEFAULT_MSG  WCECOMPAT_LIBRARIES  WCECOMPAT_LIB_FOUND)
+
+mark_as_advanced(WCECOMPAT_INCLUDE_DIR  WCECOMPAT_LIBRARIES  WCECOMPAT_CONST  WCECOMPAT_LIB_FOUND)
diff -Nru libical-0.44.orig/CMakeLists.txt libical-0.44/CMakeLists.txt
--- libical-0.44.orig/CMakeLists.txt	2009-09-27 04:38:55.000000000 +0200
+++ libical-0.44/CMakeLists.txt	2010-11-20 12:20:34.120736800 +0100
@@ -27,6 +27,15 @@
 #cannot use the following line with cmake 2.4.x
 #cmake_policy(VERSION 2.6)
 
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
+
+if(WINCE)
+    find_package(Wcecompat REQUIRED)
+    include_directories(${WCECOMPAT_INCLUDE_DIR})
+    set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${WCECOMPAT_INCLUDE_DIR})
+    set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
 set(LIBICAL_LIB_MAJOR_VERSION "0")
 set(LIBICAL_LIB_MINOR_VERSION "44")
 set(LIBICAL_LIB_PATCH_VERSION "0")
@@ -35,13 +44,21 @@
 set(PROJECT_VERSION "${LIBICAL_LIB_MAJOR_VERSION}.${LIBICAL_LIB_MINOR_VERSION}")
 set(PROJECT_URL "http://freeassociation.sf.net/")
 
+if(STATIC_LIBRARY)
+    set(LIBICAL_STATIC 1)
+    add_definitions(-DLIBICAL_STATIC)
+    set(LIBRARY_TYPE STATIC)
+else(STATIC_LIBRARY)
+    set(LIBRARY_TYPE SHARED)
+endif(STATIC_LIBRARY)
+
 # must have Perl to create the derived stuff
 find_package(Perl REQUIRED)
 
 # make msvc less verbose
 if(WIN32)
   if(MSVC)
-    add_definitions(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE)
+    add_definitions(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -DYY_NO_UNISTD_H)
   endif(MSVC)
   add_definitions(-DBIG_ENDIAN=0 -DLITTLE_ENDIAN=1 -DBYTE_ORDER=BIG_ENDIAN)
 endif(WIN32)
diff -Nru libical-0.44.orig/config.h.cmake libical-0.44/config.h.cmake
--- libical-0.44.orig/config.h.cmake	2009-09-27 04:38:55.000000000 +0200
+++ libical-0.44/config.h.cmake	2010-11-20 12:20:34.136336800 +0100
@@ -158,3 +158,9 @@
 #define strcasecmp stricmp
 #define snprintf _snprintf
 #endif
+
+#cmakedefine HAVE_PID_T 1
+#if !HAVE_PID_T
+typedef int pid_t;
+#endif
+
diff -Nru libical-0.44.orig/ConfigureChecks.cmake libical-0.44/ConfigureChecks.cmake
--- libical-0.44.orig/ConfigureChecks.cmake	2009-09-27 04:38:55.000000000 +0200
+++ libical-0.44/ConfigureChecks.cmake	2010-11-20 12:20:34.136336800 +0100
@@ -32,6 +32,7 @@
 check_type_size(mode_t SIZEOF_MODE_T)
 check_type_size(size_t SIZEOF_SIZE_T)
 check_type_size(intptr_t INTPTR_T) # please do not rename HAVE_INTPTR_T will automatically be defined
+check_type_size(pid_t HAVE_PID_T)
 
 include(FindThreads)
 check_library_exists(pthread pthread_attr_get_np "" HAVE_PTHREAD_ATTR_GET_NP)
diff -Nru libical-0.44.orig/src/ical.def libical-0.44/src/ical.def
--- libical-0.44.orig/src/ical.def	2009-09-27 04:38:53.000000000 +0200
+++ libical-0.44/src/ical.def	2010-11-20 12:20:34.151936900 +0100
@@ -1,4 +1,4 @@
-LIBRARY ical.dll
+LIBRARY libical.dll
 EXPORTS
 caldat
 compare_map DATA
diff -Nru libical-0.44.orig/src/ical.h libical-0.44/src/ical.h
--- libical-0.44.orig/src/ical.h	2009-09-27 04:38:53.000000000 +0200
+++ libical-0.44/src/ical.h	2010-11-20 12:20:34.151936900 +0100
@@ -18,6 +18,9 @@
     the License at http://www.mozilla.org/MPL/
 
  ************************************************************************/
-
+#ifdef _MSC_VER
+#pragma message("WARNING: #include <ical.h> is deprecated.  Please #include <libical/ical.h> instead.")
+#else
 #warning "#include <ical.h> is deprecated.  Please #include <libical/ical.h> instead."
+#endif
 #include <libical/ical.h>
diff -Nru libical-0.44.orig/src/icalss.def libical-0.44/src/icalss.def
--- libical-0.44.orig/src/icalss.def	2009-09-27 04:38:53.000000000 +0200
+++ libical-0.44/src/icalss.def	2010-11-20 12:20:34.151936900 +0100
@@ -1,4 +1,4 @@
-LIBRARY icalss.dll
+LIBRARY libicalss.dll
 EXPORTS
 icalcalendar_create
 icalcalendar_free
@@ -179,8 +179,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
@@ -379,8 +377,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
@@ -579,8 +575,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
@@ -779,8 +773,6 @@
 ss_create_buffer
 ss_delete_buffer
 ss_flush_buffer
-ss_init_buffer
-ss_load_buffer_state
 ss_scan_buffer
 ss_scan_bytes
 ss_scan_string
diff -Nru libical-0.44.orig/src/icalvcal.def libical-0.44/src/icalvcal.def
--- libical-0.44.orig/src/icalvcal.def	2009-09-27 04:38:53.000000000 +0200
+++ libical-0.44/src/icalvcal.def	2010-11-20 12:20:34.151936900 +0100
@@ -1,4 +1,4 @@
-LIBRARY icalvcal.dll
+LIBRARY libicalvcal.dll
 EXPORTS
 Parse_MIME
 Parse_MIME_FromFile
diff -Nru libical-0.44.orig/src/java/CMakeLists.txt libical-0.44/src/java/CMakeLists.txt
--- libical-0.44.orig/src/java/CMakeLists.txt	2009-09-27 04:38:49.000000000 +0200
+++ libical-0.44/src/java/CMakeLists.txt	2010-11-20 12:20:34.167536900 +0100
@@ -25,7 +25,7 @@
    net_cp_jlibical_VComponent_cxx.h
 )
 
-add_library(ical_jni SHARED ${ical_jni_LIB_SRCS})
+add_library(ical_jni ${LIBRARY_TYPE} ${ical_jni_LIB_SRCS})
 
 target_link_libraries(ical_jni ical_cxx)
 
diff -Nru libical-0.44.orig/src/libical/CMakeLists.txt libical-0.44/src/libical/CMakeLists.txt
--- libical-0.44.orig/src/libical/CMakeLists.txt	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/CMakeLists.txt	2010-11-20 12:29:07.831295800 +0100
@@ -2,11 +2,20 @@
 
 include_directories(
   ${CMAKE_BINARY_DIR}
+  ${CMAKE_BINARY_DIR}/src
   ${CMAKE_SOURCE_DIR}/src
-  ${CMAKE_SOURCE_DIR}/src/libical
   ${CMAKE_BINARY_DIR}/src/libical
+  ${CMAKE_SOURCE_DIR}/src/libical
 )
 
+if(WIN32)
+  if(MSVC)
+    add_definitions(-DBUILD_LIBICALDLL)
+  endif(MSVC)
+endif(WIN32)
+
+configure_file(icalerror.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/icalerror.h)
+
 set(PACKAGE_DATA_DIR "\\\"${CMAKE_INSTALL_PREFIX}/share/libical\\\"")
 add_definitions(-DPACKAGE_DATA_DIR=${PACKAGE_DATA_DIR})
 
@@ -147,6 +156,7 @@
 )
 
 add_custom_target(ical-header DEPENDS
+  ${CMAKE_SOURCE_DIR}/design-data/restrictions.csv
   ${CMAKE_BINARY_DIR}/src/libical/ical.h
 )
 
@@ -178,7 +188,6 @@
    icalenums.c
    icalenums.h
    icalerror.c
-   icalerror.h
    icalmemory.c
    icalmemory.h
    icalmime.c
@@ -225,16 +234,26 @@
   endif(MSVC)
 endif(NOT WIN32)
 
-add_library(ical SHARED ${ical_LIB_SRCS})
+add_library(ical ${LIBRARY_TYPE} ${ical_LIB_SRCS})
 add_library(ical-static STATIC ${ical_LIB_SRCS})
 
 add_dependencies(ical ical-header)
+add_dependencies(ical-static ical-header)
 
 target_link_libraries(ical ${CMAKE_THREAD_LIBS_INIT})
 
+if (WINCE)
+target_link_libraries(ical ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
+if(MSVC)
+  set_target_properties(ical PROPERTIES OUTPUT_NAME "libical")
+  set_target_properties(ical-static PROPERTIES OUTPUT_NAME "libical-static")
+else(MSVC)
+  set_target_properties(ical-static PROPERTIES OUTPUT_NAME "ical")
+endif(MSVC)
 set_target_properties(ical PROPERTIES VERSION ${LIBICAL_LIB_VERSION_STRING} SOVERSION ${LIBICAL_LIB_MAJOR_VERSION})
 set_target_properties(ical PROPERTIES CLEAN_DIRECT_OUTPUT 1)
-set_target_properties(ical-static PROPERTIES OUTPUT_NAME "ical")
 set_target_properties(ical-static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
 
 install(TARGETS ical ical-static ${INSTALL_TARGETS_DEFAULT_ARGS})
@@ -253,7 +272,7 @@
   ${CMAKE_BINARY_DIR}/src/libical/icalderivedvalue.h
   icalduration.h
   icalenums.h
-  icalerror.h
+  ${CMAKE_BINARY_DIR}/src/libical/icalerror.h
   icallangbind.h
   icalmemory.h
   icalmime.h
diff -Nru libical-0.44.orig/src/libical/ical_file.cmake libical-0.44/src/libical/ical_file.cmake
--- libical-0.44.orig/src/libical/ical_file.cmake	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/ical_file.cmake	2010-11-20 12:20:34.167536900 +0100
@@ -21,7 +21,7 @@
    ${TOPS}/src/libical/icaltimezone.h
    ${TOPS}/src/libical/icalparser.h
    ${TOPS}/src/libical/icalmemory.h
-   ${TOPS}/src/libical/icalerror.h
+   ${TOPB}/src/libical/icalerror.h
    ${TOPS}/src/libical/icalrestriction.h
    ${TOPS}/src/libical/sspm.h
    ${TOPS}/src/libical/icalmime.h
diff -Nru libical-0.44.orig/src/libical/icalerror.h libical-0.44/src/libical/icalerror.h
--- libical-0.44.orig/src/libical/icalerror.h	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/icalerror.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,163 +0,0 @@
-/* -*- Mode: C -*- */
-/*======================================================================
-  FILE: icalerror.h
-  CREATOR: eric 09 May 1999
-  
-  $Id: icalerror.h,v 1.17 2008-01-15 23:17:40 dothebart Exp $
-
-
- (C) COPYRIGHT 2000, Eric Busboom <eric@softwarestudio.org>
-     http://www.softwarestudio.org
-
- This program is free software; you can redistribute it and/or modify
- it under the terms of either: 
-
-    The LGPL as published by the Free Software Foundation, version
-    2.1, available at: http://www.fsf.org/copyleft/lesser.html
-
-  Or:
-
-    The Mozilla Public License Version 1.0. You may obtain a copy of
-    the License at http://www.mozilla.org/MPL/
-
-  The original code is icalerror.h
-
-======================================================================*/
-
-
-#ifndef ICALERROR_H
-#define ICALERROR_H
-
-#include <assert.h>
-#include <stdio.h> /* For icalerror_warn() */
-
-
-#ifdef HAVE_CONFIG_H
-#include "config.h"
-#endif
-
-#define ICAL_SETERROR_ISFUNC
-
-
-/** This routine is called before any error is triggered. It is called
-   by icalerror_set_errno, so it does not appear in all of the macros
-   below */
-void icalerror_stop_here(void);
-
-void icalerror_crash_here(void);
-
-typedef enum icalerrorenum {
-    ICAL_NO_ERROR,     /* icalerrno may not be initialized - put it first so and pray that the compiler initialize things to zero */    
-    ICAL_BADARG_ERROR,
-    ICAL_NEWFAILED_ERROR,
-    ICAL_ALLOCATION_ERROR,
-    ICAL_MALFORMEDDATA_ERROR, 
-    ICAL_PARSE_ERROR,
-    ICAL_INTERNAL_ERROR, /* Like assert --internal consist. prob */
-    ICAL_FILE_ERROR,
-    ICAL_USAGE_ERROR,
-    ICAL_UNIMPLEMENTED_ERROR,
-    ICAL_UNKNOWN_ERROR  /* Used for problems in input to icalerror_strerror()*/
-
-} icalerrorenum;
-
-icalerrorenum * icalerrno_return(void);
-#define icalerrno (*(icalerrno_return()))
-
-/** If true, libicl aborts after a call to icalerror_set_error
- *
- *  @warning NOT THREAD SAFE -- recommended that you do not change
- *           this in a multithreaded program.
- */
-extern int icalerror_errors_are_fatal;
-
-/* Warning messages */
-
-#ifdef __GNUC__ca
-#define icalerror_warn(message) {fprintf(stderr,"%s(), %s:%d: %s\n",__FUNCTION__,__FILE__,__LINE__,message);}
-#else /* __GNU_C__ */
-#define icalerror_warn(message) {fprintf(stderr,"%s:%d: %s\n",__FILE__,__LINE__,message);}
-#endif /* __GNU_C__ */
-
-
-void icalerror_clear_errno(void);
-void _icalerror_set_errno(icalerrorenum);
-
-/* Make an individual error fatal or non-fatal. */
-typedef enum icalerrorstate { 
-    ICAL_ERROR_FATAL,     /* Not fata */
-    ICAL_ERROR_NONFATAL,  /* Fatal */
-    ICAL_ERROR_DEFAULT,   /* Use the value of icalerror_errors_are_fatal*/
-    ICAL_ERROR_UNKNOWN    /* Asked state for an unknown error type */
-} icalerrorstate ;
-
-const char* icalerror_strerror(icalerrorenum e);
-const char* icalerror_perror(void);
-void ical_bt(void);
-void icalerror_set_error_state( icalerrorenum error, icalerrorstate);
-icalerrorstate icalerror_get_error_state( icalerrorenum error);
-
-#ifndef ICAL_SETERROR_ISFUNC
-#define icalerror_set_errno(x) \
-icalerrno = x; \
-if(icalerror_get_error_state(x)==ICAL_ERROR_FATAL || \
-   (icalerror_get_error_state(x)==ICAL_ERROR_DEFAULT && \
-    icalerror_errors_are_fatal == 1 )){ \
-   icalerror_warn(icalerror_strerror(x)); \
-   ical_bt(); \
-   assert(0); \
-} }
-#else
-void icalerror_set_errno(icalerrorenum x); 
-#endif
-
-#ifdef ICAL_ERRORS_ARE_FATAL
-#undef NDEBUG
-#endif
-
-#define icalerror_check_value_type(value,type);
-#define icalerror_check_property_type(value,type);
-#define icalerror_check_parameter_type(value,type);
-#define icalerror_check_component_type(value,type);
-
-/* Assert with a message */
-#ifdef ICAL_ERRORS_ARE_FATAL
-
-#ifdef __GNUC__
-#define icalerror_assert(test,message) if(!(test)){fprintf(stderr,"%s(), %s:%d: %s\n",__FUNCTION__,__FILE__,__LINE__,message);icalerror_stop_here(); abort();}
-#else /*__GNUC__*/
-#define icalerror_assert(test,message) if(!(test)){fprintf(stderr,"%s:%d: %s\n",__FILE__,__LINE__,message);icalerror_stop_here(); abort();}
-#endif /*__GNUC__*/
-
-#else /* ICAL_ERRORS_ARE_FATAL */
-#define icalerror_assert(test,message) 
-#endif /* ICAL_ERRORS_ARE_FATAL */
-
-/* Check & abort if check fails */
-#define icalerror_check_arg(test,arg) if(!(test)) { icalerror_set_errno(ICAL_BADARG_ERROR); }
-
-/* Check & return void if check fails*/
-#define icalerror_check_arg_rv(test,arg) if(!(test)) {icalerror_set_errno(ICAL_BADARG_ERROR); return; }
-
-/* Check & return 0 if check fails*/
-#define icalerror_check_arg_rz(test,arg) if(!(test)) { icalerror_set_errno(ICAL_BADARG_ERROR); return 0;}
-
-/* Check & return an error if check fails*/
-#define icalerror_check_arg_re(test,arg,error) if(!(test)) { icalerror_stop_here(); assert(0); return error;}
-
-/* Check & return something*/
-#define icalerror_check_arg_rx(test,arg,x) if(!(test)) { icalerror_set_errno(ICAL_BADARG_ERROR); return x;}
-
-
-
-/* String interfaces to set an error to NONFATAL and restore it to its
-   original value */
-
-icalerrorstate icalerror_supress(const char* error);
-void icalerror_restore(const char* error, icalerrorstate es);
-
-
-#endif /* !ICALERROR_H */
-
-
-
diff -Nru libical-0.44.orig/src/libical/icalerror.h.cmake libical-0.44/src/libical/icalerror.h.cmake
--- libical-0.44.orig/src/libical/icalerror.h.cmake	1970-01-01 01:00:00.000000000 +0100
+++ libical-0.44/src/libical/icalerror.h.cmake	2010-11-20 12:20:34.183136900 +0100
@@ -0,0 +1,177 @@
+/* -*- Mode: C -*- */
+/*======================================================================
+  FILE: icalerror.h
+  CREATOR: eric 09 May 1999
+  
+  $Id: icalerror.h,v 1.17 2008-01-15 23:17:40 dothebart Exp $
+
+
+ (C) COPYRIGHT 2000, Eric Busboom <eric@softwarestudio.org>
+     http://www.softwarestudio.org
+
+ This program is free software; you can redistribute it and/or modify
+ it under the terms of either: 
+
+    The LGPL as published by the Free Software Foundation, version
+    2.1, available at: http://www.fsf.org/copyleft/lesser.html
+
+  Or:
+
+    The Mozilla Public License Version 1.0. You may obtain a copy of
+    the License at http://www.mozilla.org/MPL/
+
+  The original code is icalerror.h
+
+======================================================================*/
+
+
+#ifndef ICALERROR_H
+#define ICALERROR_H
+
+#include <assert.h>
+#include <stdio.h> /* For icalerror_warn() */
+
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#define ICAL_SETERROR_ISFUNC
+
+
+/** This routine is called before any error is triggered. It is called
+   by icalerror_set_errno, so it does not appear in all of the macros
+   below */
+void icalerror_stop_here(void);
+
+void icalerror_crash_here(void);
+
+typedef enum icalerrorenum {
+    ICAL_NO_ERROR,     /* icalerrno may not be initialized - put it first so and pray that the compiler initialize things to zero */    
+    ICAL_BADARG_ERROR,
+    ICAL_NEWFAILED_ERROR,
+    ICAL_ALLOCATION_ERROR,
+    ICAL_MALFORMEDDATA_ERROR, 
+    ICAL_PARSE_ERROR,
+    ICAL_INTERNAL_ERROR, /* Like assert --internal consist. prob */
+    ICAL_FILE_ERROR,
+    ICAL_USAGE_ERROR,
+    ICAL_UNIMPLEMENTED_ERROR,
+    ICAL_UNKNOWN_ERROR  /* Used for problems in input to icalerror_strerror()*/
+
+} icalerrorenum;
+
+icalerrorenum * icalerrno_return(void);
+#define icalerrno (*(icalerrno_return()))
+
+#cmakedefine LIBICAL_STATIC 1
+
+/** If true, libicl aborts after a call to icalerror_set_error
+ *
+ *  @warning NOT THREAD SAFE -- recommended that you do not change
+ *           this in a multithreaded program.
+ */
+#ifdef _MSC_VER
+  #if defined(LIBICAL_STATIC)
+    #define LIBICAL_EXPORT extern
+  #elif defined(BUILD_LIBICALDLL)
+    #define LIBICAL_EXPORT __declspec(dllexport)
+  #else
+    #define LIBICAL_EXPORT __declspec(dllimport)
+  #endif
+#else
+  #define LIBICAL_EXPORT extern
+#endif
+
+LIBICAL_EXPORT int icalerror_errors_are_fatal;
+
+/* Warning messages */
+
+#ifdef __GNUC__ca
+#define icalerror_warn(message) {fprintf(stderr,"%s(), %s:%d: %s\n",__FUNCTION__,__FILE__,__LINE__,message);}
+#else /* __GNU_C__ */
+#define icalerror_warn(message) {fprintf(stderr,"%s:%d: %s\n",__FILE__,__LINE__,message);}
+#endif /* __GNU_C__ */
+
+
+void icalerror_clear_errno(void);
+void _icalerror_set_errno(icalerrorenum);
+
+/* Make an individual error fatal or non-fatal. */
+typedef enum icalerrorstate { 
+    ICAL_ERROR_FATAL,     /* Not fata */
+    ICAL_ERROR_NONFATAL,  /* Fatal */
+    ICAL_ERROR_DEFAULT,   /* Use the value of icalerror_errors_are_fatal*/
+    ICAL_ERROR_UNKNOWN    /* Asked state for an unknown error type */
+} icalerrorstate ;
+
+const char* icalerror_strerror(icalerrorenum e);
+const char* icalerror_perror(void);
+void ical_bt(void);
+void icalerror_set_error_state( icalerrorenum error, icalerrorstate);
+icalerrorstate icalerror_get_error_state( icalerrorenum error);
+
+#ifndef ICAL_SETERROR_ISFUNC
+#define icalerror_set_errno(x) \
+icalerrno = x; \
+if(icalerror_get_error_state(x)==ICAL_ERROR_FATAL || \
+   (icalerror_get_error_state(x)==ICAL_ERROR_DEFAULT && \
+    icalerror_errors_are_fatal == 1 )){ \
+   icalerror_warn(icalerror_strerror(x)); \
+   ical_bt(); \
+   assert(0); \
+} }
+#else
+void icalerror_set_errno(icalerrorenum x); 
+#endif
+
+#ifdef ICAL_ERRORS_ARE_FATAL
+#undef NDEBUG
+#endif
+
+#define icalerror_check_value_type(value,type);
+#define icalerror_check_property_type(value,type);
+#define icalerror_check_parameter_type(value,type);
+#define icalerror_check_component_type(value,type);
+
+/* Assert with a message */
+#ifdef ICAL_ERRORS_ARE_FATAL
+
+#ifdef __GNUC__
+#define icalerror_assert(test,message) if(!(test)){fprintf(stderr,"%s(), %s:%d: %s\n",__FUNCTION__,__FILE__,__LINE__,message);icalerror_stop_here(); abort();}
+#else /*__GNUC__*/
+#define icalerror_assert(test,message) if(!(test)){fprintf(stderr,"%s:%d: %s\n",__FILE__,__LINE__,message);icalerror_stop_here(); abort();}
+#endif /*__GNUC__*/
+
+#else /* ICAL_ERRORS_ARE_FATAL */
+#define icalerror_assert(test,message) 
+#endif /* ICAL_ERRORS_ARE_FATAL */
+
+/* Check & abort if check fails */
+#define icalerror_check_arg(test,arg) if(!(test)) { icalerror_set_errno(ICAL_BADARG_ERROR); }
+
+/* Check & return void if check fails*/
+#define icalerror_check_arg_rv(test,arg) if(!(test)) {icalerror_set_errno(ICAL_BADARG_ERROR); return; }
+
+/* Check & return 0 if check fails*/
+#define icalerror_check_arg_rz(test,arg) if(!(test)) { icalerror_set_errno(ICAL_BADARG_ERROR); return 0;}
+
+/* Check & return an error if check fails*/
+#define icalerror_check_arg_re(test,arg,error) if(!(test)) { icalerror_stop_here(); assert(0); return error;}
+
+/* Check & return something*/
+#define icalerror_check_arg_rx(test,arg,x) if(!(test)) { icalerror_set_errno(ICAL_BADARG_ERROR); return x;}
+
+
+
+/* String interfaces to set an error to NONFATAL and restore it to its
+   original value */
+
+icalerrorstate icalerror_supress(const char* error);
+void icalerror_restore(const char* error, icalerrorstate es);
+
+
+#endif /* !ICALERROR_H */
+
+
+
diff -Nru libical-0.44.orig/src/libical/icalperiod.c libical-0.44/src/libical/icalperiod.c
--- libical-0.44.orig/src/libical/icalperiod.c	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/icalperiod.c	2010-11-20 12:20:34.183136900 +0100
@@ -117,8 +117,8 @@
 char* icalperiodtype_as_ical_string_r(struct icalperiodtype p)
 {
 
-    const char* start;
-    const char* end;
+    char* start;
+    char* end;
 
     char *buf;
     size_t buf_size = 40;
diff -Nru libical-0.44.orig/src/libical/icalrecur.c libical-0.44/src/libical/icalrecur.c
--- libical-0.44.orig/src/libical/icalrecur.c	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/icalrecur.c	2010-11-20 12:20:34.198736900 +0100
@@ -1593,11 +1593,12 @@
       int day;
       int days_in_month = icaltime_days_in_month(impl->last.month,
                                                    impl->last.year);
-      assert( BYDAYPTR[0]!=ICAL_RECURRENCE_ARRAY_MAX);
-
       int set_pos_counter = 0;
       int set_pos_total = 0;
+      int found = 0;
       
+      assert( BYDAYPTR[0]!=ICAL_RECURRENCE_ARRAY_MAX);
+
       /* Count the past positions for the BYSETPOS calculation */
       if(has_by_data(impl,BY_SET_POS)){
           int last_day = impl->last.day;
@@ -1612,8 +1613,6 @@
 	  }
           impl->last.day = last_day;
       }
-
-      int found = 0;
       
       for(day = impl->last.day+1; day <= days_in_month; day++){
           impl->last.day = day;
@@ -1927,8 +1926,8 @@
     /* BY_WEEK_NO together with BY_MONTH - may conflict, in this case BY_MONTH wins */
     if( (flags & 1<<BY_MONTH) && (flags & 1<<BY_WEEK_NO) ){
         int valid_weeks[ICAL_BY_WEEKNO_SIZE];
-        memset(valid_weeks, 0, sizeof(valid_weeks));
         int valid = 1;    
+        memset(valid_weeks, 0, sizeof(valid_weeks));
         t.year = year;
         t.is_date = 1;
 
diff -Nru libical-0.44.orig/src/libical/icaltimezone.c libical-0.44/src/libical/icaltimezone.c
--- libical-0.44.orig/src/libical/icaltimezone.c	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/icaltimezone.c	2010-11-20 12:36:27.652952400 +0100
@@ -45,7 +45,9 @@
 #include <sys/stat.h>
 
 #ifdef WIN32
+#ifndef _WIN32_WCE
 #include <mbstring.h>
+#endif
 #include <windows.h>
 /* Undef the similar macro from pthread.h, it doesn't check if
  * gmtime() returns NULL.
@@ -54,6 +56,12 @@
 
 /* The gmtime() in Microsoft's C library is MT-safe */
 #define gmtime_r(tp,tmp) (gmtime(tp)?(*(tmp)=*gmtime(tp),(tmp)):0)
+
+// MSVC lacks the POSIX macro S_ISDIR, however it's a trivial one:
+#ifndef S_ISDIR
+#define S_ISDIR(m) (((m) & _S_IFMT) == _S_IFDIR)
+#endif
+
 #endif
 
 /** This is the toplevel directory where the timezone data is installed in. */
@@ -1947,10 +1955,18 @@
 	return zone_files_directory == NULL ? ZONEINFO_DIRECTORY : zone_files_directory;
 #else
 	wchar_t wbuffer[1000];
+#ifndef _WIN32_WCE
 	char buffer[1000], zoneinfodir[1000], dirname[1000];
+#else
+    wchar_t zoneinfodir[1000], dirname[1000];
+#endif
 	int used_default;
 	static char *cache = NULL;
+#ifndef _WIN32_WCE
 	char *dirslash, *zislash;
+#else
+    wchar_t *dirslash, *zislash;
+#endif
 	struct stat st;
 
 	if (zone_files_directory)
@@ -1963,6 +1979,8 @@
 	if (!GetModuleFileNameW (NULL, wbuffer, sizeof (wbuffer) / sizeof (wbuffer[0])))
 	    return ZONEINFO_DIRECTORY;
 
+/*wince supports only unicode*/
+#ifndef _WIN32_WCE
 	/* Convert to system codepage */
 	if (!WideCharToMultiByte (CP_ACP, 0, wbuffer, -1, buffer, sizeof (buffer),
 				  NULL, &used_default) ||
@@ -1975,6 +1993,7 @@
 		used_default)
 		return ZONEINFO_DIRECTORY;
 	}
+#endif
 	/* Look for the zoneinfo directory somewhere in the path where
 	 * the app is installed. If the path to the app is
 	 *
@@ -2010,10 +2029,38 @@
 	 */
 
 	/* Strip away basename of app .exe first */
+#ifndef _WIN32_WCE
 	dirslash = _mbsrchr (buffer, '\\');
+#else
+    dirslash = wcsrchr (wbuffer, L'\\');
+#endif
 	if (dirslash)
+#ifndef _WIN32_WCE
 	    *dirslash = '\0';
+#else
+	    *dirslash = L'\0';
+#endif
 
+#ifdef _WIN32_WCE
+	while ((dirslash = wcsrchr (wbuffer, '\\'))) {
+	    /* Strip one more directory from app .exe location */
+	    *dirslash = L'\0';
+	    
+        MultiByteToWideChar(CP_ACP,0,ZONEINFO_DIRECTORY,-1,zoneinfodir,1000);
+        
+	    while ((zislash = wcschr (zoneinfodir, L'/'))) {
+		*zislash = L'.';
+		wcscpy (dirname, wbuffer);
+		wcscat (dirname, "/");
+		wcscat (dirname, zislash + 1);
+		if (stat (dirname, &st) == 0 &&
+		    S_ISDIR (st.st_mode)) {
+		    cache = wce_wctomb (dirname);
+		    return cache;
+		}
+	    }
+	}
+#else
 	while ((dirslash = _mbsrchr (buffer, '\\'))) {
 	    /* Strip one more directory from app .exe location */
 	    *dirslash = '\0';
@@ -2031,6 +2078,7 @@
 		}
 	    }
 	}
+#endif
 	return ZONEINFO_DIRECTORY;
 #endif
 }
diff -Nru libical-0.44.orig/src/libical/icaltz-util.c libical-0.44/src/libical/icaltz-util.c
--- libical-0.44.orig/src/libical/icaltz-util.c	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/icaltz-util.c	2010-11-20 12:20:34.214337000 +0100
@@ -297,12 +297,16 @@
 	icalproperty *icalprop;
 	icaltimetype dtstart, icaltime;
 	struct icalrecurrencetype ical_recur;
+	const char* basedir;
 	       
-	if (!zdir) 
-		set_zone_directory ();
+	basedir = icaltzutil_get_zone_directory();
+	if (!basedir) {
+		icalerror_set_errno (ICAL_FILE_ERROR);
+		return NULL;
+	}
 	
-	full_path = (char *) malloc (strlen (zdir) + strlen (location) + 2);
-	sprintf (full_path,"%s/%s",zdir, location);
+	full_path = (char *) malloc (strlen (basedir) + strlen (location) + 2);
+	sprintf (full_path,"%s/%s",basedir, location);
 
 	if ((f = fopen (full_path, "rb")) == 0) {
 		icalerror_set_errno (ICAL_FILE_ERROR);
diff -Nru libical-0.44.orig/src/libical/icalvalue.c libical-0.44/src/libical/icalvalue.c
--- libical-0.44.orig/src/libical/icalvalue.c	2009-09-27 04:38:51.000000000 +0200
+++ libical-0.44/src/libical/icalvalue.c	2010-11-20 12:20:34.214337000 +0100
@@ -307,7 +307,9 @@
 #define TMP_NUM_SIZE 100
     char *start=NULL, *end=NULL, *cur=(char*)from ;
     char tmp_buf[TMP_NUM_SIZE+1] ; /*hack*/
+#ifndef _WIN32_WCE
     struct lconv *loc_data = localeconv () ;
+#endif
     int i=0 ;
 
     /*sanity checks*/
@@ -344,6 +346,7 @@
      * care to have the (optional) decimal separator be the one
      * of the current locale.
      */
+#ifndef _WIN32_WCE
     for (i=0 ; i < end - from ;++i) {
         if (start[i] == '.'
             && loc_data
@@ -356,6 +359,9 @@
             tmp_buf[i] = start[i] ;
         }
     }
+#else
+    GetNumberFormat(LOCALE_SYSTEM_DEFAULT,0,start, NULL, tmp_buf,TMP_NUM_SIZE);
+#endif
     if (to)
         *to = end ;
     *result = atof(tmp_buf) ;
diff -Nru libical-0.44.orig/src/libicalss/CMakeLists.txt libical-0.44/src/libicalss/CMakeLists.txt
--- libical-0.44.orig/src/libicalss/CMakeLists.txt	2009-09-27 04:38:52.000000000 +0200
+++ libical-0.44/src/libicalss/CMakeLists.txt	2010-11-20 12:20:34.214337000 +0100
@@ -30,7 +30,9 @@
 
 add_custom_target(icalss-header DEPENDS
   ${CMAKE_BINARY_DIR}/src/libical/icalss.h
+  ${CMAKE_BINARY_DIR}/src/libical/ical.h
 )
+add_dependencies(icalss-header ical-header)
 
 ########### next target ###############
 
@@ -69,16 +71,22 @@
     list(APPEND icalss_LIB_SRCS ../icalss.def)
 endif(MSVC)
 
-add_library(icalss SHARED ${icalss_LIB_SRCS})
+add_library(icalss ${LIBRARY_TYPE} ${icalss_LIB_SRCS})
 add_library(icalss-static STATIC ${icalss_LIB_SRCS})
 
 add_dependencies(icalss icalss-header)
+add_dependencies(icalss-static icalss-header)
 
 target_link_libraries(icalss ical)
 
+if(MSVC)
+  set_target_properties(icalss PROPERTIES OUTPUT_NAME "libicalss")
+  set_target_properties(icalss-static PROPERTIES OUTPUT_NAME "libicalss-static")
+else(MSVC)
+  set_target_properties(icalss-static PROPERTIES OUTPUT_NAME "icalss")
+endif(MSVC)
 set_target_properties(icalss PROPERTIES VERSION ${LIBICAL_LIB_VERSION_STRING} SOVERSION ${LIBICAL_LIB_MAJOR_VERSION})
 set_target_properties(icalss PROPERTIES CLEAN_DIRECT_OUTPUT 1)
-set_target_properties(icalss-static PROPERTIES OUTPUT_NAME "icalss")
 set_target_properties(icalss-static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
 
 install(TARGETS icalss icalss-static ${INSTALL_TARGETS_DEFAULT_ARGS})
diff -Nru libical-0.44.orig/src/libicalss/icalfileset.c libical-0.44/src/libicalss/icalfileset.c
--- libical-0.44.orig/src/libicalss/icalfileset.c	2009-09-27 04:38:52.000000000 +0200
+++ libical-0.44/src/libicalss/icalfileset.c	2010-11-20 12:20:34.214337000 +0100
@@ -38,8 +38,10 @@
 #include <unistd.h> /* for stat, getpid */
 #else
 #include <io.h>
+#ifndef _WIN32_WCE
 #include <share.h>
 #endif
+#endif
 #include <stdlib.h>
 #include <string.h>
 #include <fcntl.h> /* for fcntl */
@@ -56,6 +58,10 @@
 #define S_ISREG(mode)    _S_ISTYPE((mode), _S_IFREG)
 #endif
 
+#ifdef _WIN32_WCE
+#include <winbase.h>
+#endif
+
 /** Default options used when NULL is passed to icalset_new() **/
 icalfileset_options icalfileset_options_default = {O_RDWR|O_CREAT, 0644, 0};
 
@@ -366,6 +372,10 @@
     icalcomponent *c;
     off_t write_size=0;
     icalfileset *fset = (icalfileset*) set;
+#ifdef _WIN32_WCE
+    wchar_t *wtmp=0;
+    PROCESS_INFORMATION pi;
+#endif
 
     icalerror_check_arg_re((fset!=0),"set",ICAL_BADARG_ERROR);  
     
@@ -378,18 +388,28 @@
     
     if (fset->options.safe_saves == 1) {
 #ifndef WIN32
-	char *quoted_file = shell_quote(fset->path);
-	snprintf(tmp,ICAL_PATH_MAX,"cp '%s' '%s.bak'",fset->path, fset->path);
-	free(quoted_file);
+        char *quoted_file = shell_quote(fset->path);
+        snprintf(tmp,ICAL_PATH_MAX,"cp '%s' '%s.bak'",fset->path, fset->path);
+        free(quoted_file);
 #else
-	snprintf(tmp,ICAL_PATH_MAX,"copy %s %s.bak", fset->path, fset->path);
+        snprintf(tmp,ICAL_PATH_MAX,"copy %s %s.bak", fset->path, fset->path);
 #endif
 
-	if(system(tmp) < 0){
-	    icalerror_set_errno(ICAL_FILE_ERROR);
-	    return ICAL_FILE_ERROR;
-	}
+#ifndef _WIN32_WCE
+        if(system(tmp) < 0){
+#else
+
+        wtmp = wce_mbtowc(tmp);
+
+        if (CreateProcess (wtmp, L"", NULL, NULL, FALSE, 0, NULL, NULL, NULL,&pi)){
+#endif
+            icalerror_set_errno(ICAL_FILE_ERROR);
+            return ICAL_FILE_ERROR;
+        }
     }
+#ifdef _WIN32_WCE
+    free(wtmp);
+#endif
 
     if(lseek(fset->fd, 0, SEEK_SET) < 0){
 	icalerror_set_errno(ICAL_FILE_ERROR);
@@ -422,7 +442,11 @@
 	return ICAL_FILE_ERROR;
     }
 #else
+#ifndef _WIN32_WCE
 	chsize( fset->fd, tell( fset->fd ) );
+#else
+    SetEndOfFile(fset->fd);
+#endif
 #endif
     
     return ICAL_NO_ERROR;
diff -Nru libical-0.44.orig/src/libicalss/icalsslexer.c libical-0.44/src/libicalss/icalsslexer.c
--- libical-0.44.orig/src/libicalss/icalsslexer.c	2009-09-27 04:38:52.000000000 +0200
+++ libical-0.44/src/libicalss/icalsslexer.c	2010-11-20 12:20:34.229937000 +0100
@@ -39,6 +39,10 @@
 #include <errno.h>
 #include <stdlib.h>
 
+#ifdef _WIN32_WCE
+#include <io.h>
+#endif
+
 /* end standard C headers. */
 
 /* flex integer type definitions */
diff -Nru libical-0.44.orig/src/libicalvcal/CMakeLists.txt libical-0.44/src/libicalvcal/CMakeLists.txt
--- libical-0.44.orig/src/libicalvcal/CMakeLists.txt	2009-09-27 04:38:52.000000000 +0200
+++ libical-0.44/src/libicalvcal/CMakeLists.txt	2010-11-20 12:20:34.229937000 +0100
@@ -27,14 +27,22 @@
     list(APPEND icalvcal_LIB_SRCS ../icalvcal.def)
 endif(MSVC)
 
-add_library(icalvcal SHARED ${icalvcal_LIB_SRCS})
+add_library(icalvcal ${LIBRARY_TYPE} ${icalvcal_LIB_SRCS})
 add_library(icalvcal-static STATIC ${icalvcal_LIB_SRCS})
 
+add_dependencies(icalvcal ical-header)
+add_dependencies(icalvcal-static ical-header)
+
 target_link_libraries(icalvcal ical)
 
+if(MSVC)
+  set_target_properties(icalvcal PROPERTIES OUTPUT_NAME "libicalvcal")
+  set_target_properties(icalvcal-static PROPERTIES OUTPUT_NAME "libicalvcal-static")
+else(MSVC)
+  set_target_properties(icalvcal-static PROPERTIES OUTPUT_NAME "icalvcal")
+endif(MSVC)
 set_target_properties(icalvcal PROPERTIES VERSION ${LIBICAL_LIB_VERSION_STRING} SOVERSION ${LIBICAL_LIB_MAJOR_VERSION})
 set_target_properties(icalvcal PROPERTIES CLEAN_DIRECT_OUTPUT 1)
-set_target_properties(icalvcal-static PROPERTIES OUTPUT_NAME "icalvcal")
 set_target_properties(icalvcal-static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
 
 install(TARGETS icalvcal icalvcal-static ${INSTALL_TARGETS_DEFAULT_ARGS})
diff -Nru libical-0.44.orig/src/libicalvcal/icalvcal.c libical-0.44/src/libicalvcal/icalvcal.c
--- libical-0.44.orig/src/libicalvcal/icalvcal.c	2009-09-27 04:38:52.000000000 +0200
+++ libical-0.44/src/libicalvcal/icalvcal.c	2010-11-20 12:20:34.245537000 +0100
@@ -51,6 +51,10 @@
 #define strcasecmp	stricmp
 #endif
 
+#ifdef _WIN32_WCE
+#undef IGNORE
+#endif
+
 enum datatype {
     COMPONENT,
     PROPERTY,
diff -Nru libical-0.44.orig/src/python/CMakeLists.txt libical-0.44/src/python/CMakeLists.txt
--- libical-0.44.orig/src/python/CMakeLists.txt	2009-09-27 04:38:49.000000000 +0200
+++ libical-0.44/src/python/CMakeLists.txt	2010-11-20 12:20:34.245537000 +0100
@@ -7,7 +7,7 @@
    LibicalWrap.c
 )
 
-add_library(LibicalWrap SHARED ${LibicalWrap_LIB_SRCS})
+add_library(LibicalWrap ${LIBRARY_TYPE} ${LibicalWrap_LIB_SRCS})
 
 target_link_libraries(LibicalWrap)
 
diff -Nru libical-0.44.orig/src/test/regression.c libical-0.44/src/test/regression.c
--- libical-0.44.orig/src/test/regression.c	2009-09-27 04:38:49.000000000 +0200
+++ libical-0.44/src/test/regression.c	2010-11-20 12:20:34.261137100 +0100
@@ -54,10 +54,6 @@
 #endif
 #include <sys/types.h> /* For wait pid */
 
-#ifdef WIN32
-typedef int pid_t;
-#endif
-
 
 /* For GNU libc, strcmp appears to be a macro, so using strcmp in
  assert results in incomprehansible assertion messages. This

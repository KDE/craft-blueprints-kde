diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x '*\.o' -x '*\.pyc' -x CMakeLists.txt.user libpng-1.6.37.orig/CMakeLists.txt libpng-1.6.37/CMakeLists.txt
--- libpng-1.6.37.orig/CMakeLists.txt	2020-11-06 21:35:19.379498200 +0100
+++ libpng-1.6.37/CMakeLists.txt	2020-11-06 21:34:46.951988900 +0100
@@ -534,8 +534,9 @@
   add_dependencies(png genfiles)
   if(MSVC)
     # msvc does not append 'lib' - do it here to have consistent name
-    set_target_properties(png PROPERTIES PREFIX "lib")
-    set_target_properties(png PROPERTIES IMPORT_PREFIX "lib")
+    set(LIBPNG_IMPORT_PREFIX "lib")
+    set_target_properties(png PROPERTIES PREFIX ${LIBPNG_IMPORT_PREFIX})
+    set_target_properties(png PROPERTIES IMPORT_PREFIX ${LIBPNG_IMPORT_PREFIX})
   endif()
   target_link_libraries(png ${ZLIB_LIBRARY} ${M_LIBRARY})
 
@@ -821,20 +822,18 @@
 # We use the same files like ./configure, so we have to set its vars.
 # Only do this on Windows for Cygwin - the files don't make much sense outside
 # of a UNIX look-alike.
-if(NOT WIN32 OR CYGWIN OR MINGW)
-  set(prefix      ${CMAKE_INSTALL_PREFIX})
-  set(exec_prefix ${CMAKE_INSTALL_PREFIX})
-  set(libdir      ${CMAKE_INSTALL_FULL_LIBDIR})
-  set(includedir  ${CMAKE_INSTALL_FULL_INCLUDEDIR})
-  set(LIBS        "-lz -lm")
-  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng.pc.in
-    ${CMAKE_CURRENT_BINARY_DIR}/${PNGLIB_NAME}.pc @ONLY)
-  create_symlink(libpng.pc FILE ${PNGLIB_NAME}.pc)
-
-  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng-config.in
-    ${CMAKE_CURRENT_BINARY_DIR}/${PNGLIB_NAME}-config @ONLY)
-  create_symlink(libpng-config FILE ${PNGLIB_NAME}-config)
-endif()
+set(prefix      ${CMAKE_INSTALL_PREFIX})
+set(exec_prefix ${CMAKE_INSTALL_PREFIX})
+set(libdir      ${CMAKE_INSTALL_FULL_LIBDIR})
+set(includedir  ${CMAKE_INSTALL_FULL_INCLUDEDIR})
+set(LIBS        "-lz -lm")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng.pc.in
+${CMAKE_CURRENT_BINARY_DIR}/${PNGLIB_NAME}.pc @ONLY)
+create_symlink(libpng.pc FILE ${PNGLIB_NAME}.pc)
+
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng-config.in
+${CMAKE_CURRENT_BINARY_DIR}/${PNGLIB_NAME}-config @ONLY)
+create_symlink(libpng-config FILE ${PNGLIB_NAME}-config)
 
 # SET UP LINKS
 if(PNG_SHARED)
@@ -902,7 +901,6 @@
   install(FILES libpng.3 libpngpf.3 DESTINATION ${PNG_MAN_DIR}/man3)
   install(FILES png.5 DESTINATION ${PNG_MAN_DIR}/man5)
   # Install pkg-config files
-  if(NOT CMAKE_HOST_WIN32 OR CYGWIN OR MINGW)
     install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libpng.pc
             DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
     install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/libpng-config
@@ -911,7 +909,6 @@
             DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
     install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${PNGLIB_NAME}-config
             DESTINATION bin)
-  endif()
 endif()
 
 # Create an export file that CMake users can include() to import our targets.
diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x '*\.o' -x '*\.pyc' -x CMakeLists.txt.user libpng-1.6.37.orig/libpng.pc.in libpng-1.6.37/libpng.pc.in
--- libpng-1.6.37.orig/libpng.pc.in	2019-04-14 20:10:32.000000000 +0200
+++ libpng-1.6.37/libpng.pc.in	2020-11-06 21:35:14.600498000 +0100
@@ -7,6 +7,6 @@
 Description: Loads and saves PNG files
 Version: @PNGLIB_VERSION@
 Requires: zlib
-Libs: -L${libdir} -lpng@PNGLIB_MAJOR@@PNGLIB_MINOR@
+Libs: -L${libdir} -l@LIBPNG_IMPORT_PREFIX@png@PNGLIB_MAJOR@@PNGLIB_MINOR@@CMAKE_DEBUG_POSTFIX@
 Libs.private: @LIBS@
 Cflags: -I${includedir}
